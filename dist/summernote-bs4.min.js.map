{"version":3,"file":"summernote-bs4.min.js","sources":["../src/js/summernote-en-US.js","../src/js/core/env.js","../src/js/core/func.js","../src/js/core/lists.js","../src/js/core/dom.js","../src/js/Context.js","../src/js/summernote.js","../src/js/core/range.js","../src/js/core/key.js","../src/js/core/async.js","../src/js/editing/History.js","../src/js/editing/Style.js","../src/js/editing/Bullet.js","../src/js/editing/Typing.js","../src/js/editing/Table.js","../src/js/module/Editor.js","../src/js/module/Clipboard.js","../src/js/module/Dropzone.js","../src/js/module/Codeview.js","../src/js/module/Statusbar.js","../src/js/module/Fullscreen.js","../src/js/module/Handle.js","../src/js/module/AutoLink.js","../src/js/module/AutoSync.js","../src/js/module/AutoReplace.js","../src/js/module/Placeholder.js","../src/js/module/Buttons.js","../src/js/module/Toolbar.js","../src/js/module/LinkDialog.js","../src/js/module/LinkPopover.js","../src/js/module/ImageDialog.js","../src/js/module/ImagePopover.js","../src/js/module/TablePopover.js","../src/js/module/VideoDialog.js","../src/js/module/HelpDialog.js","../src/js/module/AirPopover.js","../src/js/module/HintPopover.js","../src/js/settings.js","../src/js/renderer.js","../src/styles/bs4/summernote-bs4.js"],"sourcesContent":["import $ from 'jquery';\n\n$.summernote = $.summernote || {\n  lang: {},\n};\n\n$.extend(true, $.summernote.lang, {\n  'en-US': {\n    font: {\n      bold: 'Bold',\n      italic: 'Italic',\n      underline: 'Underline',\n      clear: 'Remove Font Style',\n      height: 'Line Height',\n      name: 'Font Family',\n      strikethrough: 'Strikethrough',\n      subscript: 'Subscript',\n      superscript: 'Superscript',\n      size: 'Font Size',\n      sizeunit: 'Font Size Unit',\n    },\n    image: {\n      image: 'Picture',\n      insert: 'Insert Image',\n      resizeFull: 'Resize full',\n      resizeHalf: 'Resize half',\n      resizeQuarter: 'Resize quarter',\n      resizeNone: 'Original size',\n      floatLeft: 'Float Left',\n      floatRight: 'Float Right',\n      floatNone: 'Remove float',\n      shapeRounded: 'Shape: Rounded',\n      shapeCircle: 'Shape: Circle',\n      shapeThumbnail: 'Shape: Thumbnail',\n      shapeNone: 'Shape: None',\n      dragImageHere: 'Drag image or text here',\n      dropImage: 'Drop image or Text',\n      selectFromFiles: 'Select from files',\n      maximumFileSize: 'Maximum file size',\n      maximumFileSizeError: 'Maximum file size exceeded.',\n      url: 'Image URL',\n      remove: 'Remove Image',\n      original: 'Original',\n    },\n    video: {\n      video: 'Video',\n      videoLink: 'Video Link',\n      insert: 'Insert Video',\n      url: 'Video URL',\n      providers: '(YouTube, Google Drive, Vimeo, Vine, Instagram, DailyMotion, Youku, Peertube)',\n    },\n    link: {\n      link: 'Link',\n      insert: 'Insert Link',\n      unlink: 'Unlink',\n      edit: 'Edit',\n      textToDisplay: 'Text to display',\n      url: 'To what URL should this link go?',\n      openInNewWindow: 'Open in new window',\n    },\n    table: {\n      table: 'Table',\n      addRowAbove: 'Add row above',\n      addRowBelow: 'Add row below',\n      addColLeft: 'Add column left',\n      addColRight: 'Add column right',\n      delRow: 'Delete row',\n      delCol: 'Delete column',\n      delTable: 'Delete table',\n    },\n    hr: {\n      insert: 'Insert Horizontal Rule',\n    },\n    style: {\n      style: 'Style',\n      p: 'Normal',\n      blockquote: 'Quote',\n      pre: 'Code',\n      h1: 'Header 1',\n      h2: 'Header 2',\n      h3: 'Header 3',\n      h4: 'Header 4',\n      h5: 'Header 5',\n      h6: 'Header 6',\n    },\n    lists: {\n      unordered: 'Unordered list',\n      ordered: 'Ordered list',\n    },\n    options: {\n      help: 'Help',\n      fullscreen: 'Full Screen',\n      codeview: 'Code View',\n    },\n    paragraph: {\n      paragraph: 'Paragraph',\n      outdent: 'Outdent',\n      indent: 'Indent',\n      left: 'Align left',\n      center: 'Align center',\n      right: 'Align right',\n      justify: 'Justify full',\n    },\n    color: {\n      recent: 'Recent Color',\n      more: 'More Color',\n      background: 'Background Color',\n      foreground: 'Text Color',\n      transparent: 'Transparent',\n      setTransparent: 'Set transparent',\n      reset: 'Reset',\n      resetToDefault: 'Reset to default',\n      cpSelect: 'Select',\n    },\n    shortcut: {\n      shortcuts: 'Keyboard shortcuts',\n      close: 'Close',\n      textFormatting: 'Text formatting',\n      action: 'Action',\n      paragraphFormatting: 'Paragraph formatting',\n      documentStyle: 'Document Style',\n      extraKeys: 'Extra keys',\n    },\n    help: {\n      'escape': 'Escape',\n      'insertParagraph': 'Insert Paragraph',\n      'undo': 'Undo the last command',\n      'redo': 'Redo the last command',\n      'tab': 'Tab',\n      'untab': 'Untab',\n      'bold': 'Set a bold style',\n      'italic': 'Set a italic style',\n      'underline': 'Set a underline style',\n      'strikethrough': 'Set a strikethrough style',\n      'removeFormat': 'Clean a style',\n      'justifyLeft': 'Set left align',\n      'justifyCenter': 'Set center align',\n      'justifyRight': 'Set right align',\n      'justifyFull': 'Set full align',\n      'insertUnorderedList': 'Toggle unordered list',\n      'insertOrderedList': 'Toggle ordered list',\n      'outdent': 'Outdent on current paragraph',\n      'indent': 'Indent on current paragraph',\n      'formatPara': 'Change current block\\'s format as a paragraph(P tag)',\n      'formatH1': 'Change current block\\'s format as H1',\n      'formatH2': 'Change current block\\'s format as H2',\n      'formatH3': 'Change current block\\'s format as H3',\n      'formatH4': 'Change current block\\'s format as H4',\n      'formatH5': 'Change current block\\'s format as H5',\n      'formatH6': 'Change current block\\'s format as H6',\n      'insertHorizontalRule': 'Insert horizontal rule',\n      'linkDialog.show': 'Show Link Dialog',\n    },\n    history: {\n      undo: 'Undo',\n      redo: 'Redo',\n    },\n    specialChar: {\n      specialChar: 'SPECIAL CHARACTERS',\n      select: 'Select Special characters',\n    },\n    output: {\n      noSelection: 'No Selection Made!',\n    },\n  },\n});\n","import $ from 'jquery';\n\n/**\n * returns whether font is installed or not.\n *\n * @param {String} fontName\n * @return {Boolean}\n */\nconst genericFontFamilies = ['sans-serif', 'serif', 'monospace', 'cursive', 'fantasy'];\n\nfunction validFontName(fontName) {\n  return ($.inArray(fontName.toLowerCase(), genericFontFamilies) === -1) ? `'${fontName}'` : fontName;\n}\n\nfunction createIsFontInstalledFunc() {\n  const testText = \"mw\";\n  const fontSize = \"20px\";\n  const canvasWidth = 40;\n  const canvasHeight = 20;\n\n  var canvas = document.createElement(\"canvas\");\n  var context = canvas.getContext(\"2d\", { willReadFrequently: true });\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  context.textAlign = \"center\";\n  context.fillStyle = \"black\";\n  context.textBaseline = \"middle\";\n\n  function getPxInfo(font, testFontName) {\n    context.clearRect(0, 0, canvasWidth, canvasHeight);\n    context.font = fontSize + ' ' + validFontName(font) + ', \"' + testFontName + '\"';\n    context.fillText(testText, canvasWidth / 2, canvasHeight / 2);\n    // Get pixel information\n    var pxInfo = context.getImageData(0, 0, canvasWidth, canvasHeight).data;\n    return pxInfo.join(\"\");\n  }\n\n  return (fontName) => {\n    const testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\n    let testInfo = getPxInfo(testFontName, testFontName);\n    let fontInfo = getPxInfo(fontName, testFontName);\n    return testInfo !== fontInfo;\n  };\n}\n\nconst userAgent = navigator.userAgent;\nconst isMSIE = /MSIE|Trident/i.test(userAgent);\nlet browserVersion;\nif (isMSIE) {\n  let matches = /MSIE (\\d+[.]\\d+)/.exec(userAgent);\n  if (matches) {\n    browserVersion = parseFloat(matches[1]);\n  }\n  matches = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(userAgent);\n  if (matches) {\n    browserVersion = parseFloat(matches[1]);\n  }\n}\n\nconst isEdge = /Edge\\/\\d+/.test(userAgent);\n\nconst isSupportTouch =\n  (('ontouchstart' in window) ||\n   (navigator.MaxTouchPoints > 0) ||\n   (navigator.msMaxTouchPoints > 0));\n\n// [workaround] IE doesn't have input events for contentEditable\n// - see: https://goo.gl/4bfIvA\nconst inputEventName = (isMSIE) ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\n\n/**\n * @class core.env\n *\n * Object which check platform and agent\n *\n * @singleton\n * @alternateClassName env\n */\nexport default {\n  isMac: navigator.appVersion.indexOf('Mac') > -1,\n  isMSIE,\n  isEdge,\n  isFF: !isEdge && /firefox/i.test(userAgent),\n  isPhantom: /PhantomJS/i.test(userAgent),\n  isWebkit: !isEdge && /webkit/i.test(userAgent),\n  isChrome: !isEdge && /chrome/i.test(userAgent),\n  isSafari: !isEdge && /safari/i.test(userAgent) && (!/chrome/i.test(userAgent)),\n  browserVersion,\n  isSupportTouch,\n  isFontInstalled: createIsFontInstalledFunc(),\n  isW3CRangeSupport: !!document.createRange,\n  inputEventName,\n  genericFontFamilies,\n  validFontName,\n};\n","import $ from 'jquery';\n\n/**\n * @class core.func\n *\n * func utils (for high-order func's arg)\n *\n * @singleton\n * @alternateClassName func\n */\nfunction eq(itemA) {\n  return function(itemB) {\n    return itemA === itemB;\n  };\n}\n\nfunction eq2(itemA, itemB) {\n  return itemA === itemB;\n}\n\nfunction peq2(propName) {\n  return function(itemA, itemB) {\n    return itemA[propName] === itemB[propName];\n  };\n}\n\nfunction ok() {\n  return true;\n}\n\nfunction fail() {\n  return false;\n}\n\nfunction not(f) {\n  return function() {\n    return !f.apply(f, arguments);\n  };\n}\n\nfunction and(fA, fB) {\n  return function(item) {\n    return fA(item) && fB(item);\n  };\n}\n\nfunction self(a) {\n  return a;\n}\n\nfunction invoke(obj, method) {\n  return function() {\n    return obj[method].apply(obj, arguments);\n  };\n}\n\nlet idCounter = 0;\n\n/**\n * reset globally-unique id\n *\n */\nfunction resetUniqueId() {\n  idCounter = 0;\n}\n\n/**\n * generate a globally-unique id\n *\n * @param {String} [prefix]\n */\nfunction uniqueId(prefix) {\n  const id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n\n/**\n * returns bnd (bounds) from rect\n *\n * - IE Compatibility Issue: http://goo.gl/sRLOAo\n * - Scroll Issue: http://goo.gl/sNjUc\n *\n * @param {Rect} rect\n * @return {Object} bounds\n * @return {Number} bounds.top\n * @return {Number} bounds.left\n * @return {Number} bounds.width\n * @return {Number} bounds.height\n */\nfunction rect2bnd(rect) {\n  const $document = $(document);\n  return {\n    top: rect.top + $document.scrollTop(),\n    left: rect.left + $document.scrollLeft(),\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n}\n\n/**\n * returns a copy of the object where the keys have become the values and the values the keys.\n * @param {Object} obj\n * @return {Object}\n */\nfunction invertObject(obj) {\n  const inverted = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      inverted[obj[key]] = key;\n    }\n  }\n  return inverted;\n}\n\n/**\n * @param {String} namespace\n * @param {String} [prefix]\n * @return {String}\n */\nfunction namespaceToCamel(namespace, prefix) {\n  prefix = prefix || '';\n  return prefix + namespace.split('.').map(function(name) {\n    return name.substring(0, 1).toUpperCase() + name.substring(1);\n  }).join('');\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean} immediate\n * @return {Function}\n */\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this;\n    const args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n\n/**\n *\n * @param {String} url\n * @return {Boolean}\n */\nfunction isValidUrl(url) {\n  const expression = /[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\n  return expression.test(url);\n}\n\nexport default {\n  eq,\n  eq2,\n  peq2,\n  ok,\n  fail,\n  self,\n  not,\n  and,\n  invoke,\n  resetUniqueId,\n  uniqueId,\n  rect2bnd,\n  invertObject,\n  namespaceToCamel,\n  debounce,\n  isValidUrl,\n};\n","import func from './func';\n\n/**\n * returns the first item of an array.\n *\n * @param {Array} array\n */\nfunction head(array) {\n  return array[0];\n}\n\n/**\n * returns the last item of an array.\n *\n * @param {Array} array\n */\nfunction last(array) {\n  return array[array.length - 1];\n}\n\n/**\n * returns everything but the last entry of the array.\n *\n * @param {Array} array\n */\nfunction initial(array) {\n  return array.slice(0, array.length - 1);\n}\n\n/**\n * returns the rest of the items in an array.\n *\n * @param {Array} array\n */\nfunction tail(array) {\n  return array.slice(1);\n}\n\n/**\n * returns item of array\n */\nfunction find(array, pred) {\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    const item = array[idx];\n    if (pred(item)) {\n      return item;\n    }\n  }\n}\n\n/**\n * returns true if all of the values in the array pass the predicate truth test.\n */\nfunction all(array, pred) {\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (!pred(array[idx])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * returns true if the value is present in the list.\n */\nfunction contains(array, item) {\n  if (array && array.length && item) {\n    if (array.indexOf) {\n      return array.indexOf(item) !== -1;\n    } else if (array.contains) {\n      // `DOMTokenList` doesn't implement `.indexOf`, but it implements `.contains`\n      return array.contains(item);\n    }\n  }\n  return false;\n}\n\n/**\n * get sum from a list\n *\n * @param {Array} array - array\n * @param {Function} fn - iterator\n */\nfunction sum(array, fn) {\n  fn = fn || func.self;\n  return array.reduce(function(memo, v) {\n    return memo + fn(v);\n  }, 0);\n}\n\n/**\n * returns a copy of the collection with array type.\n * @param {Collection} collection - collection eg) node.childNodes, ...\n */\nfunction from(collection) {\n  const result = [];\n  const length = collection.length;\n  let idx = -1;\n  while (++idx < length) {\n    result[idx] = collection[idx];\n  }\n  return result;\n}\n\n/**\n * returns whether list is empty or not\n */\nfunction isEmpty(array) {\n  return !array || !array.length;\n}\n\n/**\n * cluster elements by predicate function.\n *\n * @param {Array} array - array\n * @param {Function} fn - predicate function for cluster rule\n * @param {Array[]}\n */\nfunction clusterBy(array, fn) {\n  if (!array.length) { return []; }\n  const aTail = tail(array);\n  return aTail.reduce(function(memo, v) {\n    const aLast = last(memo);\n    if (fn(last(aLast), v)) {\n      aLast[aLast.length] = v;\n    } else {\n      memo[memo.length] = [v];\n    }\n    return memo;\n  }, [[head(array)]]);\n}\n\n/**\n * returns a copy of the array with all false values removed\n *\n * @param {Array} array - array\n * @param {Function} fn - predicate function for cluster rule\n */\nfunction compact(array) {\n  const aResult = [];\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (array[idx]) { aResult.push(array[idx]); }\n  }\n  return aResult;\n}\n\n/**\n * produces a duplicate-free version of the array\n *\n * @param {Array} array\n */\nfunction unique(array) {\n  const results = [];\n\n  for (let idx = 0, len = array.length; idx < len; idx++) {\n    if (!contains(results, array[idx])) {\n      results.push(array[idx]);\n    }\n  }\n\n  return results;\n}\n\n/**\n * returns next item.\n * @param {Array} array\n */\nfunction next(array, item) {\n  if (array && array.length && item) {\n    const idx = array.indexOf(item);\n    return idx === -1 ? null : array[idx + 1];\n  }\n  return null;\n}\n\n/**\n * returns prev item.\n * @param {Array} array\n */\nfunction prev(array, item) {\n  if (array && array.length && item) {\n    const idx = array.indexOf(item);\n    return idx === -1 ? null : array[idx - 1];\n  }\n  return null;\n}\n\n/**\n * @class core.list\n *\n * list utils\n *\n * @singleton\n * @alternateClassName list\n */\nexport default {\n  head,\n  last,\n  initial,\n  tail,\n  prev,\n  next,\n  find,\n  contains,\n  all,\n  sum,\n  from,\n  isEmpty,\n  clusterBy,\n  compact,\n  unique,\n};\n","import $ from 'jquery';\nimport func from './func';\nimport lists from './lists';\nimport env from './env';\n\nconst NBSP_CHAR = String.fromCharCode(160);\nconst ZERO_WIDTH_NBSP_CHAR = '\\ufeff';\n\n/**\n * @method isEditable\n *\n * returns whether node is `note-editable` or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isEditable(node) {\n  return node && $(node).hasClass('note-editable');\n}\n\n/**\n * @method isControlSizing\n *\n * returns whether node is `note-control-sizing` or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isControlSizing(node) {\n  return node && $(node).hasClass('note-control-sizing');\n}\n\n/**\n * @method makePredByNodeName\n *\n * returns predicate which judge whether nodeName is same\n *\n * @param {String} nodeName\n * @return {Function}\n */\nfunction makePredByNodeName(nodeName) {\n  nodeName = nodeName.toUpperCase();\n  return function(node) {\n    return node && node.nodeName.toUpperCase() === nodeName;\n  };\n}\n\n/**\n * @method isText\n *\n *\n *\n * @param {Node} node\n * @return {Boolean} true if node's type is text(3)\n */\nfunction isText(node) {\n  return node && node.nodeType === 3;\n}\n\n/**\n * @method isElement\n *\n *\n *\n * @param {Node} node\n * @return {Boolean} true if node's type is element(1)\n */\nfunction isElement(node) {\n  return node && node.nodeType === 1;\n}\n\n/**\n * ex) br, col, embed, hr, img, input, ...\n * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n */\nfunction isVoid(node) {\n  return node && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(node.nodeName.toUpperCase());\n}\n\nfunction isPara(node) {\n  if (isEditable(node)) {\n    return false;\n  }\n\n  // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\n  return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\n}\n\nfunction isHeading(node) {\n  return node && /^H[1-7]/.test(node.nodeName.toUpperCase());\n}\n\nconst isPre = makePredByNodeName('PRE');\n\nconst isLi = makePredByNodeName('LI');\n\nfunction isPurePara(node) {\n  return isPara(node) && !isLi(node);\n}\n\nconst isTable = makePredByNodeName('TABLE');\n\nconst isData = makePredByNodeName('DATA');\n\nfunction isInline(node) {\n  return !isBodyContainer(node) &&\n         !isList(node) &&\n         !isHr(node) &&\n         !isPara(node) &&\n         !isTable(node) &&\n         !isBlockquote(node) &&\n         !isData(node);\n}\n\nfunction isList(node) {\n  return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\n}\n\nconst isHr = makePredByNodeName('HR');\n\nfunction isCell(node) {\n  return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\n}\n\nconst isBlockquote = makePredByNodeName('BLOCKQUOTE');\n\nfunction isBodyContainer(node) {\n  return isCell(node) || isBlockquote(node) || isEditable(node);\n}\n\nconst isAnchor = makePredByNodeName('A');\n\nfunction isParaInline(node) {\n  return isInline(node) && !!ancestor(node, isPara);\n}\n\nfunction isBodyInline(node) {\n  return isInline(node) && !ancestor(node, isPara);\n}\n\nconst isBody = makePredByNodeName('BODY');\n\n/**\n * returns whether nodeB is closest sibling of nodeA\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n * @return {Boolean}\n */\nfunction isClosestSibling(nodeA, nodeB) {\n  return nodeA.nextSibling === nodeB ||\n         nodeA.previousSibling === nodeB;\n}\n\n/**\n * returns array of closest siblings with node\n *\n * @param {Node} node\n * @param {function} [pred] - predicate function\n * @return {Node[]}\n */\nfunction withClosestSiblings(node, pred) {\n  pred = pred || func.ok;\n\n  const siblings = [];\n  if (node.previousSibling && pred(node.previousSibling)) {\n    siblings.push(node.previousSibling);\n  }\n  siblings.push(node);\n  if (node.nextSibling && pred(node.nextSibling)) {\n    siblings.push(node.nextSibling);\n  }\n  return siblings;\n}\n\n/**\n * blank HTML for cursor position\n * - [workaround] old IE only works with &nbsp;\n * - [workaround] IE11 and other browser works with bogus br\n */\nconst blankHTML = env.isMSIE && env.browserVersion < 11 ? '&nbsp;' : '<br>';\n\n/**\n * @method nodeLength\n *\n * returns #text's text size or element's childNodes size\n *\n * @param {Node} node\n */\nfunction nodeLength(node) {\n  if (isText(node)) {\n    return node.nodeValue.length;\n  }\n\n  if (node) {\n    return node.childNodes.length;\n  }\n\n  return 0;\n}\n\n/**\n * returns whether deepest child node is empty or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction deepestChildIsEmpty(node) {\n  do {\n    if (node.firstElementChild === null || node.firstElementChild.innerHTML === '') break;\n  } while ((node = node.firstElementChild));\n\n  return isEmpty(node);\n}\n\n/**\n * returns whether node is empty or not.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nfunction isEmpty(node) {\n  const len = nodeLength(node);\n\n  if (len === 0) {\n    return true;\n  } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\n    // ex) <p><br></p>, <span><br></span>\n    return true;\n  } else if (lists.all(node.childNodes, isText) && node.innerHTML === '') {\n    // ex) <p></p>, <span></span>\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * padding blankHTML if node is empty (for cursor position)\n */\nfunction paddingBlankHTML(node) {\n  if (!isVoid(node) && !nodeLength(node)) {\n    node.innerHTML = blankHTML;\n  }\n}\n\n/**\n * find nearest ancestor predicate hit\n *\n * @param {Node} node\n * @param {Function} pred - predicate function\n */\nfunction ancestor(node, pred) {\n  while (node) {\n    if (pred(node)) { return node; }\n    if (isEditable(node)) { break; }\n\n    node = node.parentNode;\n  }\n  return null;\n}\n\n/**\n * find nearest ancestor only single child blood line and predicate hit\n *\n * @param {Node} node\n * @param {Function} pred - predicate function\n */\nfunction singleChildAncestor(node, pred) {\n  node = node.parentNode;\n\n  while (node) {\n    if (nodeLength(node) !== 1) { break; }\n    if (pred(node)) { return node; }\n    if (isEditable(node)) { break; }\n\n    node = node.parentNode;\n  }\n  return null;\n}\n\n/**\n * returns new array of ancestor nodes (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [optional] pred - predicate function\n */\nfunction listAncestor(node, pred) {\n  pred = pred || func.fail;\n\n  const ancestors = [];\n  ancestor(node, function(el) {\n    if (!isEditable(el)) {\n      ancestors.push(el);\n    }\n\n    return pred(el);\n  });\n  return ancestors;\n}\n\n/**\n * find farthest ancestor predicate hit\n */\nfunction lastAncestor(node, pred) {\n  const ancestors = listAncestor(node);\n  return lists.last(ancestors.filter(pred));\n}\n\n/**\n * returns common ancestor node between two nodes.\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n */\nfunction commonAncestor(nodeA, nodeB) {\n  const ancestors = listAncestor(nodeA);\n  for (let n = nodeB; n; n = n.parentNode) {\n    if (ancestors.indexOf(n) > -1) return n;\n  }\n  return null; // difference document area\n}\n\n/**\n * listing all previous siblings (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [optional] pred - predicate function\n */\nfunction listPrev(node, pred) {\n  pred = pred || func.fail;\n\n  const nodes = [];\n  while (node) {\n    if (pred(node)) { break; }\n    nodes.push(node);\n    node = node.previousSibling;\n  }\n  return nodes;\n}\n\n/**\n * listing next siblings (until predicate hit).\n *\n * @param {Node} node\n * @param {Function} [pred] - predicate function\n */\nfunction listNext(node, pred) {\n  pred = pred || func.fail;\n\n  const nodes = [];\n  while (node) {\n    if (pred(node)) { break; }\n    nodes.push(node);\n    node = node.nextSibling;\n  }\n  return nodes;\n}\n\n/**\n * listing descendant nodes\n *\n * @param {Node} node\n * @param {Function} [pred] - predicate function\n */\nfunction listDescendant(node, pred) {\n  const descendants = [];\n  pred = pred || func.ok;\n\n  // start DFS(depth first search) with node\n  (function fnWalk(current) {\n    if (node !== current && pred(current)) {\n      descendants.push(current);\n    }\n    for (let idx = 0, len = current.childNodes.length; idx < len; idx++) {\n      fnWalk(current.childNodes[idx]);\n    }\n  })(node);\n\n  return descendants;\n}\n\n/**\n * wrap node with new tag.\n *\n * @param {Node} node\n * @param {Node} tagName of wrapper\n * @return {Node} - wrapper\n */\nfunction wrap(node, wrapperName) {\n  const parent = node.parentNode;\n  const wrapper = $('<' + wrapperName + '>')[0];\n\n  parent.insertBefore(wrapper, node);\n  wrapper.appendChild(node);\n\n  return wrapper;\n}\n\n/**\n * insert node after preceding\n *\n * @param {Node} node\n * @param {Node} preceding - predicate function\n */\nfunction insertAfter(node, preceding) {\n  const next = preceding.nextSibling;\n  let parent = preceding.parentNode;\n  if (next) {\n    parent.insertBefore(node, next);\n  } else {\n    parent.appendChild(node);\n  }\n  return node;\n}\n\n/**\n * append elements.\n *\n * @param {Node} node\n * @param {Collection} aChild\n */\nfunction appendChildNodes(node, aChild, isSkipPaddingBlankHTML) {\n  $.each(aChild, function(idx, child) {\n    // special case: appending a pure UL/OL to a LI element creates inaccessible LI element\n    // e.g. press enter in last LI which has UL/OL-subelements\n    // Therefore, if current node is LI element with no child nodes (text-node) and appending a list, add a br before\n    if (!isSkipPaddingBlankHTML && isLi(node) && node.firstChild === null && isList(child)) {\n      node.appendChild(create(\"br\"));\n    }\n\n    node.appendChild(child);\n  });\n  return node;\n}\n\n/**\n * returns whether boundaryPoint is left edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isLeftEdgePoint(point) {\n  return point.offset === 0;\n}\n\n/**\n * returns whether boundaryPoint is right edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isRightEdgePoint(point) {\n  return point.offset === nodeLength(point.node);\n}\n\n/**\n * returns whether boundaryPoint is edge or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isEdgePoint(point) {\n  return isLeftEdgePoint(point) || isRightEdgePoint(point);\n}\n\n/**\n * returns whether node is left edge of ancestor or not.\n *\n * @param {Node} node\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isLeftEdgeOf(node, ancestor) {\n  while (node && node !== ancestor) {\n    if (position(node) !== 0) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n\n  return true;\n}\n\n/**\n * returns whether node is right edge of ancestor or not.\n *\n * @param {Node} node\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isRightEdgeOf(node, ancestor) {\n  if (!ancestor) {\n    return false;\n  }\n  while (node && node !== ancestor) {\n    if (position(node) !== nodeLength(node.parentNode) - 1) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n\n  return true;\n}\n\n/**\n * returns whether point is left edge of ancestor or not.\n * @param {BoundaryPoint} point\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isLeftEdgePointOf(point, ancestor) {\n  return isLeftEdgePoint(point) && isLeftEdgeOf(point.node, ancestor);\n}\n\n/**\n * returns whether point is right edge of ancestor or not.\n * @param {BoundaryPoint} point\n * @param {Node} ancestor\n * @return {Boolean}\n */\nfunction isRightEdgePointOf(point, ancestor) {\n  return isRightEdgePoint(point) && isRightEdgeOf(point.node, ancestor);\n}\n\n/**\n * returns offset from parent.\n *\n * @param {Node} node\n */\nfunction position(node) {\n  let offset = 0;\n  while ((node = node.previousSibling)) {\n    offset += 1;\n  }\n  return offset;\n}\n\nfunction hasChildren(node) {\n  return !!(node && node.childNodes && node.childNodes.length);\n}\n\n/**\n * returns previous boundaryPoint\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction prevPoint(point, isSkipInnerOffset) {\n  let node;\n  let offset;\n\n  if (point.offset === 0) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    node = point.node.parentNode;\n    offset = position(point.node);\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset - 1];\n    offset = nodeLength(node);\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? 0 : point.offset - 1;\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/**\n * returns next boundaryPoint\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction nextPoint(point, isSkipInnerOffset) {\n  let node, offset;\n\n  if (nodeLength(point.node) === point.offset) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    let nextTextNode = getNextTextNode(point.node);\n    if (nextTextNode) {\n      node = nextTextNode;\n      offset = 0;\n    } else {\n      node = point.node.parentNode;\n      offset = position(point.node) + 1;\n    }\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset];\n    offset = 0;\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/**\n * Find next boundaryPoint for preorder / depth first traversal of the DOM\n * returns next boundaryPoint with empty node\n *\n * @param {BoundaryPoint} point\n * @param {Boolean} isSkipInnerOffset\n * @return {BoundaryPoint}\n */\nfunction nextPointWithEmptyNode(point, isSkipInnerOffset) {\n  let node, offset = 0;\n\n  if (nodeLength(point.node) === point.offset) {\n    if (isEditable(point.node)) {\n      return null;\n    }\n\n    node = point.node.parentNode;\n    offset = position(point.node) + 1;\n\n    // if parent node is editable,  return current node's sibling node.\n    if (isEditable(node)) {\n      node = point.node.nextSibling;\n      offset = 0;\n    }\n  } else if (hasChildren(point.node)) {\n    node = point.node.childNodes[point.offset];\n    offset = 0;\n  } else {\n    node = point.node;\n    offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n  }\n\n  return {\n    node: node,\n    offset: offset,\n  };\n}\n\n/*\n* returns the next Text node index or 0 if not found.\n*/\nfunction getNextTextNode(actual) {\n  if(!actual.nextSibling) return undefined;\n  if(actual.parent !== actual.nextSibling.parent) return undefined;\n\n  if(isText(actual.nextSibling) ) return actual.nextSibling;\n  else return getNextTextNode(actual.nextSibling);\n}\n\n/**\n * returns whether pointA and pointB is same or not.\n *\n * @param {BoundaryPoint} pointA\n * @param {BoundaryPoint} pointB\n * @return {Boolean}\n */\nfunction isSamePoint(pointA, pointB) {\n  return pointA.node === pointB.node && pointA.offset === pointB.offset;\n}\n\n/**\n * returns whether point is visible (can set cursor) or not.\n *\n * @param {BoundaryPoint} point\n * @return {Boolean}\n */\nfunction isVisiblePoint(point) {\n  if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\n    return true;\n  }\n\n  const leftNode = point.node.childNodes[point.offset - 1];\n  const rightNode = point.node.childNodes[point.offset];\n  if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode)) || isTable(rightNode)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @method prevPointUtil\n *\n * @param {BoundaryPoint} point\n * @param {Function} pred\n * @return {BoundaryPoint}\n */\nfunction prevPointUntil(point, pred) {\n  while (point) {\n    if (pred(point)) {\n      return point;\n    }\n\n    point = prevPoint(point);\n  }\n\n  return null;\n}\n\n/**\n * @method nextPointUntil\n *\n * @param {BoundaryPoint} point\n * @param {Function} pred\n * @return {BoundaryPoint}\n */\nfunction nextPointUntil(point, pred) {\n  while (point) {\n    if (pred(point)) {\n      return point;\n    }\n\n    point = nextPoint(point);\n  }\n\n  return null;\n}\n\n/**\n * returns whether point has character or not.\n *\n * @param {Point} point\n * @return {Boolean}\n */\nfunction isCharPoint(point) {\n  if (!isText(point.node)) {\n    return false;\n  }\n\n  const ch = point.node.nodeValue.charAt(point.offset - 1);\n  return ch && (ch !== ' ' && ch !== NBSP_CHAR);\n}\n\n/**\n * returns whether point has space or not.\n *\n * @param {Point} point\n * @return {Boolean}\n */\nfunction isSpacePoint(point) {\n  if (!isText(point.node)) {\n    return false;\n  }\n\n  const ch = point.node.nodeValue.charAt(point.offset - 1);\n  return ch === ' ' || ch === NBSP_CHAR;\n}\n\n/**\n * @method walkPoint - preorder / depth first traversal of the DOM\n *\n * @param {BoundaryPoint} startPoint\n * @param {BoundaryPoint} endPoint\n * @param {Function} handler\n * @param {Boolean} isSkipInnerOffset\n */\nfunction walkPoint(startPoint, endPoint, handler, isSkipInnerOffset) {\n  let point = startPoint;\n\n  while (point && point.node) {\n    handler(point);\n\n    if (isSamePoint(point, endPoint)) {\n      break;\n    }\n\n    const isSkipOffset = isSkipInnerOffset &&\n                       startPoint.node !== point.node &&\n                       endPoint.node !== point.node;\n    point = nextPointWithEmptyNode(point, isSkipOffset);\n  }\n}\n\n/**\n * @method makeOffsetPath\n *\n * return offsetPath(array of offset) from ancestor\n *\n * @param {Node} ancestor - ancestor node\n * @param {Node} node\n */\nfunction makeOffsetPath(ancestor, node) {\n  const ancestors = listAncestor(node, func.eq(ancestor));\n  return ancestors.map(position).reverse();\n}\n\n/**\n * @method fromOffsetPath\n *\n * return element from offsetPath(array of offset)\n *\n * @param {Node} ancestor - ancestor node\n * @param {array} offsets - offsetPath\n */\nfunction fromOffsetPath(ancestor, offsets) {\n  let current = ancestor;\n  for (let i = 0, len = offsets.length; i < len; i++) {\n    if (current.childNodes.length <= offsets[i]) {\n      current = current.childNodes[current.childNodes.length - 1];\n    } else {\n      current = current.childNodes[offsets[i]];\n    }\n  }\n  return current;\n}\n\n/**\n * @method splitNode\n *\n * split element or #text\n *\n * @param {BoundaryPoint} point\n * @param {Object} [options]\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n * @param {Boolean} [options.isDiscardEmptySplits] - default: false\n * @return {Node} right node of boundaryPoint\n */\nfunction splitNode(point, options) {\n  let isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\n  const isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\n  const isDiscardEmptySplits = options && options.isDiscardEmptySplits;\n\n  if (isDiscardEmptySplits) {\n    isSkipPaddingBlankHTML = true;\n  }\n\n  // edge case\n  if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\n    if (isLeftEdgePoint(point)) {\n      return point.node;\n    } else if (isRightEdgePoint(point)) {\n      return point.node.nextSibling;\n    }\n  }\n\n  // split #text\n  if (isText(point.node)) {\n    return point.node.splitText(point.offset);\n  } else {\n    const childNode = point.node.childNodes[point.offset];\n    let childNodes = listNext(childNode);\n\n    const clone = insertAfter(point.node.cloneNode(false), point.node);\n    appendChildNodes(clone, childNodes);\n\n    if (!isSkipPaddingBlankHTML) {\n      paddingBlankHTML(point.node);\n      paddingBlankHTML(clone);\n    }\n\n    if (isDiscardEmptySplits) {\n      if (isEmpty(point.node)) {\n        remove(point.node);\n      }\n      if (isEmpty(clone)) {\n        remove(clone);\n        return point.node.nextSibling;\n      }\n    }\n\n    return clone;\n  }\n}\n\n/**\n * @method splitTree\n *\n * split tree by point\n *\n * @param {Node} root - split root\n * @param {BoundaryPoint} point\n * @param {Object} [options]\n * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n * @return {Node} right node of boundaryPoint\n */\nfunction splitTree(root, point, options) {\n  // ex) [#text, <span>, <p>]\n  let ancestors = listAncestor(point.node, func.eq(root));\n\n  if (!ancestors.length) {\n    return null;\n  } else if (ancestors.length === 1) {\n    return splitNode(point, options);\n  }\n  // Filter elements with sibling elements\n  if (ancestors.length > 2) {\n    let domList = ancestors.slice(0, ancestors.length - 1);\n    let ifHasNextSibling = domList.find(item => item.nextSibling);\n    if (ifHasNextSibling && point.offset != 0 && isRightEdgePoint(point)) {\n      let nestSibling = ifHasNextSibling.nextSibling;\n      let textNode;\n      if (nestSibling.nodeType == 1) {\n        textNode = nestSibling.childNodes[0];\n        ancestors = listAncestor(textNode, func.eq(root));\n        point = {\n          node: textNode,\n          offset: 0,\n        };\n      }\n      else if (nestSibling.nodeType == 3 && !nestSibling.data.match(/[\\n\\r]/g)) {\n        textNode = nestSibling;\n        ancestors = listAncestor(textNode, func.eq(root));\n        point = {\n          node: textNode,\n          offset: 0,\n        };\n      }\n    }\n  }\n  return ancestors.reduce(function(node, parent) {\n    if (node === point.node) {\n      node = splitNode(point, options);\n    }\n\n    return splitNode({\n      node: parent,\n      offset: node ? position(node) : nodeLength(parent),\n    }, options);\n  });\n}\n\n/**\n * split point\n *\n * @param {Point} point\n * @param {Boolean} isInline\n * @return {Object}\n */\nfunction splitPoint(point, isInline) {\n  // find splitRoot, container\n  //  - inline: splitRoot is a child of paragraph\n  //  - block: splitRoot is a child of bodyContainer\n  const pred = isInline ? isPara : isBodyContainer;\n  const ancestors = listAncestor(point.node, pred);\n  const topAncestor = lists.last(ancestors) || point.node;\n\n  let splitRoot, container;\n  if (pred(topAncestor)) {\n    splitRoot = ancestors[ancestors.length - 2];\n    container = topAncestor;\n  } else {\n    splitRoot = topAncestor;\n    container = splitRoot.parentNode;\n  }\n\n  // if splitRoot is exists, split with splitTree\n  let pivot = splitRoot && splitTree(splitRoot, point, {\n    isSkipPaddingBlankHTML: isInline,\n    isNotSplitEdgePoint: isInline,\n  });\n\n  // if container is point.node, find pivot with point.offset\n  if (!pivot && container === point.node) {\n    pivot = point.node.childNodes[point.offset];\n  }\n\n  return {\n    rightNode: pivot,\n    container: container,\n  };\n}\n\nfunction create(nodeName) {\n  return document.createElement(nodeName);\n}\n\nfunction createText(text) {\n  return document.createTextNode(text);\n}\n\n/**\n * @method remove\n *\n * remove node, (isRemoveChild: remove child or not)\n *\n * @param {Node} node\n * @param {Boolean} isRemoveChild\n */\nfunction remove(node, isRemoveChild) {\n  if (!node || !node.parentNode) { return; }\n  if (node.removeNode) { return node.removeNode(isRemoveChild); }\n\n  const parent = node.parentNode;\n  if (!isRemoveChild) {\n    const nodes = [];\n    for (let i = 0, len = node.childNodes.length; i < len; i++) {\n      nodes.push(node.childNodes[i]);\n    }\n\n    for (let i = 0, len = nodes.length; i < len; i++) {\n      parent.insertBefore(nodes[i], node);\n    }\n  }\n\n  parent.removeChild(node);\n}\n\n/**\n * @method removeWhile\n *\n * @param {Node} node\n * @param {Function} pred\n */\nfunction removeWhile(node, pred) {\n  while (node) {\n    if (isEditable(node) || !pred(node)) {\n      break;\n    }\n\n    const parent = node.parentNode;\n    remove(node);\n    node = parent;\n  }\n}\n\n/**\n * @method replace\n *\n * replace node with provided nodeName\n *\n * @param {Node} node\n * @param {String} nodeName\n * @return {Node} - new node\n */\nfunction replace(node, nodeName) {\n  if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\n    return node;\n  }\n\n  const newNode = create(nodeName);\n\n  if (node.style.cssText) {\n    newNode.style.cssText = node.style.cssText;\n  }\n\n  appendChildNodes(newNode, lists.from(node.childNodes));\n  insertAfter(newNode, node);\n  remove(node);\n\n  return newNode;\n}\n\nconst isTextarea = makePredByNodeName('TEXTAREA');\n\n/**\n * @param {jQuery} $node\n * @param {Boolean} [stripLinebreaks] - default: false\n */\nfunction value($node, stripLinebreaks) {\n  const val = isTextarea($node[0]) ? $node.val() : $node.html();\n  if (stripLinebreaks) {\n    return val.replace(/[\\n\\r]/g, '');\n  }\n  return val;\n}\n\n/**\n * @method html\n *\n * get the HTML contents of node\n *\n * @param {jQuery} $node\n * @param {Boolean} [isNewlineOnBlock]\n */\nfunction html($node, isNewlineOnBlock) {\n  let markup = value($node);\n\n  if (isNewlineOnBlock) {\n    const regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\n    markup = markup.replace(regexTag, function(match, endSlash, name) {\n      name = name.toUpperCase();\n      const isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\n                                   !!endSlash;\n      const isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\n\n      return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\n    });\n    markup = markup.trim();\n  }\n\n  return markup;\n}\n\nfunction posFromPlaceholder(placeholder) {\n  const $placeholder = $(placeholder);\n  const pos = $placeholder.offset();\n  const height = $placeholder.outerHeight(true); // include margin\n\n  return {\n    left: pos.left,\n    top: pos.top + height,\n  };\n}\n\nfunction attachEvents($node, events) {\n  Object.keys(events).forEach(function(key) {\n    $node.on(key, events[key]);\n  });\n}\n\nfunction detachEvents($node, events) {\n  Object.keys(events).forEach(function(key) {\n    $node.off(key, events[key]);\n  });\n}\n\n/**\n * @method isCustomStyleTag\n *\n * assert if a node contains a \"note-styletag\" class,\n * which implies that's a custom-made style tag node\n *\n * @param {Node} an HTML DOM node\n */\nfunction isCustomStyleTag(node) {\n  return node && !isText(node) && lists.contains(node.classList, 'note-styletag');\n}\n\nexport default {\n  /** @property {String} NBSP_CHAR */\n  NBSP_CHAR,\n  /** @property {String} ZERO_WIDTH_NBSP_CHAR */\n  ZERO_WIDTH_NBSP_CHAR,\n  /** @property {String} blank */\n  blank: blankHTML,\n  /** @property {String} emptyPara */\n  emptyPara: `<p>${blankHTML}</p>`,\n  makePredByNodeName,\n  isEditable,\n  isControlSizing,\n  isText,\n  isElement,\n  isVoid,\n  isPara,\n  isPurePara,\n  isHeading,\n  isInline,\n  isBlock: func.not(isInline),\n  isBodyInline,\n  isBody,\n  isParaInline,\n  isPre,\n  isList,\n  isTable,\n  isData,\n  isCell,\n  isBlockquote,\n  isBodyContainer,\n  isAnchor,\n  isDiv: makePredByNodeName('DIV'),\n  isLi,\n  isBR: makePredByNodeName('BR'),\n  isSpan: makePredByNodeName('SPAN'),\n  isB: makePredByNodeName('B'),\n  isU: makePredByNodeName('U'),\n  isS: makePredByNodeName('S'),\n  isI: makePredByNodeName('I'),\n  isImg: makePredByNodeName('IMG'),\n  isTextarea,\n  deepestChildIsEmpty,\n  isEmpty,\n  isEmptyAnchor: func.and(isAnchor, isEmpty),\n  isClosestSibling,\n  withClosestSiblings,\n  nodeLength,\n  isLeftEdgePoint,\n  isRightEdgePoint,\n  isEdgePoint,\n  isLeftEdgeOf,\n  isRightEdgeOf,\n  isLeftEdgePointOf,\n  isRightEdgePointOf,\n  prevPoint,\n  nextPoint,\n  nextPointWithEmptyNode,\n  isSamePoint,\n  isVisiblePoint,\n  prevPointUntil,\n  nextPointUntil,\n  isCharPoint,\n  isSpacePoint,\n  walkPoint,\n  ancestor,\n  singleChildAncestor,\n  listAncestor,\n  lastAncestor,\n  listNext,\n  listPrev,\n  listDescendant,\n  commonAncestor,\n  wrap,\n  insertAfter,\n  appendChildNodes,\n  position,\n  hasChildren,\n  makeOffsetPath,\n  fromOffsetPath,\n  splitTree,\n  splitPoint,\n  create,\n  createText,\n  remove,\n  removeWhile,\n  replace,\n  html,\n  value,\n  posFromPlaceholder,\n  attachEvents,\n  detachEvents,\n  isCustomStyleTag,\n};\n","import $ from 'jquery';\nimport func from './core/func';\nimport lists from './core/lists';\nimport dom from './core/dom';\n\nexport default class Context {\n  /**\n   * @param {jQuery} $note\n   * @param {Object} options\n   */\n  constructor($note, options) {\n    this.$note = $note;\n\n    this.memos = {};\n    this.modules = {};\n    this.layoutInfo = {};\n    this.options = $.extend(true, {}, options);\n\n    // init ui with options\n    $.summernote.ui = $.summernote.ui_template(this.options);\n    this.ui = $.summernote.ui;\n\n    this.initialize();\n  }\n\n  /**\n   * create layout and initialize modules and other resources\n   */\n  initialize() {\n    this.layoutInfo = this.ui.createLayout(this.$note);\n    this._initialize();\n    this.$note.hide();\n    return this;\n  }\n\n  /**\n   * destroy modules and other resources and remove layout\n   */\n  destroy() {\n    this._destroy();\n    this.$note.removeData('summernote');\n    this.ui.removeLayout(this.$note, this.layoutInfo);\n  }\n\n  /**\n   * destory modules and other resources and initialize it again\n   */\n  reset() {\n    const disabled = this.isDisabled();\n    this.code(dom.emptyPara);\n    this._destroy();\n    this._initialize();\n\n    if (disabled) {\n      this.disable();\n    }\n  }\n\n  _initialize() {\n    // set own id\n    this.options.id = func.uniqueId($.now());\n    // set default container for tooltips, popovers, and dialogs\n    this.options.container = this.options.container || this.layoutInfo.editor;\n\n    // add optional buttons\n    const buttons = $.extend({}, this.options.buttons);\n    Object.keys(buttons).forEach((key) => {\n      this.memo('button.' + key, buttons[key]);\n    });\n\n    const modules = $.extend({}, this.options.modules, $.summernote.plugins || {});\n\n    // add and initialize modules\n    Object.keys(modules).forEach((key) => {\n      this.module(key, modules[key], true);\n    });\n\n    Object.keys(this.modules).forEach((key) => {\n      this.initializeModule(key);\n    });\n  }\n\n  _destroy() {\n    // destroy modules with reversed order\n    Object.keys(this.modules)\n      .reverse()\n      .forEach((key) => {\n        this.removeModule(key);\n      });\n\n    Object.keys(this.memos).forEach((key) => {\n      this.removeMemo(key);\n    });\n    // trigger custom onDestroy callback\n    this.triggerEvent('destroy', this);\n  }\n\n  code(html) {\n    const isActivated = this.invoke('codeview.isActivated');\n\n    if (html === undefined) {\n      this.invoke('codeview.sync');\n      return isActivated ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\n    } else {\n      if (isActivated) {\n        this.invoke('codeview.sync', html);\n      } else {\n        this.layoutInfo.editable.html(html);\n      }\n      this.$note.val(html);\n      this.triggerEvent('change', html, this.layoutInfo.editable);\n    }\n  }\n\n  isDisabled() {\n    return this.layoutInfo.editable.attr('contenteditable') === 'false';\n  }\n\n  enable() {\n    this.layoutInfo.editable.attr('contenteditable', true);\n    this.invoke('toolbar.activate', true);\n    this.triggerEvent('disable', false);\n    this.options.editing = true;\n  }\n\n  disable() {\n    // close codeview if codeview is opend\n    if (this.invoke('codeview.isActivated')) {\n      this.invoke('codeview.deactivate');\n    }\n    this.layoutInfo.editable.attr('contenteditable', false);\n    this.options.editing = false;\n    this.invoke('toolbar.deactivate', true);\n\n    this.triggerEvent('disable', true);\n  }\n\n  triggerEvent() {\n    const namespace = lists.head(arguments);\n    const args = lists.tail(lists.from(arguments));\n\n    const callback = this.options.callbacks[func.namespaceToCamel(namespace, 'on')];\n    if (callback) {\n      callback.apply(this.$note[0], args);\n    }\n    this.$note.trigger('summernote.' + namespace, args);\n  }\n\n  initializeModule(key) {\n    const module = this.modules[key];\n    module.shouldInitialize = module.shouldInitialize || func.ok;\n    if (!module.shouldInitialize()) {\n      return;\n    }\n\n    // initialize module\n    if (module.initialize) {\n      module.initialize();\n    }\n\n    // attach events\n    if (module.events) {\n      dom.attachEvents(this.$note, module.events);\n    }\n  }\n\n  module(key, ModuleClass, withoutIntialize) {\n    if (arguments.length === 1) {\n      return this.modules[key];\n    }\n\n    this.modules[key] = new ModuleClass(this);\n\n    if (!withoutIntialize) {\n      this.initializeModule(key);\n    }\n  }\n\n  removeModule(key) {\n    const module = this.modules[key];\n    if (module.shouldInitialize()) {\n      if (module.events) {\n        dom.detachEvents(this.$note, module.events);\n      }\n\n      if (module.destroy) {\n        module.destroy();\n      }\n    }\n\n    delete this.modules[key];\n  }\n\n  memo(key, obj) {\n    if (arguments.length === 1) {\n      return this.memos[key];\n    }\n    this.memos[key] = obj;\n  }\n\n  removeMemo(key) {\n    if (this.memos[key] && this.memos[key].destroy) {\n      this.memos[key].destroy();\n    }\n\n    delete this.memos[key];\n  }\n\n  /**\n   * Some buttons need to change their visual style immediately once they get pressed\n   */\n  createInvokeHandlerAndUpdateState(namespace, value) {\n    return (event) => {\n      this.createInvokeHandler(namespace, value)(event);\n      this.invoke('buttons.updateCurrentStyle');\n    };\n  }\n\n  createInvokeHandler(namespace, value) {\n    return (event) => {\n      event.preventDefault();\n      const $target = $(event.target);\n      this.invoke(namespace, value || $target.closest('[data-value]').data('value'), $target);\n    };\n  }\n\n  invoke() {\n    const namespace = lists.head(arguments);\n    const args = lists.tail(lists.from(arguments));\n\n    const splits = namespace.split('.');\n    const hasSeparator = splits.length > 1;\n    const moduleName = hasSeparator && lists.head(splits);\n    const methodName = hasSeparator ? lists.last(splits) : lists.head(splits);\n\n    const module = this.modules[moduleName || 'editor'];\n    if (!moduleName && this[methodName]) {\n      return this[methodName].apply(this, args);\n    } else if (module && module[methodName] && module.shouldInitialize()) {\n      return module[methodName].apply(module, args);\n    }\n  }\n}\n","import $ from 'jquery';\nimport env from './core/env';\nimport lists from './core/lists';\nimport Context from './Context';\n\n$.fn.extend({\n  /**\n   * Summernote API\n   *\n   * @param {Object|String}\n   * @return {this}\n   */\n  summernote: function() {\n    const type = typeof(lists.head(arguments));\n    const isExternalAPICalled = type === 'string';\n    const hasInitOptions = type === 'object';\n\n    const options = $.extend({}, $.summernote.options, hasInitOptions ? lists.head(arguments) : {});\n\n    // Update options\n    options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]);\n    options.icons = $.extend(true, {}, $.summernote.options.icons, options.icons);\n    options.tooltip = options.tooltip === 'auto' ? !env.isSupportTouch : options.tooltip;\n\n    this.each((idx, note) => {\n      const $note = $(note);\n      if (!$note.data('summernote')) {\n        const context = new Context($note, options);\n        $note.data('summernote', context);\n        $note.data('summernote').triggerEvent('init', context.layoutInfo);\n      }\n    });\n\n    const $note = this.first();\n    if ($note.length) {\n      const context = $note.data('summernote');\n      if (isExternalAPICalled) {\n        return context.invoke.apply(context, lists.from(arguments));\n      } else if (options.focus) {\n        context.invoke('editor.focus');\n      }\n    }\n\n    return this;\n  },\n});\n","import $ from 'jquery';\nimport env from './env';\nimport func from './func';\nimport lists from './lists';\nimport dom from './dom';\n\n/**\n * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\n *\n * @param {TextRange} textRange\n * @param {Boolean} isStart\n * @return {BoundaryPoint}\n *\n * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\n */\nfunction textRangeToPoint(textRange, isStart) {\n  let container = textRange.parentElement();\n  let offset;\n\n  const tester = document.body.createTextRange();\n  let prevContainer;\n  const childNodes = lists.from(container.childNodes);\n  for (offset = 0; offset < childNodes.length; offset++) {\n    if (dom.isText(childNodes[offset])) {\n      continue;\n    }\n    tester.moveToElementText(childNodes[offset]);\n    if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\n      break;\n    }\n    prevContainer = childNodes[offset];\n  }\n\n  if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\n    const textRangeStart = document.body.createTextRange();\n    let curTextNode = null;\n    textRangeStart.moveToElementText(prevContainer || container);\n    textRangeStart.collapse(!prevContainer);\n    curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\n\n    const pointTester = textRange.duplicate();\n    pointTester.setEndPoint('StartToStart', textRangeStart);\n    let textCount = pointTester.text.replace(/[\\r\\n]/g, '').length;\n\n    while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\n      textCount -= curTextNode.nodeValue.length;\n      curTextNode = curTextNode.nextSibling;\n    }\n\n    // [workaround] enforce IE to re-reference curTextNode, hack\n    const dummy = curTextNode.nodeValue; // eslint-disable-line\n\n    if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) &&\n      textCount === curTextNode.nodeValue.length) {\n      textCount -= curTextNode.nodeValue.length;\n      curTextNode = curTextNode.nextSibling;\n    }\n\n    container = curTextNode;\n    offset = textCount;\n  }\n\n  return {\n    cont: container,\n    offset: offset,\n  };\n}\n\n/**\n * return TextRange from boundary point (inspired by google closure-library)\n * @param {BoundaryPoint} point\n * @return {TextRange}\n */\nfunction pointToTextRange(point) {\n  const textRangeInfo = function(container, offset) {\n    let node, isCollapseToStart;\n\n    if (dom.isText(container)) {\n      const prevTextNodes = dom.listPrev(container, func.not(dom.isText));\n      const prevContainer = lists.last(prevTextNodes).previousSibling;\n      node = prevContainer || container.parentNode;\n      offset += lists.sum(lists.tail(prevTextNodes), dom.nodeLength);\n      isCollapseToStart = !prevContainer;\n    } else {\n      node = container.childNodes[offset] || container;\n      if (dom.isText(node)) {\n        return textRangeInfo(node, 0);\n      }\n\n      offset = 0;\n      isCollapseToStart = false;\n    }\n\n    return {\n      node: node,\n      collapseToStart: isCollapseToStart,\n      offset: offset,\n    };\n  };\n\n  const textRange = document.body.createTextRange();\n  const info = textRangeInfo(point.node, point.offset);\n\n  textRange.moveToElementText(info.node);\n  textRange.collapse(info.collapseToStart);\n  textRange.moveStart('character', info.offset);\n  return textRange;\n}\n\n/**\n   * Wrapped Range\n   *\n   * @constructor\n   * @param {Node} sc - start container\n   * @param {Number} so - start offset\n   * @param {Node} ec - end container\n   * @param {Number} eo - end offset\n   */\nclass WrappedRange {\n  constructor(sc, so, ec, eo) {\n    this.sc = sc;\n    this.so = so;\n    this.ec = ec;\n    this.eo = eo;\n\n    // isOnEditable: judge whether range is on editable or not\n    this.isOnEditable = this.makeIsOn(dom.isEditable);\n    // isOnList: judge whether range is on list node or not\n    this.isOnList = this.makeIsOn(dom.isList);\n    // isOnAnchor: judge whether range is on anchor node or not\n    this.isOnAnchor = this.makeIsOn(dom.isAnchor);\n    // isOnCell: judge whether range is on cell node or not\n    this.isOnCell = this.makeIsOn(dom.isCell);\n    // isOnData: judge whether range is on data node or not\n    this.isOnData = this.makeIsOn(dom.isData);\n  }\n\n  // nativeRange: get nativeRange from sc, so, ec, eo\n  nativeRange() {\n    if (env.isW3CRangeSupport) {\n      const w3cRange = document.createRange();\n      w3cRange.setStart(this.sc, this.so);\n      w3cRange.setEnd(this.ec, this.eo);\n\n      return w3cRange;\n    } else {\n      const textRange = pointToTextRange({\n        node: this.sc,\n        offset: this.so,\n      });\n\n      textRange.setEndPoint('EndToEnd', pointToTextRange({\n        node: this.ec,\n        offset: this.eo,\n      }));\n\n      return textRange;\n    }\n  }\n\n  getPoints() {\n    return {\n      sc: this.sc,\n      so: this.so,\n      ec: this.ec,\n      eo: this.eo,\n    };\n  }\n\n  getStartPoint() {\n    return {\n      node: this.sc,\n      offset: this.so,\n    };\n  }\n\n  getEndPoint() {\n    return {\n      node: this.ec,\n      offset: this.eo,\n    };\n  }\n\n  /**\n   * select update visible range\n   */\n  select() {\n    const nativeRng = this.nativeRange();\n    if (env.isW3CRangeSupport) {\n      const selection = document.getSelection();\n      if (selection.rangeCount > 0) {\n        selection.removeAllRanges();\n      }\n      selection.addRange(nativeRng);\n    } else {\n      nativeRng.select();\n    }\n\n    return this;\n  }\n\n  /**\n   * Moves the scrollbar to start container(sc) of current range\n   *\n   * @return {WrappedRange}\n   */\n  scrollIntoView(container) {\n    const height = $(container).height();\n    if (container.scrollTop + height < this.sc.offsetTop) {\n      container.scrollTop += Math.abs(container.scrollTop + height - this.sc.offsetTop);\n    }\n\n    return this;\n  }\n\n  /**\n   * @return {WrappedRange}\n   */\n  normalize() {\n    /**\n     * @param {BoundaryPoint} point\n     * @param {Boolean} isLeftToRight - true: prefer to choose right node\n     *                                - false: prefer to choose left node\n     * @return {BoundaryPoint}\n     */\n    const getVisiblePoint = function(point, isLeftToRight) {\n      if (!point) {\n        return point;\n      }\n\n      // Just use the given point [XXX:Adhoc]\n      //  - case 01. if the point is on the middle of the node\n      //  - case 02. if the point is on the right edge and prefer to choose left node\n      //  - case 03. if the point is on the left edge and prefer to choose right node\n      //  - case 04. if the point is on the right edge and prefer to choose right node but the node is void\n      //  - case 05. if the point is on the left edge and prefer to choose left node but the node is void\n      //  - case 06. if the point is on the block node and there is no children\n      if (dom.isVisiblePoint(point)) {\n        if (!dom.isEdgePoint(point) ||\n            (dom.isRightEdgePoint(point) && !isLeftToRight) ||\n            (dom.isLeftEdgePoint(point) && isLeftToRight) ||\n            (dom.isRightEdgePoint(point) && isLeftToRight && dom.isVoid(point.node.nextSibling)) ||\n            (dom.isLeftEdgePoint(point) && !isLeftToRight && dom.isVoid(point.node.previousSibling)) ||\n            (dom.isBlock(point.node) && dom.isEmpty(point.node))) {\n          return point;\n        }\n      }\n\n      // point on block's edge\n      const block = dom.ancestor(point.node, dom.isBlock);\n      let hasRightNode = false;\n\n      if (!hasRightNode) {\n        const prevPoint = dom.prevPoint(point) || { node: null };\n        hasRightNode = (dom.isLeftEdgePointOf(point, block) || dom.isVoid(prevPoint.node)) && !isLeftToRight;\n      }\n\n      let hasLeftNode = false;\n      if (!hasLeftNode) {\n        const nextPoint = dom.nextPoint(point) || { node: null };\n        hasLeftNode = (dom.isRightEdgePointOf(point, block) || dom.isVoid(nextPoint.node)) && isLeftToRight;\n      }\n\n      if (hasRightNode || hasLeftNode) {\n        // returns point already on visible point\n        if (dom.isVisiblePoint(point)) {\n          return point;\n        }\n        // reverse direction\n        isLeftToRight = !isLeftToRight;\n      }\n\n      const nextPoint = isLeftToRight ? dom.nextPointUntil(dom.nextPoint(point), dom.isVisiblePoint)\n        : dom.prevPointUntil(dom.prevPoint(point), dom.isVisiblePoint);\n      return nextPoint || point;\n    };\n\n    const endPoint = getVisiblePoint(this.getEndPoint(), false);\n    const startPoint = this.isCollapsed() ? endPoint : getVisiblePoint(this.getStartPoint(), true);\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns matched nodes on range\n   *\n   * @param {Function} [pred] - predicate function\n   * @param {Object} [options]\n   * @param {Boolean} [options.includeAncestor]\n   * @param {Boolean} [options.fullyContains]\n   * @return {Node[]}\n   */\n  nodes(pred, options) {\n    pred = pred || func.ok;\n\n    const includeAncestor = options && options.includeAncestor;\n    const fullyContains = options && options.fullyContains;\n\n    // TODO compare points and sort\n    const startPoint = this.getStartPoint();\n    const endPoint = this.getEndPoint();\n\n    const nodes = [];\n    const leftEdgeNodes = [];\n\n    dom.walkPoint(startPoint, endPoint, function(point) {\n      if (dom.isEditable(point.node)) {\n        return;\n      }\n\n      let node;\n      if (fullyContains) {\n        if (dom.isLeftEdgePoint(point)) {\n          leftEdgeNodes.push(point.node);\n        }\n        if (dom.isRightEdgePoint(point) && lists.contains(leftEdgeNodes, point.node)) {\n          node = point.node;\n        }\n      } else if (includeAncestor) {\n        node = dom.ancestor(point.node, pred);\n      } else {\n        node = point.node;\n      }\n\n      if (node && pred(node)) {\n        nodes.push(node);\n      }\n    }, true);\n\n    return lists.unique(nodes);\n  }\n\n  /**\n   * returns commonAncestor of range\n   * @return {Element} - commonAncestor\n   */\n  commonAncestor() {\n    return dom.commonAncestor(this.sc, this.ec);\n  }\n\n  /**\n   * returns expanded range by pred\n   *\n   * @param {Function} pred - predicate function\n   * @return {WrappedRange}\n   */\n  expand(pred) {\n    const startAncestor = dom.ancestor(this.sc, pred);\n    const endAncestor = dom.ancestor(this.ec, pred);\n\n    if (!startAncestor && !endAncestor) {\n      return new WrappedRange(this.sc, this.so, this.ec, this.eo);\n    }\n\n    const boundaryPoints = this.getPoints();\n\n    if (startAncestor) {\n      boundaryPoints.sc = startAncestor;\n      boundaryPoints.so = 0;\n    }\n\n    if (endAncestor) {\n      boundaryPoints.ec = endAncestor;\n      boundaryPoints.eo = dom.nodeLength(endAncestor);\n    }\n\n    return new WrappedRange(\n      boundaryPoints.sc,\n      boundaryPoints.so,\n      boundaryPoints.ec,\n      boundaryPoints.eo\n    );\n  }\n\n  /**\n   * @param {Boolean} isCollapseToStart\n   * @return {WrappedRange}\n   */\n  collapse(isCollapseToStart) {\n    if (isCollapseToStart) {\n      return new WrappedRange(this.sc, this.so, this.sc, this.so);\n    } else {\n      return new WrappedRange(this.ec, this.eo, this.ec, this.eo);\n    }\n  }\n\n  /**\n   * splitText on range\n   */\n  splitText() {\n    const isSameContainer = this.sc === this.ec;\n    const boundaryPoints = this.getPoints();\n\n    if (dom.isText(this.ec) && !dom.isEdgePoint(this.getEndPoint())) {\n      this.ec.splitText(this.eo);\n    }\n\n    if (dom.isText(this.sc) && !dom.isEdgePoint(this.getStartPoint())) {\n      boundaryPoints.sc = this.sc.splitText(this.so);\n      boundaryPoints.so = 0;\n\n      if (isSameContainer) {\n        boundaryPoints.ec = boundaryPoints.sc;\n        boundaryPoints.eo = this.eo - this.so;\n      }\n    }\n\n    return new WrappedRange(\n      boundaryPoints.sc,\n      boundaryPoints.so,\n      boundaryPoints.ec,\n      boundaryPoints.eo\n    );\n  }\n\n  /**\n   * delete contents on range\n   * @return {WrappedRange}\n   */\n  deleteContents() {\n    if (this.isCollapsed()) {\n      return this;\n    }\n\n    const rng = this.splitText();\n    const nodes = rng.nodes(null, {\n      fullyContains: true,\n    });\n\n    // find new cursor point\n    const point = dom.prevPointUntil(rng.getStartPoint(), function(point) {\n      return !lists.contains(nodes, point.node);\n    });\n\n    const emptyParents = [];\n    $.each(nodes, function(idx, node) {\n      // find empty parents\n      const parent = node.parentNode;\n      if (point.node !== parent && dom.nodeLength(parent) === 1) {\n        emptyParents.push(parent);\n      }\n      dom.remove(node, false);\n    });\n\n    // remove empty parents\n    $.each(emptyParents, function(idx, node) {\n      dom.remove(node, false);\n    });\n\n    return new WrappedRange(\n      point.node,\n      point.offset,\n      point.node,\n      point.offset\n    ).normalize();\n  }\n\n  /**\n   * makeIsOn: return isOn(pred) function\n   */\n  makeIsOn(pred) {\n    return function() {\n      const ancestor = dom.ancestor(this.sc, pred);\n      return !!ancestor && (ancestor === dom.ancestor(this.ec, pred));\n    };\n  }\n\n  /**\n   * @param {Function} pred\n   * @return {Boolean}\n   */\n  isLeftEdgeOf(pred) {\n    if (!dom.isLeftEdgePoint(this.getStartPoint())) {\n      return false;\n    }\n\n    const node = dom.ancestor(this.sc, pred);\n    return node && dom.isLeftEdgeOf(this.sc, node);\n  }\n\n  /**\n   * returns whether range was collapsed or not\n   */\n  isCollapsed() {\n    return this.sc === this.ec && this.so === this.eo;\n  }\n\n  /**\n   * wrap inline nodes which children of body with paragraph\n   *\n   * @return {WrappedRange}\n   */\n  wrapBodyInlineWithPara() {\n    if (dom.isBodyContainer(this.sc) && dom.isEmpty(this.sc)) {\n      this.sc.innerHTML = dom.emptyPara;\n      return new WrappedRange(this.sc.firstChild, 0, this.sc.firstChild, 0);\n    }\n\n    /**\n     * [workaround] firefox often create range on not visible point. so normalize here.\n     *  - firefox: |<p>text</p>|\n     *  - chrome: <p>|text|</p>\n     */\n    const rng = this.normalize();\n    if (dom.isParaInline(this.sc) || dom.isPara(this.sc)) {\n      return rng;\n    }\n\n    // find inline top ancestor\n    let topAncestor;\n    if (dom.isInline(rng.sc)) {\n      const ancestors = dom.listAncestor(rng.sc, func.not(dom.isInline));\n      topAncestor = lists.last(ancestors);\n      if (!dom.isInline(topAncestor)) {\n        topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];\n      }\n    } else {\n      topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];\n    }\n\n    if (topAncestor) {\n      // siblings not in paragraph\n      let inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\n      inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline));\n\n      // wrap with paragraph\n      if (inlineSiblings.length) {\n        const para = dom.wrap(lists.head(inlineSiblings), 'p');\n        dom.appendChildNodes(para, lists.tail(inlineSiblings));\n      }\n    }\n\n    return this.normalize();\n  }\n\n  /**\n   * insert node at current cursor\n   *\n   * @param {Node} node\n   * @param {Boolean} doNotInsertPara - default is false, removes added <p> that's added if true\n   * @return {Node}\n   */\n  insertNode(node, doNotInsertPara = false) {\n    let rng = this;\n\n    if (dom.isText(node) || dom.isInline(node)) {\n      rng = this.wrapBodyInlineWithPara().deleteContents();\n    }\n\n    const info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\n    if (info.rightNode) {\n      info.rightNode.parentNode.insertBefore(node, info.rightNode);\n      if (dom.isEmpty(info.rightNode) && (doNotInsertPara || dom.isPara(node))) {\n        info.rightNode.parentNode.removeChild(info.rightNode);\n      }\n    } else {\n      info.container.appendChild(node);\n    }\n\n    return node;\n  }\n\n  /**\n   * insert html at current cursor\n   */\n  pasteHTML(markup) {\n    markup = ((markup || '') + '').trim(markup);\n\n    const contentsContainer = $('<div></div>').html(markup)[0];\n    let childNodes = lists.from(contentsContainer.childNodes);\n\n    // const rng = this.wrapBodyInlineWithPara().deleteContents();\n    const rng = this;\n    let reversed = false;\n\n    if (rng.so >= 0) {\n      childNodes = childNodes.reverse();\n      reversed = true;\n    }\n\n    childNodes = childNodes.map(function(childNode) {\n      return rng.insertNode(childNode, !dom.isInline(childNode));\n    });\n\n    if (reversed) {\n      childNodes = childNodes.reverse();\n    }\n    return childNodes;\n  }\n\n  /**\n   * returns text in range\n   *\n   * @return {String}\n   */\n  toString() {\n    const nativeRng = this.nativeRange();\n    return env.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\n  }\n\n  /**\n   * returns range for word before cursor\n   *\n   * @param {Boolean} [findAfter] - find after cursor, default: false\n   * @return {WrappedRange}\n   */\n  getWordRange(findAfter) {\n    let endPoint = this.getEndPoint();\n\n    if (!dom.isCharPoint(endPoint)) {\n      return this;\n    }\n\n    const startPoint = dom.prevPointUntil(endPoint, function(point) {\n      return !dom.isCharPoint(point);\n    });\n\n    if (findAfter) {\n      endPoint = dom.nextPointUntil(endPoint, function(point) {\n        return !dom.isCharPoint(point);\n      });\n    }\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns range for words before cursor\n   *\n   * @param {Boolean} [findAfter] - find after cursor, default: false\n   * @return {WrappedRange}\n   */\n  getWordsRange(findAfter) {\n    var endPoint = this.getEndPoint();\n\n    var isNotTextPoint = function(point) {\n      return !dom.isCharPoint(point) && !dom.isSpacePoint(point);\n    };\n\n    if (isNotTextPoint(endPoint)) {\n      return this;\n    }\n\n    var startPoint = dom.prevPointUntil(endPoint, isNotTextPoint);\n\n    if (findAfter) {\n      endPoint = dom.nextPointUntil(endPoint, isNotTextPoint);\n    }\n\n    return new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * returns range for words before cursor that match with a Regex\n   *\n   * example:\n   *  range: 'hi @Peter Pan'\n   *  regex: '/@[a-z ]+/i'\n   *  return range: '@Peter Pan'\n   *\n   * @param {RegExp} [regex]\n   * @return {WrappedRange|null}\n   */\n  getWordsMatchRange(regex) {\n    var endPoint = this.getEndPoint();\n\n    var startPoint = dom.prevPointUntil(endPoint, function(point) {\n      if (!dom.isCharPoint(point) && !dom.isSpacePoint(point)) {\n        return true;\n      }\n      var rng = new WrappedRange(\n        point.node,\n        point.offset,\n        endPoint.node,\n        endPoint.offset\n      );\n      var result = regex.exec(rng.toString());\n      return result && result.index === 0;\n    });\n\n    var rng = new WrappedRange(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n\n    var text = rng.toString();\n    var result = regex.exec(text);\n\n    if (result && result[0].length === text.length) {\n      return rng;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * create offsetPath bookmark\n   *\n   * @param {Node} editable\n   */\n  bookmark(editable) {\n    return {\n      s: {\n        path: dom.makeOffsetPath(editable, this.sc),\n        offset: this.so,\n      },\n      e: {\n        path: dom.makeOffsetPath(editable, this.ec),\n        offset: this.eo,\n      },\n    };\n  }\n\n  /**\n   * create offsetPath bookmark base on paragraph\n   *\n   * @param {Node[]} paras\n   */\n  paraBookmark(paras) {\n    return {\n      s: {\n        path: lists.tail(dom.makeOffsetPath(lists.head(paras), this.sc)),\n        offset: this.so,\n      },\n      e: {\n        path: lists.tail(dom.makeOffsetPath(lists.last(paras), this.ec)),\n        offset: this.eo,\n      },\n    };\n  }\n\n  /**\n   * getClientRects\n   * @return {Rect[]}\n   */\n  getClientRects() {\n    const nativeRng = this.nativeRange();\n    return nativeRng.getClientRects();\n  }\n}\n\n/**\n * Data structure\n *  * BoundaryPoint: a point of dom tree\n *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\n *\n * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\n */\nexport default {\n  /**\n   * create Range Object From arguments or Browser Selection\n   *\n   * @param {Node} sc - start container\n   * @param {Number} so - start offset\n   * @param {Node} ec - end container\n   * @param {Number} eo - end offset\n   * @return {WrappedRange}\n   */\n  create: function(sc, so, ec, eo) {\n    if (arguments.length === 4) {\n      return new WrappedRange(sc, so, ec, eo);\n    } else if (arguments.length === 2) { // collapsed\n      ec = sc;\n      eo = so;\n      return new WrappedRange(sc, so, ec, eo);\n    } else {\n      let wrappedRange = this.createFromSelection();\n\n      if (!wrappedRange && arguments.length === 1) {\n        let bodyElement = arguments[0];\n        if (dom.isEditable(bodyElement)) {\n          bodyElement = bodyElement.lastChild;\n        }\n        return this.createFromBodyElement(bodyElement, dom.emptyPara === arguments[0].innerHTML);\n      }\n      return wrappedRange;\n    }\n  },\n\n  createFromBodyElement: function(bodyElement, isCollapseToStart = false) {\n    var wrappedRange = this.createFromNode(bodyElement);\n    return wrappedRange.collapse(isCollapseToStart);\n  },\n\n  createFromSelection: function() {\n    let sc, so, ec, eo;\n    if (env.isW3CRangeSupport) {\n      const selection = document.getSelection();\n      if (!selection || selection.rangeCount === 0) {\n        return null;\n      } else if (dom.isBody(selection.anchorNode)) {\n        // Firefox: returns entire body as range on initialization.\n        // We won't never need it.\n        return null;\n      }\n\n      const nativeRng = selection.getRangeAt(0);\n      sc = nativeRng.startContainer;\n      so = nativeRng.startOffset;\n      ec = nativeRng.endContainer;\n      eo = nativeRng.endOffset;\n    } else { // IE8: TextRange\n      const textRange = document.selection.createRange();\n      const textRangeEnd = textRange.duplicate();\n      textRangeEnd.collapse(false);\n      const textRangeStart = textRange;\n      textRangeStart.collapse(true);\n\n      let startPoint = textRangeToPoint(textRangeStart, true);\n      let endPoint = textRangeToPoint(textRangeEnd, false);\n\n      // same visible point case: range was collapsed.\n      if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) &&\n        dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) &&\n        endPoint.node.nextSibling === startPoint.node) {\n        startPoint = endPoint;\n      }\n\n      sc = startPoint.cont;\n      so = startPoint.offset;\n      ec = endPoint.cont;\n      eo = endPoint.offset;\n    }\n\n    return new WrappedRange(sc, so, ec, eo);\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from node\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNode: function(node) {\n    let sc = node;\n    let so = 0;\n    let ec = node;\n    let eo = dom.nodeLength(ec);\n\n    // browsers can't target a picture or void node\n    if (dom.isVoid(sc)) {\n      so = dom.listPrev(sc).length - 1;\n      sc = sc.parentNode;\n    }\n    if (dom.isBR(ec)) {\n      eo = dom.listPrev(ec).length - 1;\n      ec = ec.parentNode;\n    } else if (dom.isVoid(ec)) {\n      eo = dom.listPrev(ec).length;\n      ec = ec.parentNode;\n    }\n\n    return this.create(sc, so, ec, eo);\n  },\n\n  /**\n   * create WrappedRange from node after position\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNodeBefore: function(node) {\n    return this.createFromNode(node).collapse(true);\n  },\n\n  /**\n   * create WrappedRange from node after position\n   *\n   * @param {Node} node\n   * @return {WrappedRange}\n   */\n  createFromNodeAfter: function(node) {\n    return this.createFromNode(node).collapse();\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from bookmark\n   *\n   * @param {Node} editable\n   * @param {Object} bookmark\n   * @return {WrappedRange}\n   */\n  createFromBookmark: function(editable, bookmark) {\n    const sc = dom.fromOffsetPath(editable, bookmark.s.path);\n    const so = bookmark.s.offset;\n    const ec = dom.fromOffsetPath(editable, bookmark.e.path);\n    const eo = bookmark.e.offset;\n    return new WrappedRange(sc, so, ec, eo);\n  },\n\n  /**\n   * @method\n   *\n   * create WrappedRange from paraBookmark\n   *\n   * @param {Object} bookmark\n   * @param {Node[]} paras\n   * @return {WrappedRange}\n   */\n  createFromParaBookmark: function(bookmark, paras) {\n    const so = bookmark.s.offset;\n    const eo = bookmark.e.offset;\n    const sc = dom.fromOffsetPath(lists.head(paras), bookmark.s.path);\n    const ec = dom.fromOffsetPath(lists.last(paras), bookmark.e.path);\n\n    return new WrappedRange(sc, so, ec, eo);\n  },\n};\n","import lists from './lists';\nimport func from './func';\n\nconst KEY_MAP = {\n  'BACKSPACE': 8,\n  'TAB': 9,\n  'ENTER': 13,\n  'ESCAPE': 27,\n  'SPACE': 32,\n  'DELETE': 46,\n\n  // Arrow\n  'LEFT': 37,\n  'UP': 38,\n  'RIGHT': 39,\n  'DOWN': 40,\n\n  // Number: 0-9\n  'NUM0': 48,\n  'NUM1': 49,\n  'NUM2': 50,\n  'NUM3': 51,\n  'NUM4': 52,\n  'NUM5': 53,\n  'NUM6': 54,\n  'NUM7': 55,\n  'NUM8': 56,\n\n  // Alphabet: a-z\n  'B': 66,\n  'E': 69,\n  'I': 73,\n  'J': 74,\n  'K': 75,\n  'L': 76,\n  'R': 82,\n  'S': 83,\n  'U': 85,\n  'V': 86,\n  'Y': 89,\n  'Z': 90,\n\n  'SLASH': 191,\n  'LEFTBRACKET': 219,\n  'BACKSLASH': 220,\n  'RIGHTBRACKET': 221,\n\n  // Navigation\n  'HOME': 36,\n  'END': 35,\n  'PAGEUP': 33,\n  'PAGEDOWN': 34,\n};\n\n/**\n * @class core.key\n *\n * Object for keycodes.\n *\n * @singleton\n * @alternateClassName key\n */\nexport default {\n  /**\n   * @method isEdit\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isEdit: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.BACKSPACE,\n      KEY_MAP.TAB,\n      KEY_MAP.ENTER,\n      KEY_MAP.SPACE,\n      KEY_MAP.DELETE,\n    ], keyCode);\n  },\n  /**\n   * @method isRemove\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isRemove: (keyCode) => { // LB\n    return lists.contains([\n      KEY_MAP.BACKSPACE,\n      KEY_MAP.DELETE,\n    ], keyCode);\n  },\n  /**\n   * @method isMove\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isMove: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.LEFT,\n      KEY_MAP.UP,\n      KEY_MAP.RIGHT,\n      KEY_MAP.DOWN,\n    ], keyCode);\n  },\n  /**\n   * @method isNavigation\n   *\n   * @param {Number} keyCode\n   * @return {Boolean}\n   */\n  isNavigation: (keyCode) => {\n    return lists.contains([\n      KEY_MAP.HOME,\n      KEY_MAP.END,\n      KEY_MAP.PAGEUP,\n      KEY_MAP.PAGEDOWN,\n    ], keyCode);\n  },\n  /**\n   * @property {Object} nameFromCode\n   * @property {String} nameFromCode.8 \"BACKSPACE\"\n   */\n  nameFromCode: func.invertObject(KEY_MAP),\n  code: KEY_MAP,\n};\n","import $ from 'jquery';\n\n/**\n * @method readFileAsDataURL\n *\n * read contents of file as representing URL\n *\n * @param {File} file\n * @return {Promise} - then: dataUrl\n */\nexport function readFileAsDataURL(file) {\n  return $.Deferred((deferred) => {\n    $.extend(new FileReader(), {\n      onload: (event) => {\n        const dataURL = event.target.result;\n        deferred.resolve(dataURL);\n      },\n      onerror: (err) => {\n        deferred.reject(err);\n      },\n    }).readAsDataURL(file);\n  }).promise();\n}\n\n/**\n * @method createImage\n *\n * create `<image>` from url string\n *\n * @param {String} url\n * @return {Promise} - then: $image\n */\nexport function createImage(url) {\n  return $.Deferred((deferred) => {\n    const $img = $('<img>');\n\n    $img.one('load', () => {\n      $img.off('error abort');\n      deferred.resolve($img);\n    }).one('error abort', () => {\n      $img.off('load').detach();\n      deferred.reject($img);\n    }).css({\n      display: 'none',\n    }).appendTo(document.body).attr('src', url);\n  }).promise();\n}\n","import range from '../core/range';\n\nexport default class History {\n  constructor(context) {\n    this.stack = [];\n    this.stackOffset = -1;\n    this.context = context;\n    this.$editable = context.layoutInfo.editable;\n    this.editable = this.$editable[0];\n  }\n\n  makeSnapshot() {\n    const rng = range.create(this.editable);\n    const emptyBookmark = { s: { path: [], offset: 0 }, e: { path: [], offset: 0 } };\n\n    return {\n      contents: this.$editable.html(),\n      bookmark: ((rng && rng.isOnEditable()) ? rng.bookmark(this.editable) : emptyBookmark),\n    };\n  }\n\n  applySnapshot(snapshot) {\n    if (snapshot.contents !== null) {\n      this.$editable.html(snapshot.contents);\n    }\n    if (snapshot.bookmark !== null) {\n      range.createFromBookmark(this.editable, snapshot.bookmark).select();\n    }\n  }\n\n  /**\n  * @method rewind\n  * Rewinds the history stack back to the first snapshot taken.\n  * Leaves the stack intact, so that \"Redo\" can still be used.\n  */\n  rewind() {\n    // Create snap shot if not yet recorded\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n      this.recordUndo();\n    }\n\n    // Return to the first available snapshot.\n    this.stackOffset = 0;\n\n    // Apply that snapshot.\n    this.applySnapshot(this.stack[this.stackOffset]);\n  }\n\n  /**\n  *  @method commit\n  *  Resets history stack, but keeps current editor's content.\n  */\n  commit() {\n    // Clear the stack.\n    this.stack = [];\n\n    // Restore stackOffset to its original value.\n    this.stackOffset = -1;\n\n    // Record our first snapshot (of nothing).\n    this.recordUndo();\n  }\n\n  /**\n  * @method reset\n  * Resets the history stack completely; reverting to an empty editor.\n  */\n  reset() {\n    // Clear the stack.\n    this.stack = [];\n\n    // Restore stackOffset to its original value.\n    this.stackOffset = -1;\n\n    // Clear the editable area.\n    this.$editable.html('');\n\n    // Record our first snapshot (of nothing).\n    this.recordUndo();\n  }\n\n  /**\n   * undo\n   */\n  undo() {\n    // Create snap shot if not yet recorded\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\n      this.recordUndo();\n    }\n\n    if (this.stackOffset > 0) {\n      this.stackOffset--;\n      this.applySnapshot(this.stack[this.stackOffset]);\n    }\n  }\n\n  /**\n   * redo\n   */\n  redo() {\n    if (this.stack.length - 1 > this.stackOffset) {\n      this.stackOffset++;\n      this.applySnapshot(this.stack[this.stackOffset]);\n    }\n  }\n\n  /**\n   * recorded undo\n   */\n  recordUndo() {\n    this.stackOffset++;\n\n    // Wash out stack after stackOffset\n    if (this.stack.length > this.stackOffset) {\n      this.stack = this.stack.slice(0, this.stackOffset);\n    }\n\n    // Create new snapshot and push it to the end\n    this.stack.push(this.makeSnapshot());\n\n    // If the stack size reachs to the limit, then slice it\n    if (this.stack.length > this.context.options.historyLimit) {\n      this.stack.shift();\n      this.stackOffset -= 1;\n    }\n  }\n}\n","import $ from 'jquery';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class Style {\n  /**\n   * @method jQueryCSS\n   *\n   * [workaround] for old jQuery\n   * passing an array of style properties to .css()\n   * will result in an object of property-value pairs.\n   * (compability with version < 1.9)\n   *\n   * @private\n   * @param  {jQuery} $obj\n   * @param  {Array} propertyNames - An array of one or more CSS properties.\n   * @return {Object}\n   */\n  jQueryCSS($obj, propertyNames) {\n    const result = {};\n    $.each(propertyNames, (idx, propertyName) => {\n      result[propertyName] = $obj.css(propertyName);\n    });\n    return result;\n  }\n\n  /**\n   * returns style object from node\n   *\n   * @param {jQuery} $node\n   * @return {Object}\n   */\n  fromNode($node) {\n    const properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\n    const styleInfo = this.jQueryCSS($node, properties) || {};\n\n    const fontSize = $node[0].style.fontSize || styleInfo['font-size'];\n\n    styleInfo['font-size'] = parseInt(fontSize, 10);\n    styleInfo['font-size-unit'] = fontSize.match(/[a-z%]+$/);\n\n    return styleInfo;\n  }\n\n  /**\n   * paragraph level style\n   *\n   * @param {WrappedRange} rng\n   * @param {Object} styleInfo\n   */\n  stylePara(rng, styleInfo) {\n    $.each(rng.nodes(dom.isPara, {\n      includeAncestor: true,\n    }), (idx, para) => {\n      $(para).css(styleInfo);\n    });\n  }\n\n  /**\n   * insert and returns styleNodes on range.\n   *\n   * @param {WrappedRange} rng\n   * @param {Object} [options] - options for styleNodes\n   * @param {String} [options.nodeName] - default: `SPAN`\n   * @param {Boolean} [options.expandClosestSibling] - default: `false`\n   * @param {Boolean} [options.onlyPartialContains] - default: `false`\n   * @return {Node[]}\n   */\n  styleNodes(rng, options) {\n    rng = rng.splitText();\n\n    const nodeName = (options && options.nodeName) || 'SPAN';\n    const expandClosestSibling = !!(options && options.expandClosestSibling);\n    const onlyPartialContains = !!(options && options.onlyPartialContains);\n\n    if (rng.isCollapsed()) {\n      return [rng.insertNode(dom.create(nodeName))];\n    }\n\n    let pred = dom.makePredByNodeName(nodeName);\n    const nodes = rng.nodes(dom.isText, {\n      fullyContains: true,\n    }).map((text) => {\n      return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\n    });\n\n    if (expandClosestSibling) {\n      if (onlyPartialContains) {\n        const nodesInRange = rng.nodes();\n        // compose with partial contains predication\n        pred = func.and(pred, (node) => {\n          return lists.contains(nodesInRange, node);\n        });\n      }\n\n      return nodes.map((node) => {\n        const siblings = dom.withClosestSiblings(node, pred);\n        const head = lists.head(siblings);\n        const tails = lists.tail(siblings);\n        $.each(tails, (idx, elem) => {\n          dom.appendChildNodes(head, elem.childNodes);\n          dom.remove(elem);\n        });\n        return lists.head(siblings);\n      });\n    } else {\n      return nodes;\n    }\n  }\n\n  /**\n   * get current style on cursor\n   *\n   * @param {WrappedRange} rng\n   * @return {Object} - object contains style properties.\n   */\n  current(rng) {\n    const $cont = $(!dom.isElement(rng.sc) ? rng.sc.parentNode : rng.sc);\n    let styleInfo = this.fromNode($cont);\n\n    // document.queryCommandState for toggle state\n    // [workaround] prevent Firefox nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"\n    try {\n      styleInfo = $.extend(styleInfo, {\n        'font-bold': document.queryCommandState('bold') ? 'bold' : 'normal',\n        'font-italic': document.queryCommandState('italic') ? 'italic' : 'normal',\n        'font-underline': document.queryCommandState('underline') ? 'underline' : 'normal',\n        'font-subscript': document.queryCommandState('subscript') ? 'subscript' : 'normal',\n        'font-superscript': document.queryCommandState('superscript') ? 'superscript' : 'normal',\n        'font-strikethrough': document.queryCommandState('strikethrough') ? 'strikethrough' : 'normal',\n        'font-family': document.queryCommandValue('fontname') || styleInfo['font-family'],\n      });\n    } catch (e) {\n      // eslint-disable-next-line\n    }\n\n    // list-style-type to list-style(unordered, ordered)\n    if (!rng.isOnList()) {\n      styleInfo['list-style'] = 'none';\n    } else {\n      const orderedTypes = ['circle', 'disc', 'disc-leading-zero', 'square'];\n      const isUnordered = orderedTypes.indexOf(styleInfo['list-style-type']) > -1;\n      styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\n    }\n\n    const para = dom.ancestor(rng.sc, dom.isPara);\n    if (para && para.style['line-height']) {\n      styleInfo['line-height'] = para.style.lineHeight;\n    } else {\n      const lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\n      styleInfo['line-height'] = lineHeight.toFixed(1);\n    }\n\n    styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\n    styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\n    styleInfo.range = rng;\n\n    return styleInfo;\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport func from '../core/func';\nimport dom from '../core/dom';\nimport range from '../core/range';\n\nexport default class Bullet {\n  /**\n   * toggle ordered list\n   */\n  insertOrderedList(editable) {\n    this.toggleList('OL', editable);\n  }\n\n  /**\n   * toggle unordered list\n   */\n  insertUnorderedList(editable) {\n    this.toggleList('UL', editable);\n  }\n\n  /**\n   * indent\n   */\n  indent(editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    const paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      if (dom.isLi(head)) {\n        const previousList = this.findList(head.previousSibling);\n        if (previousList) {\n          paras.map((para) => previousList.appendChild(para));\n        } else {\n          this.wrapList(paras, head.parentNode.nodeName);\n          paras.map((para) => para.parentNode).map((para) => this.appendToPrevious(para));\n        }\n      } else {\n        $.each(paras, (idx, para) => {\n          $(para).css('marginLeft', (idx, val) => {\n            return (parseInt(val, 10) || 0) + 25;\n          });\n        });\n      }\n    });\n\n    rng.select();\n  }\n\n  /**\n   * outdent\n   */\n  outdent(editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    const paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      if (dom.isLi(head)) {\n        this.releaseList([paras]);\n      } else {\n        $.each(paras, (idx, para) => {\n          $(para).css('marginLeft', (idx, val) => {\n            val = parseInt(val, 10) || 0;\n            return val > 25 ? val - 25 : '';\n          });\n        });\n      }\n    });\n\n    rng.select();\n  }\n\n  /**\n   * toggle list\n   *\n   * @param {String} listName - OL or UL\n   */\n  toggleList(listName, editable) {\n    const rng = range.create(editable).wrapBodyInlineWithPara();\n\n    let paras = rng.nodes(dom.isPara, { includeAncestor: true });\n    const bookmark = rng.paraBookmark(paras);\n    const clustereds = lists.clusterBy(paras, func.peq2('parentNode'));\n\n    // paragraph to list\n    if (lists.find(paras, dom.isPurePara)) {\n      let wrappedParas = [];\n      $.each(clustereds, (idx, paras) => {\n        wrappedParas = wrappedParas.concat(this.wrapList(paras, listName));\n      });\n      paras = wrappedParas;\n      // list to paragraph or change list style\n    } else {\n      const diffLists = rng\n        .nodes(dom.isList, {\n          includeAncestor: true,\n        })\n        .filter((listNode) => {\n          return !$.nodeName(listNode, listName);\n        });\n\n      if (diffLists.length) {\n        $.each(diffLists, (idx, listNode) => {\n          dom.replace(listNode, listName);\n        });\n      } else {\n        paras = this.releaseList(clustereds, true);\n      }\n    }\n\n    range.createFromParaBookmark(bookmark, paras).select();\n  }\n\n  /**\n   * @param {Node[]} paras\n   * @param {String} listName\n   * @return {Node[]}\n   */\n  wrapList(paras, listName) {\n    const head = lists.head(paras);\n    const last = lists.last(paras);\n\n    const prevList = dom.isList(head.previousSibling) && head.previousSibling;\n    const nextList = dom.isList(last.nextSibling) && last.nextSibling;\n\n    const listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last);\n\n    // P to LI\n    paras = paras.map((para) => {\n      return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\n    });\n\n    // append to list(<ul>, <ol>)\n    dom.appendChildNodes(listNode, paras, true);\n\n    if (nextList) {\n      dom.appendChildNodes(listNode, lists.from(nextList.childNodes), true);\n      dom.remove(nextList);\n    }\n\n    return paras;\n  }\n\n  /**\n   * @method releaseList\n   *\n   * @param {Array[]} clustereds\n   * @param {Boolean} isEscapseToBody\n   * @return {Node[]}\n   */\n  releaseList(clustereds, isEscapseToBody) {\n    let releasedParas = [];\n\n    $.each(clustereds, (idx, paras) => {\n      const head = lists.head(paras);\n      const last = lists.last(paras);\n\n      const headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) : head.parentNode;\n      const parentItem = headList.parentNode;\n\n      if (headList.parentNode.nodeName === 'LI') {\n        paras.map((para) => {\n          const newList = this.findNextSiblings(para);\n\n          if (parentItem.nextSibling) {\n            parentItem.parentNode.insertBefore(para, parentItem.nextSibling);\n          } else {\n            parentItem.parentNode.appendChild(para);\n          }\n\n          if (newList.length) {\n            this.wrapList(newList, headList.nodeName);\n            para.appendChild(newList[0].parentNode);\n          }\n        });\n\n        if (headList.children.length === 0) {\n          parentItem.removeChild(headList);\n        }\n\n        if (parentItem.childNodes.length === 0) {\n          parentItem.parentNode.removeChild(parentItem);\n        }\n      } else {\n        const lastList =\n          headList.childNodes.length > 1\n            ? dom.splitTree(\n              headList,\n              {\n                node: last.parentNode,\n                offset: dom.position(last) + 1,\n              },\n              {\n                isSkipPaddingBlankHTML: true,\n              },\n            )\n            : null;\n\n        const middleList = dom.splitTree(\n          headList,\n          {\n            node: head.parentNode,\n            offset: dom.position(head),\n          },\n          {\n            isSkipPaddingBlankHTML: true,\n          },\n        );\n\n        paras = isEscapseToBody\n          ? dom.listDescendant(middleList, dom.isLi)\n          : lists.from(middleList.childNodes).filter(dom.isLi);\n\n        // LI to P\n        if (isEscapseToBody || !dom.isList(headList.parentNode)) {\n          paras = paras.map((para) => {\n            return dom.replace(para, 'P');\n          });\n        }\n\n        $.each(lists.from(paras).reverse(), (idx, para) => {\n          dom.insertAfter(para, headList);\n        });\n\n        // remove empty lists\n        const rootLists = lists.compact([headList, middleList, lastList]);\n        $.each(rootLists, (idx, rootList) => {\n          const listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\n          $.each(listNodes.reverse(), (idx, listNode) => {\n            if (!dom.nodeLength(listNode)) {\n              dom.remove(listNode, true);\n            }\n          });\n        });\n      }\n\n      releasedParas = releasedParas.concat(paras);\n    });\n\n    return releasedParas;\n  }\n\n  /**\n   * @method appendToPrevious\n   *\n   * Appends list to previous list item, if\n   * none exist it wraps the list in a new list item.\n   *\n   * @param {HTMLNode} ListItem\n   * @return {HTMLNode}\n   */\n  appendToPrevious(node) {\n    return node.previousSibling ? dom.appendChildNodes(node.previousSibling, [node]) : this.wrapList([node], 'LI');\n  }\n\n  /**\n   * @method findList\n   *\n   * Finds an existing list in list item\n   *\n   * @param {HTMLNode} ListItem\n   * @return {Array[]}\n   */\n  findList(node) {\n    return node ? lists.find(node.children, (child) => ['OL', 'UL'].indexOf(child.nodeName) > -1) : null;\n  }\n\n  /**\n   * @method findNextSiblings\n   *\n   * Finds all list item siblings that follow it\n   *\n   * @param {HTMLNode} ListItem\n   * @return {HTMLNode}\n   */\n  findNextSiblings(node) {\n    const siblings = [];\n    while (node.nextSibling) {\n      siblings.push(node.nextSibling);\n      node = node.nextSibling;\n    }\n    return siblings;\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport Bullet from '../editing/Bullet';\n\n/**\n * @class editing.Typing\n *\n * Typing\n *\n */\nexport default class Typing {\n  constructor(context) {\n    // a Bullet instance to toggle lists off\n    this.bullet = new Bullet();\n    this.options = context.options;\n  }\n\n  /**\n   * insert tab\n   *\n   * @param {WrappedRange} rng\n   * @param {Number} tabsize\n   */\n  insertTab(rng, tabsize) {\n    const tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\n    rng = rng.deleteContents();\n    rng.insertNode(tab, true);\n\n    rng = range.create(tab, tabsize);\n    rng.select();\n  }\n\n  /**\n   * insert paragraph\n   *\n   * @param {jQuery} $editable\n   * @param {WrappedRange} rng Can be used in unit tests to \"mock\" the range\n   *\n   * blockquoteBreakingLevel\n   *   0 - No break, the new paragraph remains inside the quote\n   *   1 - Break the first blockquote in the ancestors list\n   *   2 - Break all blockquotes, so that the new paragraph is not quoted (this is the default)\n   */\n  insertParagraph(editable, rng) {\n    rng = rng || range.create(editable);\n\n    // deleteContents on range.\n    rng = rng.deleteContents();\n\n    // Wrap range if it needs to be wrapped by paragraph\n    rng = rng.wrapBodyInlineWithPara();\n\n    // finding paragraph\n    const splitRoot = dom.ancestor(rng.sc, dom.isPara);\n\n    let nextPara;\n    // on paragraph: split paragraph\n    if (splitRoot) {\n      // if it is an empty line with li\n      if (dom.isLi(splitRoot) && (dom.isEmpty(splitRoot) || dom.deepestChildIsEmpty(splitRoot))) {\n        // toggle UL/OL and escape\n        this.bullet.toggleList(splitRoot.parentNode.nodeName);\n        return;\n      } else {\n        let blockquote = null;\n        if (this.options.blockquoteBreakingLevel === 1) {\n          blockquote = dom.ancestor(splitRoot, dom.isBlockquote);\n        } else if (this.options.blockquoteBreakingLevel === 2) {\n          blockquote = dom.lastAncestor(splitRoot, dom.isBlockquote);\n        }\n\n        if (blockquote) {\n          // We're inside a blockquote and options ask us to break it\n          nextPara = $(dom.emptyPara)[0];\n          // If the split is right before a <br>, remove it so that there's no \"empty line\"\n          // after the split in the new blockquote created\n          if (dom.isRightEdgePoint(rng.getStartPoint()) && dom.isBR(rng.sc.nextSibling)) {\n            $(rng.sc.nextSibling).remove();\n          }\n          const split = dom.splitTree(blockquote, rng.getStartPoint(), { isDiscardEmptySplits: true });\n          if (split) {\n            split.parentNode.insertBefore(nextPara, split);\n          } else {\n            dom.insertAfter(nextPara, blockquote); // There's no split if we were at the end of the blockquote\n          }\n        } else {\n          nextPara = dom.splitTree(splitRoot, rng.getStartPoint());\n\n          // not a blockquote, just insert the paragraph\n          let emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\n          emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\n\n          $.each(emptyAnchors, (idx, anchor) => {\n            dom.remove(anchor);\n          });\n\n          // replace empty heading, pre or custom-made styleTag with P tag\n          if ((dom.isHeading(nextPara) || dom.isPre(nextPara) || dom.isCustomStyleTag(nextPara)) && dom.isEmpty(nextPara)) {\n            nextPara = dom.replace(nextPara, 'p');\n          }\n        }\n      }\n    // no paragraph: insert empty paragraph\n    } else {\n      const next = rng.sc.childNodes[rng.so];\n      nextPara = $(dom.emptyPara)[0];\n      if (next) {\n        rng.sc.insertBefore(nextPara, next);\n      } else {\n        rng.sc.appendChild(nextPara);\n      }\n    }\n\n    range.create(nextPara, 0).normalize().select().scrollIntoView(editable);\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport lists from '../core/lists';\n\n/**\n * @class Create a virtual table to create what actions to do in change.\n * @param {object} startPoint Cell selected to apply change.\n * @param {enum} where  Where change will be applied Row or Col. Use enum: TableResultAction.where\n * @param {enum} action Action to be applied. Use enum: TableResultAction.requestAction\n * @param {object} domTable Dom element of table to make changes.\n */\nconst TableResultAction = function(startPoint, where, action, domTable) {\n  const _startPoint = { 'colPos': 0, 'rowPos': 0 };\n  const _virtualTable = [];\n  const _actionCellList = [];\n\n  /// ///////////////////////////////////////////\n  // Private functions\n  /// ///////////////////////////////////////////\n\n  /**\n   * Set the startPoint of action.\n   */\n  function setStartPoint() {\n    if (!startPoint || !startPoint.tagName || (startPoint.tagName.toLowerCase() !== 'td' && startPoint.tagName.toLowerCase() !== 'th')) {\n      // Impossible to identify start Cell point\n      return;\n    }\n    _startPoint.colPos = startPoint.cellIndex;\n    if (!startPoint.parentElement || !startPoint.parentElement.tagName || startPoint.parentElement.tagName.toLowerCase() !== 'tr') {\n      // Impossible to identify start Row point\n      return;\n    }\n    _startPoint.rowPos = startPoint.parentElement.rowIndex;\n  }\n\n  /**\n   * Define virtual table position info object.\n   *\n   * @param {int} rowIndex Index position in line of virtual table.\n   * @param {int} cellIndex Index position in column of virtual table.\n   * @param {object} baseRow Row affected by this position.\n   * @param {object} baseCell Cell affected by this position.\n   * @param {bool} isSpan Inform if it is an span cell/row.\n   */\n  function setVirtualTablePosition(rowIndex, cellIndex, baseRow, baseCell, isRowSpan, isColSpan, isVirtualCell) {\n    const objPosition = {\n      'baseRow': baseRow,\n      'baseCell': baseCell,\n      'isRowSpan': isRowSpan,\n      'isColSpan': isColSpan,\n      'isVirtual': isVirtualCell,\n    };\n    if (!_virtualTable[rowIndex]) {\n      _virtualTable[rowIndex] = [];\n    }\n    _virtualTable[rowIndex][cellIndex] = objPosition;\n  }\n\n  /**\n   * Create action cell object.\n   *\n   * @param {object} virtualTableCellObj Object of specific position on virtual table.\n   * @param {enum} resultAction Action to be applied in that item.\n   */\n  function getActionCell(virtualTableCellObj, resultAction, virtualRowPosition, virtualColPosition) {\n    return {\n      'baseCell': virtualTableCellObj.baseCell,\n      'action': resultAction,\n      'virtualTable': {\n        'rowIndex': virtualRowPosition,\n        'cellIndex': virtualColPosition,\n      },\n    };\n  }\n\n  /**\n   * Recover free index of row to append Cell.\n   *\n   * @param {int} rowIndex Index of row to find free space.\n   * @param {int} cellIndex Index of cell to find free space in table.\n   */\n  function recoverCellIndex(rowIndex, cellIndex) {\n    if (!_virtualTable[rowIndex]) {\n      return cellIndex;\n    }\n    if (!_virtualTable[rowIndex][cellIndex]) {\n      return cellIndex;\n    }\n\n    let newCellIndex = cellIndex;\n    while (_virtualTable[rowIndex][newCellIndex]) {\n      newCellIndex++;\n      if (!_virtualTable[rowIndex][newCellIndex]) {\n        return newCellIndex;\n      }\n    }\n  }\n\n  /**\n   * Recover info about row and cell and add information to virtual table.\n   *\n   * @param {object} row Row to recover information.\n   * @param {object} cell Cell to recover information.\n   */\n  function addCellInfoToVirtual(row, cell) {\n    const cellIndex = recoverCellIndex(row.rowIndex, cell.cellIndex);\n    const cellHasColspan = (cell.colSpan > 1);\n    const cellHasRowspan = (cell.rowSpan > 1);\n    const isThisSelectedCell = (row.rowIndex === _startPoint.rowPos && cell.cellIndex === _startPoint.colPos);\n    setVirtualTablePosition(row.rowIndex, cellIndex, row, cell, cellHasRowspan, cellHasColspan, false);\n\n    // Add span rows to virtual Table.\n    const rowspanNumber = cell.attributes.rowSpan ? parseInt(cell.attributes.rowSpan.value, 10) : 0;\n    if (rowspanNumber > 1) {\n      for (let rp = 1; rp < rowspanNumber; rp++) {\n        const rowspanIndex = row.rowIndex + rp;\n        adjustStartPoint(rowspanIndex, cellIndex, cell, isThisSelectedCell);\n        setVirtualTablePosition(rowspanIndex, cellIndex, row, cell, true, cellHasColspan, true);\n      }\n    }\n\n    // Add span cols to virtual table.\n    const colspanNumber = cell.attributes.colSpan ? parseInt(cell.attributes.colSpan.value, 10) : 0;\n    if (colspanNumber > 1) {\n      for (let cp = 1; cp < colspanNumber; cp++) {\n        const cellspanIndex = recoverCellIndex(row.rowIndex, (cellIndex + cp));\n        adjustStartPoint(row.rowIndex, cellspanIndex, cell, isThisSelectedCell);\n        setVirtualTablePosition(row.rowIndex, cellspanIndex, row, cell, cellHasRowspan, true, true);\n      }\n    }\n  }\n\n  /**\n   * Process validation and adjust of start point if needed\n   *\n   * @param {int} rowIndex\n   * @param {int} cellIndex\n   * @param {object} cell\n   * @param {bool} isSelectedCell\n   */\n  function adjustStartPoint(rowIndex, cellIndex, cell, isSelectedCell) {\n    if (rowIndex === _startPoint.rowPos && _startPoint.colPos >= cell.cellIndex && cell.cellIndex <= cellIndex && !isSelectedCell) {\n      _startPoint.colPos++;\n    }\n  }\n\n  /**\n   * Create virtual table of cells with all cells, including span cells.\n   */\n  function createVirtualTable() {\n    const rows = domTable.rows;\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      const cells = rows[rowIndex].cells;\n      for (let cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n        addCellInfoToVirtual(rows[rowIndex], cells[cellIndex]);\n      }\n    }\n  }\n\n  /**\n   * Get action to be applied on the cell.\n   *\n   * @param {object} cell virtual table cell to apply action\n   */\n  function getDeleteResultActionToCell(cell) {\n    switch (where) {\n      case TableResultAction.where.Column:\n        if (cell.isColSpan) {\n          return TableResultAction.resultAction.SubtractSpanCount;\n        }\n        break;\n      case TableResultAction.where.Row:\n        if (!cell.isVirtual && cell.isRowSpan) {\n          return TableResultAction.resultAction.AddCell;\n        } else if (cell.isRowSpan) {\n          return TableResultAction.resultAction.SubtractSpanCount;\n        }\n        break;\n    }\n    return TableResultAction.resultAction.RemoveCell;\n  }\n\n  /**\n   * Get action to be applied on the cell.\n   *\n   * @param {object} cell virtual table cell to apply action\n   */\n  function getAddResultActionToCell(cell) {\n    switch (where) {\n      case TableResultAction.where.Column:\n        if (cell.isColSpan) {\n          return TableResultAction.resultAction.SumSpanCount;\n        } else if (cell.isRowSpan && cell.isVirtual) {\n          return TableResultAction.resultAction.Ignore;\n        }\n        break;\n      case TableResultAction.where.Row:\n        if (cell.isRowSpan) {\n          return TableResultAction.resultAction.SumSpanCount;\n        } else if (cell.isColSpan && cell.isVirtual) {\n          return TableResultAction.resultAction.Ignore;\n        }\n        break;\n    }\n    return TableResultAction.resultAction.AddCell;\n  }\n\n  function init() {\n    setStartPoint();\n    createVirtualTable();\n  }\n\n  /// ///////////////////////////////////////////\n  // Public functions\n  /// ///////////////////////////////////////////\n\n  /**\n   * Recover array os what to do in table.\n   */\n  this.getActionList = function() {\n    const fixedRow = (where === TableResultAction.where.Row) ? _startPoint.rowPos : -1;\n    const fixedCol = (where === TableResultAction.where.Column) ? _startPoint.colPos : -1;\n\n    let actualPosition = 0;\n    let canContinue = true;\n    while (canContinue) {\n      const rowPosition = (fixedRow >= 0) ? fixedRow : actualPosition;\n      const colPosition = (fixedCol >= 0) ? fixedCol : actualPosition;\n      const row = _virtualTable[rowPosition];\n      if (!row) {\n        canContinue = false;\n        return _actionCellList;\n      }\n      const cell = row[colPosition];\n      if (!cell) {\n        canContinue = false;\n        return _actionCellList;\n      }\n\n      // Define action to be applied in this cell\n      let resultAction = TableResultAction.resultAction.Ignore;\n      switch (action) {\n        case TableResultAction.requestAction.Add:\n          resultAction = getAddResultActionToCell(cell);\n          break;\n        case TableResultAction.requestAction.Delete:\n          resultAction = getDeleteResultActionToCell(cell);\n          break;\n      }\n      _actionCellList.push(getActionCell(cell, resultAction, rowPosition, colPosition));\n      actualPosition++;\n    }\n\n    return _actionCellList;\n  };\n\n  init();\n};\n/**\n*\n* Where action occours enum.\n*/\nTableResultAction.where = { 'Row': 0, 'Column': 1 };\n/**\n*\n* Requested action to apply enum.\n*/\nTableResultAction.requestAction = { 'Add': 0, 'Delete': 1 };\n/**\n*\n* Result action to be executed enum.\n*/\nTableResultAction.resultAction = { 'Ignore': 0, 'SubtractSpanCount': 1, 'RemoveCell': 2, 'AddCell': 3, 'SumSpanCount': 4 };\n\n/**\n *\n * @class editing.Table\n *\n * Table\n *\n */\nexport default class Table {\n  /**\n   * handle tab key\n   *\n   * @param {WrappedRange} rng\n   * @param {Boolean} isShift\n   */\n  tab(rng, isShift) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const table = dom.ancestor(cell, dom.isTable);\n    const cells = dom.listDescendant(table, dom.isCell);\n\n    const nextCell = lists[isShift ? 'prev' : 'next'](cells, cell);\n    if (nextCell) {\n      range.create(nextCell, 0).select();\n    }\n  }\n\n  /**\n   * Add a new row\n   *\n   * @param {WrappedRange} rng\n   * @param {String} position (top/bottom)\n   * @return {Node}\n   */\n  addRow(rng, position) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n\n    const currentTr = $(cell).closest('tr');\n    const trAttributes = this.recoverAttributes(currentTr);\n    const html = $('<tr' + trAttributes + '></tr>');\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\n      TableResultAction.requestAction.Add, $(currentTr).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let idCell = 0; idCell < actions.length; idCell++) {\n      const currentCell = actions[idCell];\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\n      switch (currentCell.action) {\n        case TableResultAction.resultAction.AddCell:\n          html.append('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          break;\n        case TableResultAction.resultAction.SumSpanCount:\n          {\n            if (position === 'top') {\n              const baseCellTr = currentCell.baseCell.parent;\n              const isTopFromRowSpan = (!baseCellTr ? 0 : currentCell.baseCell.closest('tr').rowIndex) <= currentTr[0].rowIndex;\n              if (isTopFromRowSpan) {\n                const newTd = $('<div></div>').append($('<td' + tdAttributes + '>' + dom.blank + '</td>').removeAttr('rowspan')).html();\n                html.append(newTd);\n                break;\n              }\n            }\n            let rowspanNumber = parseInt(currentCell.baseCell.rowSpan, 10);\n            rowspanNumber++;\n            currentCell.baseCell.setAttribute('rowSpan', rowspanNumber);\n          }\n          break;\n      }\n    }\n\n    if (position === 'top') {\n      currentTr.before(html);\n    } else {\n      const cellHasRowspan = (cell.rowSpan > 1);\n      if (cellHasRowspan) {\n        const lastTrIndex = currentTr[0].rowIndex + (cell.rowSpan - 2);\n        $($(currentTr).parent().find('tr')[lastTrIndex]).after($(html));\n        return;\n      }\n      currentTr.after(html);\n    }\n  }\n\n  /**\n   * Add a new col\n   *\n   * @param {WrappedRange} rng\n   * @param {String} position (left/right)\n   * @return {Node}\n   */\n  addCol(rng, position) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const rowsGroup = $(row).siblings();\n    rowsGroup.push(row);\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\n      TableResultAction.requestAction.Add, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      const currentCell = actions[actionIndex];\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\n      switch (currentCell.action) {\n        case TableResultAction.resultAction.AddCell:\n          if (position === 'right') {\n            $(currentCell.baseCell).after('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          } else {\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          }\n          break;\n        case TableResultAction.resultAction.SumSpanCount:\n          if (position === 'right') {\n            let colspanNumber = parseInt(currentCell.baseCell.colSpan, 10);\n            colspanNumber++;\n            currentCell.baseCell.setAttribute('colSpan', colspanNumber);\n          } else {\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\n          }\n          break;\n      }\n    }\n  }\n\n  /*\n  * Copy attributes from element.\n  *\n  * @param {object} Element to recover attributes.\n  * @return {string} Copied string elements.\n  */\n  recoverAttributes(el) {\n    let resultStr = '';\n\n    if (!el) {\n      return resultStr;\n    }\n\n    const attrList = el.attributes || [];\n\n    for (let i = 0; i < attrList.length; i++) {\n      if (attrList[i].name.toLowerCase() === 'id') {\n        continue;\n      }\n\n      if (attrList[i].specified) {\n        resultStr += ' ' + attrList[i].name + '=\\'' + attrList[i].value + '\\'';\n      }\n    }\n\n    return resultStr;\n  }\n\n  /**\n   * Delete current row\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteRow(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const cellPos = row.children('td, th').index($(cell));\n    const rowPos = row[0].rowIndex;\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      if (!actions[actionIndex]) {\n        continue;\n      }\n\n      const baseCell = actions[actionIndex].baseCell;\n      const virtualPosition = actions[actionIndex].virtualTable;\n      const hasRowspan = (baseCell.rowSpan && baseCell.rowSpan > 1);\n      let rowspanNumber = (hasRowspan) ? parseInt(baseCell.rowSpan, 10) : 0;\n      switch (actions[actionIndex].action) {\n        case TableResultAction.resultAction.Ignore:\n          continue;\n        case TableResultAction.resultAction.AddCell:\n          {\n            const nextRow = row.next('tr')[0];\n            if (!nextRow) { continue; }\n            const cloneRow = row[0].cells[cellPos];\n            if (hasRowspan) {\n              if (rowspanNumber > 2) {\n                rowspanNumber--;\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                nextRow.cells[cellPos].setAttribute('rowSpan', rowspanNumber);\n                nextRow.cells[cellPos].innerHTML = '';\n              } else if (rowspanNumber === 2) {\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\n                nextRow.cells[cellPos].removeAttribute('rowSpan');\n                nextRow.cells[cellPos].innerHTML = '';\n              }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.SubtractSpanCount:\n          if (hasRowspan) {\n            if (rowspanNumber > 2) {\n              rowspanNumber--;\n              baseCell.setAttribute('rowSpan', rowspanNumber);\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n            } else if (rowspanNumber === 2) {\n              baseCell.removeAttribute('rowSpan');\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.RemoveCell:\n          // Do not need remove cell because row will be deleted.\n          continue;\n      }\n    }\n    row.remove();\n  }\n\n  /**\n   * Delete current col\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteCol(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    const row = $(cell).closest('tr');\n    const cellPos = row.children('td, th').index($(cell));\n\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\n    const actions = vTable.getActionList();\n\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\n      if (!actions[actionIndex]) {\n        continue;\n      }\n      switch (actions[actionIndex].action) {\n        case TableResultAction.resultAction.Ignore:\n          continue;\n        case TableResultAction.resultAction.SubtractSpanCount:\n          {\n            const baseCell = actions[actionIndex].baseCell;\n            const hasColspan = (baseCell.colSpan && baseCell.colSpan > 1);\n            if (hasColspan) {\n              let colspanNumber = (baseCell.colSpan) ? parseInt(baseCell.colSpan, 10) : 0;\n              if (colspanNumber > 2) {\n                colspanNumber--;\n                baseCell.setAttribute('colSpan', colspanNumber);\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n              } else if (colspanNumber === 2) {\n                baseCell.removeAttribute('colSpan');\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\n              }\n            }\n          }\n          continue;\n        case TableResultAction.resultAction.RemoveCell:\n          dom.remove(actions[actionIndex].baseCell, true);\n          continue;\n      }\n    }\n  }\n\n  /**\n   * create empty table element\n   *\n   * @param {Number} rowCount\n   * @param {Number} colCount\n   * @return {Node}\n   */\n  createTable(colCount, rowCount, options) {\n    const tds = [];\n    let tdHTML;\n    for (let idxCol = 0; idxCol < colCount; idxCol++) {\n      tds.push('<td>' + dom.blank + '</td>');\n    }\n    tdHTML = tds.join('');\n\n    const trs = [];\n    let trHTML;\n    for (let idxRow = 0; idxRow < rowCount; idxRow++) {\n      trs.push('<tr>' + tdHTML + '</tr>');\n    }\n    trHTML = trs.join('');\n    const $table = $('<table>' + trHTML + '</table>');\n    if (options && options.tableClassName) {\n      $table.addClass(options.tableClassName);\n    }\n\n    return $table[0];\n  }\n\n  /**\n   * Delete current table\n   *\n   * @param {WrappedRange} rng\n   * @return {Node}\n   */\n  deleteTable(rng) {\n    const cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n    $(cell).closest('table').remove();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport { readFileAsDataURL, createImage } from '../core/async';\nimport History from '../editing/History';\nimport Style from '../editing/Style';\nimport Typing from '../editing/Typing';\nimport Table from '../editing/Table';\nimport Bullet from '../editing/Bullet';\n\nconst KEY_BOGUS = 'bogus';\nconst MAILTO_PATTERN = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst TEL_PATTERN = /^(\\+?\\d{1,3}[\\s-]?)?(\\d{1,4})[\\s-]?(\\d{1,4})[\\s-]?(\\d{1,4})$/;\nconst URL_SCHEME_PATTERN = /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/;\n\n/**\n * @class Editor\n */\nexport default class Editor {\n  constructor(context) {\n    this.context = context;\n\n    this.$note = context.layoutInfo.note;\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    this.editable = this.$editable[0];\n    this.lastRange = null;\n    this.snapshot = null;\n\n    this.style = new Style();\n    this.table = new Table();\n    this.typing = new Typing(context);\n    this.bullet = new Bullet();\n    this.history = new History(context);\n\n    this.context.memo('help.escape', this.lang.help.escape);\n    this.context.memo('help.undo', this.lang.help.undo);\n    this.context.memo('help.redo', this.lang.help.redo);\n    this.context.memo('help.tab', this.lang.help.tab);\n    this.context.memo('help.untab', this.lang.help.untab);\n    this.context.memo('help.insertParagraph', this.lang.help.insertParagraph);\n    this.context.memo('help.insertOrderedList', this.lang.help.insertOrderedList);\n    this.context.memo('help.insertUnorderedList', this.lang.help.insertUnorderedList);\n    this.context.memo('help.indent', this.lang.help.indent);\n    this.context.memo('help.outdent', this.lang.help.outdent);\n    this.context.memo('help.formatPara', this.lang.help.formatPara);\n    this.context.memo('help.insertHorizontalRule', this.lang.help.insertHorizontalRule);\n    this.context.memo('help.fontName', this.lang.help.fontName);\n\n    // native commands(with execCommand), generate function for execCommand\n    const commands = [\n      'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript',\n      'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\n      'formatBlock', 'removeFormat', 'backColor',\n    ];\n\n    for (let idx = 0, len = commands.length; idx < len; idx++) {\n      this[commands[idx]] = ((sCmd) => {\n        return (value) => {\n          this.beforeCommand();\n          document.execCommand(sCmd, false, value);\n          this.afterCommand(true);\n        };\n      })(commands[idx]);\n      this.context.memo('help.' + commands[idx], this.lang.help[commands[idx]]);\n    }\n\n    this.fontName = this.wrapCommand((value) => {\n      return this.fontStyling('font-family', env.validFontName(value));\n    });\n\n    this.fontSize = this.wrapCommand((value) => {\n      const unit = this.currentStyle()['font-size-unit'];\n      return this.fontStyling('font-size', value + unit);\n    });\n\n    this.fontSizeUnit = this.wrapCommand((value) => {\n      const size = this.currentStyle()['font-size'];\n      return this.fontStyling('font-size', size + value);\n    });\n\n    for (let idx = 1; idx <= 6; idx++) {\n      this['formatH' + idx] = ((idx) => {\n        return () => {\n          this.formatBlock('H' + idx);\n        };\n      })(idx);\n      this.context.memo('help.formatH' + idx, this.lang.help['formatH' + idx]);\n    }\n\n    this.insertParagraph = this.wrapCommand(() => {\n      this.typing.insertParagraph(this.editable);\n    });\n\n    this.insertOrderedList = this.wrapCommand(() => {\n      this.bullet.insertOrderedList(this.editable);\n    });\n\n    this.insertUnorderedList = this.wrapCommand(() => {\n      this.bullet.insertUnorderedList(this.editable);\n    });\n\n    this.indent = this.wrapCommand(() => {\n      this.bullet.indent(this.editable);\n    });\n\n    this.outdent = this.wrapCommand(() => {\n      this.bullet.outdent(this.editable);\n    });\n\n    /**\n     * insertNode\n     * insert node\n     * @param {Node} node\n     */\n    this.insertNode = this.wrapCommand((node) => {\n      if (this.isLimited($(node).text().length)) {\n        return;\n      }\n      const rng = this.getLastRange();\n      rng.insertNode(node);\n      this.setLastRange(range.createFromNodeAfter(node).select());\n    });\n\n    /**\n     * insert text\n     * @param {String} text\n     */\n    this.insertText = this.wrapCommand((text) => {\n      if (this.isLimited(text.length)) {\n        return;\n      }\n      const rng = this.getLastRange();\n      const textNode = rng.insertNode(dom.createText(text));\n      this.setLastRange(range.create(textNode, dom.nodeLength(textNode)).select());\n    });\n\n    /**\n     * paste HTML\n     * @param {String} markup\n     */\n    this.pasteHTML = this.wrapCommand((markup) => {\n      if (this.isLimited(markup.length)) {\n        return;\n      }\n      markup = this.context.invoke('codeview.purify', markup);\n      const contents = this.getLastRange().pasteHTML(markup);\n      this.setLastRange(range.createFromNodeAfter(lists.last(contents)).select());\n    });\n\n    /**\n     * formatBlock\n     *\n     * @param {String} tagName\n     */\n    this.formatBlock = this.wrapCommand((tagName, $target) => {\n      const onApplyCustomStyle = this.options.callbacks.onApplyCustomStyle;\n      if (onApplyCustomStyle) {\n        onApplyCustomStyle.call(this, $target, this.context, this.onFormatBlock);\n      } else {\n        this.onFormatBlock(tagName, $target);\n      }\n    });\n\n    /**\n     * insert horizontal rule\n     */\n    this.insertHorizontalRule = this.wrapCommand(() => {\n      const hrNode = this.getLastRange().insertNode(dom.create('HR'));\n      if (hrNode.nextSibling) {\n        this.setLastRange(range.create(hrNode.nextSibling, 0).normalize().select());\n      }\n    });\n\n    /**\n     * lineHeight\n     * @param {String} value\n     */\n    this.lineHeight = this.wrapCommand((value) => {\n      this.style.stylePara(this.getLastRange(), {\n        lineHeight: value,\n      });\n    });\n\n    /**\n     * create link (command)\n     *\n     * @param {Object} linkInfo\n     */\n    this.createLink = this.wrapCommand((linkInfo) => {\n      let rel = [];\n      let linkUrl = linkInfo.url;\n      const linkText = linkInfo.text;\n      const isNewWindow = linkInfo.isNewWindow;\n      const addNoReferrer = this.options.linkAddNoReferrer;\n      const addNoOpener = this.options.linkAddNoOpener;\n      let rng = linkInfo.range || this.getLastRange();\n      const additionalTextLength = linkText.length - rng.toString().length;\n      if (additionalTextLength > 0 && this.isLimited(additionalTextLength)) {\n        return;\n      }\n      const isTextChanged = rng.toString() !== linkText;\n\n      // handle spaced urls from input\n      if (typeof linkUrl === 'string') {\n        linkUrl = linkUrl.trim();\n      }\n\n      if (this.options.onCreateLink) {\n        linkUrl = this.options.onCreateLink(linkUrl);\n      } else {\n        linkUrl = this.checkLinkUrl(linkUrl);\n      }\n\n      let anchors = [];\n      if (isTextChanged) {\n        rng = rng.deleteContents();\n        const anchor = rng.insertNode($('<A></A>').text(linkText)[0]);\n        anchors.push(anchor);\n      } else {\n        anchors = this.style.styleNodes(rng, {\n          nodeName: 'A',\n          expandClosestSibling: true,\n          onlyPartialContains: true,\n        });\n      }\n\n      $.each(anchors, (idx, anchor) => {\n        $(anchor).attr('href', linkUrl);\n        if (isNewWindow) {\n          $(anchor).attr('target', '_blank');\n          if (addNoReferrer) {\n            rel.push('noreferrer');\n          }\n          if (addNoOpener) {\n            rel.push('noopener');\n          }\n          if (rel.length) {\n            $(anchor).attr('rel', rel.join(' '));\n          }\n        } else {\n          $(anchor).removeAttr('target');\n        }\n      });\n\n      this.setLastRange(\n        this.createRangeFromList(anchors).select()\n      );\n    });\n\n    /**\n     * setting color\n     *\n     * @param {Object} sObjColor  color code\n     * @param {String} sObjColor.foreColor foreground color\n     * @param {String} sObjColor.backColor background color\n     */\n    this.color = this.wrapCommand((colorInfo) => {\n      const foreColor = colorInfo.foreColor;\n      const backColor = colorInfo.backColor;\n\n      if (foreColor) { document.execCommand('foreColor', false, foreColor); }\n      if (backColor) { document.execCommand('backColor', false, backColor); }\n    });\n\n    /**\n     * Set foreground color\n     *\n     * @param {String} colorCode foreground color code\n     */\n    this.foreColor = this.wrapCommand((colorInfo) => {\n      document.execCommand('foreColor', false, colorInfo);\n    });\n\n    /**\n     * insert Table\n     *\n     * @param {String} dimension of table (ex : \"5x5\")\n     */\n    this.insertTable = this.wrapCommand((dim) => {\n      const dimension = dim.split('x');\n\n      const rng = this.getLastRange().deleteContents();\n      rng.insertNode(this.table.createTable(dimension[0], dimension[1], this.options));\n    });\n\n    /**\n     * remove media object and Figure Elements if media object is img with Figure.\n     */\n    this.removeMedia = this.wrapCommand(() => {\n      let $target = $(this.restoreTarget()).parent();\n      if ($target.closest('figure').length) {\n        $target.closest('figure').remove();\n      } else {\n        $target = $(this.restoreTarget()).detach();\n      }\n      \n      this.setLastRange(range.createFromSelection($target).select());\n      this.context.triggerEvent('media.delete', $target, this.$editable);\n    });\n\n    /**\n     * float me\n     *\n     * @param {String} value\n     */\n    this.floatMe = this.wrapCommand((value) => {\n      const $target = $(this.restoreTarget());\n      $target.toggleClass('note-float-left', value === 'left');\n      $target.toggleClass('note-float-right', value === 'right');\n      $target.css('float', (value === 'none' ? '' : value));\n    });\n\n    /**\n     * resize overlay element\n     * @param {String} value\n     */\n    this.resize = this.wrapCommand((value) => {\n      const $target = $(this.restoreTarget());\n      value = parseFloat(value);\n      if (value === 0) {\n        $target.css('width', '');\n      } else {\n        $target.css({\n          width: value * 100 + '%',\n          height: '',\n        });\n      }\n    });\n  }\n\n  initialize() {\n    // bind custom events\n    this.$editable.on('keydown', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        this.context.triggerEvent('enter', event);\n      }\n      this.context.triggerEvent('keydown', event);\n\n      // keep a snapshot to limit text on input event\n      this.snapshot = this.history.makeSnapshot();\n      this.hasKeyShortCut = false;\n      if (!event.isDefaultPrevented()) {\n        if (this.options.shortcuts) {\n          this.hasKeyShortCut = this.handleKeyMap(event);\n        } else {\n          this.preventDefaultEditableShortCuts(event);\n        }\n      }\n      if (this.isLimited(1, event)) {\n        const lastRange = this.getLastRange();\n        if (lastRange.eo - lastRange.so === 0) {\n          return false;\n        }\n      }\n      this.setLastRange();\n\n      // record undo in the key event except keyMap.\n      if (this.options.recordEveryKeystroke) {\n        if (this.hasKeyShortCut === false) {\n          this.history.recordUndo();\n        }\n      }\n    }).on('keyup', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('keyup', event);\n    }).on('focus', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('focus', event);\n    }).on('blur', (event) => {\n      this.context.triggerEvent('blur', event);\n    }).on('mousedown', (event) => {\n      this.context.triggerEvent('mousedown', event);\n    }).on('mouseup', (event) => {\n      this.setLastRange();\n      this.history.recordUndo();\n      this.context.triggerEvent('mouseup', event);\n    }).on('scroll', (event) => {\n      this.context.triggerEvent('scroll', event);\n    }).on('paste', (event) => {\n      this.setLastRange();\n      this.context.triggerEvent('paste', event);\n    }).on('copy', (event) => {\n      this.context.triggerEvent('copy', event);\n    }).on('input', () => {\n      // To limit composition characters (e.g. Korean)\n      if (this.isLimited(0) && this.snapshot) {\n        this.history.applySnapshot(this.snapshot);\n      }\n    });\n\n    this.$editable.attr('spellcheck', this.options.spellCheck);\n\n    this.$editable.attr('autocorrect', this.options.spellCheck);\n\n    if (this.options.disableGrammar) {\n      this.$editable.attr('data-gramm', false);\n    }\n\n    // init content before set event\n    this.$editable.html(dom.html(this.$note) || dom.emptyPara);\n\n    this.$editable.on(env.inputEventName, func.debounce(() => {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }, 10));\n\n    this.$editable.on('focusin', (event) => {\n      this.context.triggerEvent('focusin', event);\n    }).on('focusout', (event) => {\n      this.context.triggerEvent('focusout', event);\n    });\n\n    if (this.options.airMode) {\n      if (this.options.overrideContextMenu) {\n        this.$editor.on('contextmenu', (event) => {\n          this.context.triggerEvent('contextmenu', event);\n          return false;\n        });\n      }\n    } else {\n      if (this.options.width) {\n        this.$editor.outerWidth(this.options.width);\n      }\n      if (this.options.height) {\n        this.$editable.outerHeight(this.options.height);\n      }\n      if (this.options.maxHeight) {\n        this.$editable.css('max-height', this.options.maxHeight);\n      }\n      if (this.options.minHeight) {\n        this.$editable.css('min-height', this.options.minHeight);\n      }\n    }\n\n    this.history.recordUndo();\n    this.setLastRange();\n  }\n\n  destroy() {\n    this.$editable.off();\n  }\n\n  handleKeyMap(event) {\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n    const keys = [];\n\n    if (event.metaKey) { keys.push('CMD'); }\n    if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\n    if (event.shiftKey) { keys.push('SHIFT'); }\n\n    const keyName = key.nameFromCode[event.keyCode];\n    if (keyName) {\n      keys.push(keyName);\n    }\n\n    const eventName = keyMap[keys.join('+')];\n\n    if (keyName === 'TAB' && !this.options.tabDisable) {\n      this.afterCommand();\n    } else if (eventName) {\n      if (this.context.invoke(eventName) !== false) {\n        event.preventDefault();\n        return true;\n      }\n    } else if (key.isEdit(event.keyCode)) {\n      if (key.isRemove(event.keyCode)) {\n        this.context.invoke('removed');\n      }\n      this.afterCommand();\n    }\n    return false;\n  }\n\n  preventDefaultEditableShortCuts(event) {\n    // B(Bold, 66) / I(Italic, 73) / U(Underline, 85)\n    if ((event.ctrlKey || event.metaKey) &&\n      lists.contains([66, 73, 85], event.keyCode)) {\n      event.preventDefault();\n    }\n  }\n\n  isLimited(pad, event) {\n    pad = pad || 0;\n\n    if (typeof event !== 'undefined') {\n      if (key.isMove(event.keyCode) ||\n          key.isNavigation(event.keyCode) ||\n          (event.ctrlKey || event.metaKey) ||\n          lists.contains([key.code.BACKSPACE, key.code.DELETE], event.keyCode)) {\n        return false;\n      }\n    }\n\n    if (this.options.maxTextLength > 0) {\n      if ((this.$editable.text().length + pad) > this.options.maxTextLength) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkLinkUrl(linkUrl) {\n    if (MAILTO_PATTERN.test(linkUrl)) {\n      return 'mailto://' + linkUrl;\n    } else if (TEL_PATTERN.test(linkUrl)) {\n      return 'tel://' + linkUrl;\n    } else if (!URL_SCHEME_PATTERN.test(linkUrl)) {\n      return 'http://' + linkUrl;\n    }\n    return linkUrl;\n  }\n\n  /**\n   * create range\n   * @return {WrappedRange}\n   */\n  createRange() {\n    this.focus();\n    this.setLastRange();\n    return this.getLastRange();\n  }\n\n  /**\n   * create a new range from the list of elements\n   *\n   * @param {list} dom element list\n   * @return {WrappedRange}\n   */\n  createRangeFromList(lst) {\n    const startRange = range.createFromNodeBefore(lists.head(lst));\n    const startPoint = startRange.getStartPoint();\n    const endRange = range.createFromNodeAfter(lists.last(lst));\n    const endPoint = endRange.getEndPoint();\n\n    return range.create(\n      startPoint.node,\n      startPoint.offset,\n      endPoint.node,\n      endPoint.offset\n    );\n  }\n\n  /**\n   * set the last range\n   *\n   * if given rng is exist, set rng as the last range\n   * or create a new range at the end of the document\n   *\n   * @param {WrappedRange} rng\n   */\n  setLastRange(rng) {\n    if (rng) {\n      this.lastRange = rng;\n    } else {\n      this.lastRange = range.create(this.editable);\n\n      if ($(this.lastRange.sc).closest('.note-editable').length === 0) {\n        this.lastRange = range.createFromBodyElement(this.editable);\n      }\n    }\n  }\n\n  /**\n   * get the last range\n   *\n   * if there is a saved last range, return it\n   * or create a new range and return it\n   *\n   * @return {WrappedRange}\n   */\n  getLastRange() {\n    if (!this.lastRange) {\n      this.setLastRange();\n    }\n    return this.lastRange;\n  }\n\n  /**\n   * saveRange\n   *\n   * save current range\n   *\n   * @param {Boolean} [thenCollapse=false]\n   */\n  saveRange(thenCollapse) {\n    if (thenCollapse) {\n      this.getLastRange().collapse().select();\n    }\n  }\n\n  /**\n   * restoreRange\n   *\n   * restore lately range\n   */\n  restoreRange() {\n    if (this.lastRange) {\n      this.lastRange.select();\n      this.focus();\n    }\n  }\n\n  saveTarget(node) {\n    this.$editable.data('target', node);\n  }\n\n  clearTarget() {\n    this.$editable.removeData('target');\n  }\n\n  restoreTarget() {\n    return this.$editable.data('target');\n  }\n\n  /**\n   * currentStyle\n   *\n   * current style\n   * @return {Object|Boolean} unfocus\n   */\n  currentStyle() {\n    let rng = range.create();\n    if (rng) {\n      rng = rng.normalize();\n    }\n    return rng ? this.style.current(rng) : this.style.fromNode(this.$editable);\n  }\n\n  /**\n   * style from node\n   *\n   * @param {jQuery} $node\n   * @return {Object}\n   */\n  styleFromNode($node) {\n    return this.style.fromNode($node);\n  }\n\n  /**\n   * undo\n   */\n  undo() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.undo();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /*\n  * commit\n  */\n  commit() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.commit();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /**\n   * redo\n   */\n  redo() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n    this.history.redo();\n    this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n  }\n\n  /**\n   * before command\n   */\n  beforeCommand() {\n    this.context.triggerEvent('before.command', this.$editable.html());\n\n    // Set styleWithCSS before run a command\n    document.execCommand('styleWithCSS', false, this.options.styleWithCSS);\n\n    // keep focus on editable before command execution\n    this.focus();\n  }\n\n  /**\n   * after command\n   * @param {Boolean} isPreventTrigger\n   */\n  afterCommand(isPreventTrigger) {\n    this.normalizeContent();\n    this.history.recordUndo();\n    if (!isPreventTrigger) {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n  }\n\n  /**\n   * handle tab key\n   */\n  tab() {\n    const rng = this.getLastRange();\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.table.tab(rng);\n    } else {\n      if (this.options.tabSize === 0) {\n        return false;\n      }\n\n      if (!this.isLimited(this.options.tabSize)) {\n        this.beforeCommand();\n        this.typing.insertTab(rng, this.options.tabSize);\n        this.afterCommand();\n      }\n    }\n  }\n\n  /**\n   * handle shift+tab key\n   */\n  untab() {\n    const rng = this.getLastRange();\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.table.tab(rng, true);\n    } else {\n      if (this.options.tabSize === 0) {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * run given function between beforeCommand and afterCommand\n   */\n  wrapCommand(fn) {\n    return function() {\n      this.beforeCommand();\n      fn.apply(this, arguments);\n      this.afterCommand();\n    };\n  }\n  /**\n   * removed (function added by 1der1)\n  */\n  removed(rng, node, tagName) { // LB\n    rng = range.create();\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      node = rng.ec;\n      if( (tagName = node.tagName) &&\n\t\t\t\t(node.childElementCount === 1) &&\n\t\t\t\t(node.childNodes[0].tagName === \"BR\") ){\n\n        if(tagName === \"P\") {\n          node.remove();\n        } else if(['TH', 'TD'].indexOf(tagName) >=0) {\n          node.firstChild.remove();\n        }\n      }\n    }\n  }\n  /**\n   * insert image\n   *\n   * @param {String} src\n   * @param {String|Function} param\n   * @return {Promise}\n   */\n  insertImage(src, param) {\n    return createImage(src, param).then(($image) => {\n      this.beforeCommand();\n\n      if (typeof param === 'function') {\n        param($image);\n      } else {\n        if (typeof param === 'string') {\n          $image.attr('data-filename', param);\n        }\n        $image.css('width', Math.min(this.$editable.width(), $image.width()));\n      }\n\n      $image.show();\n      this.getLastRange().insertNode($image[0]);\n      this.setLastRange(range.createFromNodeAfter($image[0]).select());\n      this.afterCommand();\n    }).fail((e) => {\n      this.context.triggerEvent('image.upload.error', e);\n    });\n  }\n\n  /**\n   * insertImages\n   * @param {File[]} files\n   */\n  insertImagesAsDataURL(files) {\n    $.each(files, (idx, file) => {\n      const filename = file.name;\n      if (this.options.maximumImageFileSize && this.options.maximumImageFileSize < file.size) {\n        this.context.triggerEvent('image.upload.error', this.lang.image.maximumFileSizeError);\n      } else {\n        readFileAsDataURL(file).then((dataURL) => {\n          return this.insertImage(dataURL, filename);\n        }).fail(() => {\n          this.context.triggerEvent('image.upload.error');\n        });\n      }\n    });\n  }\n\n  /**\n   * insertImagesOrCallback\n   * @param {File[]} files\n   */\n  insertImagesOrCallback(files) {\n    const callbacks = this.options.callbacks;\n    // If onImageUpload set,\n    if (callbacks.onImageUpload) {\n      this.context.triggerEvent('image.upload', files);\n      // else insert Image as dataURL\n    } else {\n      this.insertImagesAsDataURL(files);\n    }\n  }\n\n  /**\n   * return selected plain text\n   * @return {String} text\n   */\n  getSelectedText() {\n    let rng = this.getLastRange();\n\n    // if range on anchor, expand range with anchor\n    if (rng.isOnAnchor()) {\n      rng = range.createFromNode(dom.ancestor(rng.sc, dom.isAnchor));\n    }\n\n    return rng.toString();\n  }\n\n  onFormatBlock(tagName, $target) {\n    // [workaround] for MSIE, IE need `<`\n    document.execCommand('FormatBlock', false, env.isMSIE ? '<' + tagName + '>' : tagName);\n\n    // support custom class\n    if ($target && $target.length) {\n      // find the exact element has given tagName\n      if ($target[0].tagName.toUpperCase() !== tagName.toUpperCase()) {\n        $target = $target.find(tagName);\n      }\n\n      if ($target && $target.length) {\n        const currentRange = this.createRange();\n        const $parent = $([currentRange.sc, currentRange.ec]).closest(tagName);\n        // remove class added for current block\n        $parent.removeClass();\n        const className = $target[0].className || '';\n        if (className) {\n          $parent.addClass(className);\n        }\n      }\n    }\n  }\n\n  formatPara() {\n    this.formatBlock('P');\n  }\n\n  fontStyling(target, value) {\n    const rng = this.getLastRange();\n\n    if (rng !== '') {\n      const spans = this.style.styleNodes(rng);\n      this.$editor.find('.note-status-output').html('');\n      $(spans).css(target, value);\n\n      // [workaround] added styled bogus span for style\n      //  - also bogus character needed for cursor position\n      if (rng.isCollapsed()) {\n        const firstSpan = lists.head(spans);\n        if (firstSpan && !dom.nodeLength(firstSpan)) {\n          firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;\n          range.createFromNode(firstSpan.firstChild).select();\n          this.setLastRange();\n          this.$editable.data(KEY_BOGUS, firstSpan);\n        }\n      } else {\n        rng.select();\n      }\n    } else {\n      const noteStatusOutput = $.now();\n      this.$editor.find('.note-status-output').html('<div id=\"note-status-output-' + noteStatusOutput + '\" class=\"alert alert-info\">' + this.lang.output.noSelection + '</div>');\n      setTimeout(function() { $('#note-status-output-' + noteStatusOutput).remove(); }, 5000);\n    }\n  }\n\n  /**\n   * unlink\n   *\n   * @type command\n   */\n  unlink() {\n    let rng = this.getLastRange();\n    if (rng.isOnAnchor()) {\n      const anchor = dom.ancestor(rng.sc, dom.isAnchor);\n      rng = range.createFromNode(anchor);\n      rng.select();\n      this.setLastRange();\n\n      this.beforeCommand();\n      document.execCommand('unlink');\n      this.afterCommand();\n    }\n  }\n\n  /**\n   * returns link info\n   *\n   * @return {Object}\n   * @return {WrappedRange} return.range\n   * @return {String} return.text\n   * @return {Boolean} [return.isNewWindow=true]\n   * @return {String} [return.url=\"\"]\n   */\n  getLinkInfo() {\n    if (!this.hasFocus()) {\n      this.focus();\n    }\n\n    const rng = this.getLastRange().expand(dom.isAnchor);\n    // Get the first anchor on range(for edit).\n    const $anchor = $(lists.head(rng.nodes(dom.isAnchor)));\n    const linkInfo = {\n      range: rng,\n      text: rng.toString(),\n      url: $anchor.length ? $anchor.attr('href') : '',\n    };\n\n    // When anchor exists,\n    if ($anchor.length) {\n      // Set isNewWindow by checking its target.\n      linkInfo.isNewWindow = $anchor.attr('target') === '_blank';\n    }\n\n    return linkInfo;\n  }\n\n  addRow(position) {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.addRow(rng, position);\n      this.afterCommand();\n    }\n  }\n\n  addCol(position) {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.addCol(rng, position);\n      this.afterCommand();\n    }\n  }\n\n  deleteRow() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteRow(rng);\n      this.afterCommand();\n    }\n  }\n\n  deleteCol() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteCol(rng);\n      this.afterCommand();\n    }\n  }\n\n  deleteTable() {\n    const rng = this.getLastRange(this.$editable);\n    if (rng.isCollapsed() && rng.isOnCell()) {\n      this.beforeCommand();\n      this.table.deleteTable(rng);\n      this.afterCommand();\n    }\n  }\n\n  /**\n   * @param {Position} pos\n   * @param {jQuery} $target - target element\n   * @param {Boolean} [bKeepRatio] - keep ratio\n   */\n  resizeTo(pos, $target, bKeepRatio) {\n    let imageSize;\n    if (bKeepRatio) {\n      const newRatio = pos.y / pos.x;\n      const ratio = $target.data('ratio');\n      imageSize = {\n        width: ratio > newRatio ? pos.x : pos.y / ratio,\n        height: ratio > newRatio ? pos.x * ratio : pos.y,\n      };\n    } else {\n      imageSize = {\n        width: pos.x,\n        height: pos.y,\n      };\n    }\n\n    $target.css(imageSize);\n  }\n\n  /**\n   * returns whether editable area has focus or not.\n   */\n  hasFocus() {\n    return this.$editable.is(':focus');\n  }\n\n  /**\n   * set focus\n   */\n  focus() {\n    // [workaround] Screen will move when page is scolled in IE.\n    //  - do focus when not focused\n    if (!this.hasFocus()) {\n      this.$editable.trigger('focus');\n    }\n  }\n\n  /**\n   * returns whether contents is empty or not.\n   * @return {Boolean}\n   */\n  isEmpty() {\n    return dom.isEmpty(this.$editable[0]) || dom.emptyPara === this.$editable.html();\n  }\n\n  /**\n   * Removes all contents and restores the editable instance to an _emptyPara_.\n   */\n  empty() {\n    this.context.invoke('code', dom.emptyPara);\n  }\n\n  /**\n   * normalize content\n   */\n  normalizeContent() {\n    this.$editable[0].normalize();\n  }\n}\n","export default class Clipboard {\n  constructor(context) {\n    this.context = context;\n    this.options = context.options;\n    this.$editable = context.layoutInfo.editable;\n  }\n\n  initialize() {\n    this.$editable.on('paste', this.pasteByEvent.bind(this));\n  }\n\n  /**\n   * paste by clipboard event\n   *\n   * @param {Event} event\n   */\n  pasteByEvent(event) {\n\n    if (this.context.isDisabled()) {\n      return;\n    }\n    const clipboardData = event.originalEvent.clipboardData;\n\n    if (clipboardData && clipboardData.items && clipboardData.items.length) {\n      const clipboardFiles = clipboardData.files;\n      const clipboardText = clipboardData.getData('Text');\n\n      // paste img file\n      if (clipboardFiles.length > 0 && this.options.allowClipboardImagePasting) {\n        this.context.invoke('editor.insertImagesOrCallback', clipboardFiles);\n        event.preventDefault();\n      }\n\n      // paste text with maxTextLength check\n      if (clipboardText.length > 0 && this.context.invoke('editor.isLimited', clipboardText.length)) {\n        event.preventDefault();\n      }\n    } else if (window.clipboardData) {\n      // for IE\n      let text = window.clipboardData.getData('text');\n      if (this.context.invoke('editor.isLimited', text.length)) {\n        event.preventDefault();\n      }\n    }\n\n    // Call editor.afterCommand after proceeding default event handler\n    setTimeout(() => {\n      this.context.invoke('editor.afterCommand');\n    }, 10);\n  }\n}\n","import $ from 'jquery';\n\nexport default class Dropzone {\n  constructor(context) {\n    this.context = context;\n    this.$eventListener = $(document);\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n    this.documentEventHandlers = {};\n\n    this.$dropzone = $([\n      '<div class=\"note-dropzone\">',\n        '<div class=\"note-dropzone-message\"></div>',\n      '</div>',\n    ].join('')).prependTo(this.$editor);\n  }\n\n  /**\n   * attach Drag and Drop Events\n   */\n  initialize() {\n    if (this.options.disableDragAndDrop) {\n      // prevent default drop event\n      this.documentEventHandlers.onDrop = (e) => {\n        e.preventDefault();\n      };\n      // do not consider outside of dropzone\n      this.$eventListener = this.$dropzone;\n      this.$eventListener.on('drop', this.documentEventHandlers.onDrop);\n    } else {\n      this.attachDragAndDropEvent();\n    }\n  }\n\n  /**\n   * attach Drag and Drop Events\n   */\n  attachDragAndDropEvent() {\n    let collection = $();\n    const $dropzoneMessage = this.$dropzone.find('.note-dropzone-message');\n\n    this.documentEventHandlers.onDragenter = (e) => {\n      const isCodeview = this.context.invoke('codeview.isActivated');\n      const hasEditorSize = this.$editor.width() > 0 && this.$editor.height() > 0;\n      if (!isCodeview && !collection.length && hasEditorSize) {\n        this.$editor.addClass('dragover');\n        this.$dropzone.width(this.$editor.width());\n        this.$dropzone.height(this.$editor.height());\n        $dropzoneMessage.text(this.lang.image.dragImageHere);\n      }\n      collection = collection.add(e.target);\n    };\n\n    this.documentEventHandlers.onDragleave = (e) => {\n      collection = collection.not(e.target);\n\n      // If nodeName is BODY, then just make it over (fix for IE)\n      if (!collection.length || e.target.nodeName === 'BODY') {\n        collection = $();\n        this.$editor.removeClass('dragover');\n      }\n    };\n\n    this.documentEventHandlers.onDrop = () => {\n      collection = $();\n      this.$editor.removeClass('dragover');\n    };\n\n    // show dropzone on dragenter when dragging a object to document\n    // -but only if the editor is visible, i.e. has a positive width and height\n    this.$eventListener.on('dragenter', this.documentEventHandlers.onDragenter)\n      .on('dragleave', this.documentEventHandlers.onDragleave)\n      .on('drop', this.documentEventHandlers.onDrop);\n\n    // change dropzone's message on hover.\n    this.$dropzone.on('dragenter', () => {\n      this.$dropzone.addClass('hover');\n      $dropzoneMessage.text(this.lang.image.dropImage);\n    }).on('dragleave', () => {\n      this.$dropzone.removeClass('hover');\n      $dropzoneMessage.text(this.lang.image.dragImageHere);\n    });\n\n    // attach dropImage\n    this.$dropzone.on('drop', (event) => {\n      const dataTransfer = event.originalEvent.dataTransfer;\n\n      // stop the browser from opening the dropped content\n      event.preventDefault();\n\n      if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n        this.$editable.trigger('focus');\n        this.context.invoke('editor.insertImagesOrCallback', dataTransfer.files);\n      } else {\n        $.each(dataTransfer.types, (idx, type) => {\n          // skip moz-specific types\n          if (type.toLowerCase().indexOf('_moz_') > -1) {\n            return;\n          }\n          const content = dataTransfer.getData(type);\n\n          if (type.toLowerCase().indexOf('text') > -1) {\n            this.context.invoke('editor.pasteHTML', content);\n          } else {\n            $(content).each((idx, item) => {\n              this.context.invoke('editor.insertNode', item);\n            });\n          }\n        });\n      }\n    }).on('dragover', false); // prevent default dragover event\n  }\n\n  destroy() {\n    Object.keys(this.documentEventHandlers).forEach((key) => {\n      this.$eventListener.off(key.slice(2).toLowerCase(), this.documentEventHandlers[key]);\n    });\n    this.documentEventHandlers = {};\n  }\n}\n","import dom from '../core/dom';\nimport key from '../core/key';\n\n/**\n * @class Codeview\n */\nexport default class CodeView {\n  constructor(context) {\n    this.context = context;\n    this.$editor = context.layoutInfo.editor;\n    this.$editable = context.layoutInfo.editable;\n    this.$codable = context.layoutInfo.codable;\n    this.options = context.options;\n    this.CodeMirrorConstructor = window.CodeMirror;\n\n    if (this.options.codemirror.CodeMirrorConstructor) {\n      this.CodeMirrorConstructor = this.options.codemirror.CodeMirrorConstructor;\n    }\n  }\n\n  sync(html) {\n    const isCodeview = this.isActivated();\n    const CodeMirror = this.CodeMirrorConstructor;\n\n    if (isCodeview) {\n      if (html) {\n        if (CodeMirror) {\n          this.$codable.data('cmEditor').getDoc().setValue(html);\n        } else {\n          this.$codable.val(html);\n        }\n      } else {\n        if (CodeMirror) {\n          this.$codable.data('cmEditor').save();\n        }\n      }\n    }\n  }\n\n  initialize() {\n    this.$codable.on('keyup', (event) => {\n      if (event.keyCode === key.code.ESCAPE) {\n        this.deactivate();\n      }\n    });\n  }\n\n  /**\n   * @return {Boolean}\n   */\n  isActivated() {\n    return this.$editor.hasClass('codeview');\n  }\n\n  /**\n   * toggle codeview\n   */\n  toggle() {\n    if (this.isActivated()) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n    this.context.triggerEvent('codeview.toggled');\n  }\n\n  /**\n   * purify input value\n   * @param value\n   * @returns {*}\n   */\n  purify(value) {\n    if (this.options.codeviewFilter) {\n      // filter code view regex\n      value = value.replace(this.options.codeviewFilterRegex, '');\n      // allow specific iframe tag\n      if (this.options.codeviewIframeFilter) {\n        const whitelist = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\n        value = value.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function(tag) {\n          // remove if src attribute is duplicated\n          if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(tag)) {\n            return '';\n          }\n          for (const src of whitelist) {\n            // pass if src is trusted\n            if ((new RegExp('src=\"(https?:)?\\/\\/' + src.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\\/(.+)\"')).test(tag)) {\n              return tag;\n            }\n          }\n          return '';\n        });\n      }\n    }\n    return value;\n  }\n\n  /**\n   * activate code view\n   */\n  activate() {\n    const CodeMirror = this.CodeMirrorConstructor;\n    this.$codable.val(dom.html(this.$editable, this.options.prettifyHtml));\n    this.$codable.height(this.$editable.height());\n\n    this.context.invoke('toolbar.updateCodeview', true);\n    this.context.invoke('airPopover.updateCodeview', true);\n\n    this.$editor.addClass('codeview');\n    this.$codable.trigger('focus');\n\n    // activate CodeMirror as codable\n    if (CodeMirror) {\n      const cmEditor = CodeMirror.fromTextArea(this.$codable[0], this.options.codemirror);\n\n      // CodeMirror TernServer\n      if (this.options.codemirror.tern) {\n        const server = new CodeMirror.TernServer(this.options.codemirror.tern);\n        cmEditor.ternServer = server;\n        cmEditor.on('cursorActivity', (cm) => {\n          server.updateArgHints(cm);\n        });\n      }\n\n      cmEditor.on('blur', (event) => {\n        this.context.triggerEvent('blur.codeview', cmEditor.getValue(), event);\n      });\n      cmEditor.on('change', () => {\n        this.context.triggerEvent('change.codeview', cmEditor.getValue(), cmEditor);\n      });\n\n      // CodeMirror hasn't Padding.\n      cmEditor.setSize(null, this.$editable.outerHeight());\n      this.$codable.data('cmEditor', cmEditor);\n    } else {\n      this.$codable.on('blur', (event) => {\n        this.context.triggerEvent('blur.codeview', this.$codable.val(), event);\n      });\n      this.$codable.on('input', () => {\n        this.context.triggerEvent('change.codeview', this.$codable.val(), this.$codable);\n      });\n    }\n  }\n\n  /**\n   * deactivate code view\n   */\n  deactivate() {\n    const CodeMirror = this.CodeMirrorConstructor;\n    // deactivate CodeMirror as codable\n    if (CodeMirror) {\n      const cmEditor = this.$codable.data('cmEditor');\n      this.$codable.val(cmEditor.getValue());\n      cmEditor.toTextArea();\n    }\n\n    const value = this.purify(dom.value(this.$codable, this.options.prettifyHtml) || dom.emptyPara);\n    const isChange = this.$editable.html() !== value;\n\n    this.$editable.html(value);\n    this.$editable.height(this.options.height ? this.$codable.height() : 'auto');\n    this.$editor.removeClass('codeview');\n\n    if (isChange) {\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n\n    this.$editable.trigger('focus');\n\n    this.context.invoke('toolbar.updateCodeview', false);\n    this.context.invoke('airPopover.updateCodeview', false);\n  }\n\n  destroy() {\n    if (this.isActivated()) {\n      this.deactivate();\n    }\n  }\n}\n","import $ from 'jquery';\nconst EDITABLE_PADDING = 24;\n\nexport default class Statusbar {\n  constructor(context) {\n    this.$document = $(document);\n    this.$statusbar = context.layoutInfo.statusbar;\n    this.$editable = context.layoutInfo.editable;\n    this.$codable = context.layoutInfo.codable;\n    this.options = context.options;\n  }\n\n  initialize() {\n    if (this.options.airMode || this.options.disableResizeEditor) {\n      this.destroy();\n      return;\n    }\n\n    this.$statusbar.on('mousedown touchstart', (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const editableTop = this.$editable.offset().top - this.$document.scrollTop();\n      const editableCodeTop = this.$codable.offset().top - this.$document.scrollTop();\n\n      const onStatusbarMove = (event) => {\n        let originalEvent = (event.type == 'mousemove') ? event : event.originalEvent.touches[0];\n        let height = originalEvent.clientY - (editableTop + EDITABLE_PADDING);\n        let heightCode = originalEvent.clientY - (editableCodeTop + EDITABLE_PADDING);\n\n        height = (this.options.minheight > 0) ? Math.max(height, this.options.minheight) : height;\n        height = (this.options.maxHeight > 0) ? Math.min(height, this.options.maxHeight) : height;\n        heightCode = (this.options.minheight > 0) ? Math.max(heightCode, this.options.minheight) : heightCode;\n        heightCode = (this.options.maxHeight > 0) ? Math.min(heightCode, this.options.maxHeight) : heightCode;\n\n\n        this.$editable.height(height);\n        this.$codable.height(heightCode);\n      };\n\n      this.$document.on('mousemove touchmove', onStatusbarMove).one('mouseup touchend', () => {\n        this.$document.off('mousemove touchmove', onStatusbarMove);\n      });\n    });\n  }\n\n  destroy() {\n    this.$statusbar.off();\n    this.$statusbar.addClass('locked');\n  }\n}\n","import $ from 'jquery';\n\nexport default class Fullscreen {\n  constructor(context) {\n    this.context = context;\n\n    this.$editor = context.layoutInfo.editor;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.$editable = context.layoutInfo.editable;\n    this.$codable = context.layoutInfo.codable;\n\n    this.$window = $(window);\n    this.$scrollbar = $('html, body');\n    this.scrollbarClassName = 'note-fullscreen-body';\n\n    this.onResize = () => {\n      this.resizeTo({\n        h: this.$window.height() - this.$toolbar.outerHeight(),\n      });\n    };\n  }\n\n  resizeTo(size) {\n    this.$editable.css('height', size.h);\n    this.$codable.css('height', size.h);\n    if (this.$codable.data('cmeditor')) {\n      this.$codable.data('cmeditor').setsize(null, size.h);\n    }\n  }\n\n  /**\n   * toggle fullscreen\n   */\n  toggle() {\n    this.$editor.toggleClass('fullscreen');\n    const isFullscreen = this.isFullscreen();\n    this.$scrollbar.toggleClass(this.scrollbarClassName, isFullscreen);\n    if (isFullscreen) {\n      this.$editable.data('orgHeight', this.$editable.css('height'));\n      this.$editable.data('orgMaxHeight', this.$editable.css('maxHeight'));\n      this.$editable.css('maxHeight', '');\n      this.$window.on('resize', this.onResize).trigger('resize');\n    } else {\n      this.$window.off('resize', this.onResize);\n      this.resizeTo({ h: this.$editable.data('orgHeight') });\n      this.$editable.css('maxHeight', this.$editable.css('orgMaxHeight'));\n    }\n\n    this.context.invoke('toolbar.updateFullscreen', isFullscreen);\n  }\n\n  isFullscreen() {\n    return this.$editor.hasClass('fullscreen');\n  }\n\n  destroy() {\n    this.$scrollbar.removeClass(this.scrollbarClassName);\n  }\n}\n","import $ from 'jquery';\nimport dom from '../core/dom';\n\nexport default class Handle {\n  constructor(context) {\n    this.context = context;\n    this.$document = $(document);\n    this.$editingArea = context.layoutInfo.editingArea;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    this.events = {\n      'summernote.mousedown': (we, e) => {\n        if (this.update(e.target, e)) {\n          e.preventDefault();\n        }\n      },\n      'summernote.keyup summernote.scroll summernote.change summernote.dialog.shown': () => {\n        this.update();\n      },\n      'summernote.disable summernote.blur': () => {\n        this.hide();\n      },\n      'summernote.codeview.toggled': () => {\n        this.update();\n      },\n    };\n  }\n\n  initialize() {\n    this.$handle = $([\n      '<div class=\"note-handle\">',\n        '<div class=\"note-control-selection\">',\n          '<div class=\"note-control-selection-bg\"></div>',\n          '<div class=\"note-control-holder note-control-nw\"></div>',\n          '<div class=\"note-control-holder note-control-ne\"></div>',\n          '<div class=\"note-control-holder note-control-sw\"></div>',\n          '<div class=\"',\n            (this.options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing'),\n          ' note-control-se\"></div>',\n          (this.options.disableResizeImage ? '' : '<div class=\"note-control-selection-info\"></div>'),\n        '</div>',\n      '</div>',\n    ].join('')).prependTo(this.$editingArea);\n\n    this.$handle.on('mousedown', (event) => {\n      if (dom.isControlSizing(event.target)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const $target = this.$handle.find('.note-control-selection').data('target');\n        const posStart = $target.offset();\n        const scrollTop = this.$document.scrollTop();\n\n        const onMouseMove = (event) => {\n          this.context.invoke('editor.resizeTo', {\n            x: event.clientX - posStart.left,\n            y: event.clientY - (posStart.top - scrollTop),\n          }, $target, !event.shiftKey);\n\n          this.update($target[0], event);\n        };\n\n        this.$document\n          .on('mousemove', onMouseMove)\n          .one('mouseup', (e) => {\n            e.preventDefault();\n            this.$document.off('mousemove', onMouseMove);\n            this.context.invoke('editor.afterCommand');\n          });\n\n        if (!$target.data('ratio')) { // original ratio.\n          $target.data('ratio', $target.height() / $target.width());\n        }\n      }\n    });\n\n    // Listen for scrolling on the handle overlay.\n    this.$handle.on('wheel', (event) => {\n      event.preventDefault();\n      this.update();\n    });\n  }\n\n  destroy() {\n    this.$handle.remove();\n  }\n\n  update(target, event) {\n    if (this.context.isDisabled()) {\n      return false;\n    }\n\n    const isImage = dom.isImg(target);\n    const $selection = this.$handle.find('.note-control-selection');\n\n    this.context.invoke('imagePopover.update', target, event);\n\n    if (isImage) {\n      const $image = $(target);\n\n      const areaRect = this.$editingArea[0].getBoundingClientRect();\n      const imageRect = target.getBoundingClientRect();\n\n      $selection.css({\n        display: 'block',\n        left: imageRect.left - areaRect.left,\n        top: imageRect.top - areaRect.top,\n        width: imageRect.width,\n        height: imageRect.height,\n      }).data('target', $image); // save current image element.\n\n      const origImageObj = new Image();\n      origImageObj.src = $image.attr('src');\n\n      const sizingText = imageRect.width + 'x' + imageRect.height + ' (' + this.lang.image.original + ': ' + origImageObj.width + 'x' + origImageObj.height + ')';\n      $selection.find('.note-control-selection-info').text(sizingText);\n      this.context.invoke('editor.saveTarget', target);\n    } else {\n      this.hide();\n    }\n\n    return isImage;\n  }\n\n  /**\n   * hide\n   *\n   * @param {jQuery} $handle\n   */\n  hide() {\n    this.context.invoke('editor.clearTarget');\n    this.$handle.children().hide();\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport key from '../core/key';\n\nconst defaultScheme = 'http://';\nconst linkPattern = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@|xmpp:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i;\n\nexport default class AutoLink {\n  constructor(context) {\n    this.context = context;\n    this.options = context.options;\n    this.$editable = context.layoutInfo.editable;\n    this.events = {\n      'summernote.keyup': (we, event) => {\n        if (!event.isDefaultPrevented()) {\n          this.handleKeyup(event);\n        }\n      },\n      'summernote.keydown': (we, event) => {\n        this.handleKeydown(event);\n      },\n    };\n  }\n\n  initialize() {\n    this.lastWordRange = null;\n  }\n\n  destroy() {\n    this.lastWordRange = null;\n  }\n\n  replace() {\n    if (!this.lastWordRange) {\n      return;\n    }\n\n    const keyword = this.lastWordRange.toString();\n    const match = keyword.match(linkPattern);\n\n    if (match && (match[1] || match[2])) {\n      const link = match[1] ? keyword : defaultScheme + keyword;\n      const urlText = this.options.showDomainOnlyForAutolink ?\n        keyword.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:xmpp?:?)?(?:www\\.)?/i, '').split('/')[0]\n        : keyword;\n      const node = $('<a></a>').html(urlText).attr('href', link)[0];\n      if (this.context.options.linkTargetBlank) {\n        $(node).attr('target', '_blank');\n      }\n\n      this.lastWordRange.insertNode(node);\n      this.lastWordRange = null;\n      this.context.invoke('editor.focus');\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n  }\n\n  handleKeydown(event) {\n    if (lists.contains([key.code.ENTER, key.code.SPACE], event.keyCode)) {\n      const wordRange = this.context.invoke('editor.createRange').getWordRange();\n      this.lastWordRange = wordRange;\n    }\n  }\n\n  handleKeyup(event) {\n    if (key.code.SPACE === event.keyCode || (key.code.ENTER === event.keyCode && !event.shiftKey)) {\n      this.replace();\n    }\n  }\n}\n","import dom from '../core/dom';\n\n/**\n * textarea auto sync.\n */\nexport default class AutoSync {\n  constructor(context) {\n    this.$note = context.layoutInfo.note;\n    this.events = {\n      'summernote.change': () => {\n        this.$note.val(context.invoke('code'));\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return dom.isTextarea(this.$note[0]);\n  }\n}\n","import lists from '../core/lists';\nimport dom from '../core/dom';\nimport key from '../core/key';\n\nexport default class AutoReplace {\n  constructor(context) {\n    this.context = context;\n    this.options = context.options.replace || {};\n\n    this.keys = [key.code.ENTER, key.code.SPACE, key.code.PERIOD, key.code.COMMA, key.code.SEMICOLON, key.code.SLASH];\n    this.previousKeydownCode = null;\n\n    this.events = {\n      'summernote.keyup': (we, event) => {\n        if (!event.isDefaultPrevented()) {\n          this.handleKeyup(event);\n        }\n      },\n      'summernote.keydown': (we, event) => {\n        this.handleKeydown(event);\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !!this.options.match;\n  }\n\n  initialize() {\n    this.lastWord = null;\n  }\n\n  destroy() {\n    this.lastWord = null;\n  }\n\n  replace() {\n    if (!this.lastWord) {\n      return;\n    }\n\n    const self = this;\n    const keyword = this.lastWord.toString();\n    this.options.match(keyword, function(match) {\n      if (match) {\n        let node = '';\n\n        if (typeof match === 'string') {\n          node = dom.createText(match);\n        } else if (match instanceof jQuery) {\n          node = match[0];\n        } else if (match instanceof Node) {\n          node = match;\n        }\n\n        if (!node) return;\n        self.lastWord.insertNode(node);\n        self.lastWord = null;\n        self.context.invoke('editor.focus');\n      }\n    });\n  }\n\n  handleKeydown(event) {\n    // this forces it to remember the last whole word, even if multiple termination keys are pressed\n    // before the previous key is let go.\n    if (this.previousKeydownCode && lists.contains(this.keys, this.previousKeydownCode)) {\n      this.previousKeydownCode = event.keyCode;\n      return;\n    }\n\n    if (lists.contains(this.keys, event.keyCode)) {\n      const wordRange = this.context.invoke('editor.createRange').getWordRange();\n      this.lastWord = wordRange;\n    }\n    this.previousKeydownCode = event.keyCode;\n  }\n\n  handleKeyup(event) {\n    if (lists.contains(this.keys, event.keyCode)) {\n      this.replace();\n    }\n  }\n}\n","import $ from 'jquery';\nexport default class Placeholder {\n  constructor(context) {\n    this.context = context;\n\n    this.$editingArea = context.layoutInfo.editingArea;\n    this.options = context.options;\n\n    if (this.options.inheritPlaceholder === true) {\n      // get placeholder value from the original element\n      this.options.placeholder = this.context.$note.attr('placeholder') || this.options.placeholder;\n    }\n\n    this.events = {\n      'summernote.init summernote.change': () => {\n        this.update();\n      },\n      'summernote.codeview.toggled': () => {\n        this.update();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !!this.options.placeholder;\n  }\n\n  initialize() {\n    this.$placeholder = $('<div class=\"note-placeholder\"></div>');\n    this.$placeholder.on('click', () => {\n      this.context.invoke('focus');\n    }).html(this.options.placeholder).prependTo(this.$editingArea);\n\n    this.update();\n  }\n\n  destroy() {\n    this.$placeholder.remove();\n  }\n\n  update() {\n    const isShow = !this.context.invoke('codeview.isActivated') && this.context.invoke('editor.isEmpty');\n    this.$placeholder.toggle(isShow);\n  }\n}\n","import $ from 'jquery';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport env from '../core/env';\n\nexport default class Buttons {\n  constructor(context) {\n    this.ui = $.summernote.ui;\n    this.context = context;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n    this.invertedKeyMap = func.invertObject(\n      this.options.keyMap[env.isMac ? 'mac' : 'pc']\n    );\n  }\n\n  representShortcut(editorMethod) {\n    let shortcut = this.invertedKeyMap[editorMethod];\n    if (!this.options.shortcuts || !shortcut) {\n      return '';\n    }\n\n    if (env.isMac) {\n      shortcut = shortcut.replace('CMD', '⌘').replace('SHIFT', '⇧');\n    }\n\n    shortcut = shortcut.replace('BACKSLASH', '\\\\')\n      .replace('SLASH', '/')\n      .replace('LEFTBRACKET', '[')\n      .replace('RIGHTBRACKET', ']');\n\n    return ' (' + shortcut + ')';\n  }\n\n  button(o) {\n    if (!this.options.tooltip && o.tooltip) {\n      delete o.tooltip;\n    }\n    o.container = this.options.container;\n    return this.ui.button(o);\n  }\n\n  initialize() {\n    this.addToolbarButtons();\n    this.addImagePopoverButtons();\n    this.addLinkPopoverButtons();\n    this.addTablePopoverButtons();\n    this.fontInstalledMap = {};\n  }\n\n  destroy() {\n    delete this.fontInstalledMap;\n  }\n\n  isFontInstalled(name) {\n    if (!Object.prototype.hasOwnProperty.call(this.fontInstalledMap, name)) {\n      this.fontInstalledMap[name] = env.isFontInstalled(name) ||\n        lists.contains(this.options.fontNamesIgnoreCheck, name);\n    }\n    return this.fontInstalledMap[name];\n  }\n\n  isFontDeservedToAdd(name) {\n    name = name.toLowerCase();\n    return (name !== '' && this.isFontInstalled(name) && env.genericFontFamilies.indexOf(name) === -1);\n  }\n\n  colorPalette(className, tooltip, backColor, foreColor) {\n    return this.ui.buttonGroup({\n      className: 'note-color ' + className,\n      children: [\n        this.button({\n          className: 'note-current-color-button',\n          contents: this.ui.icon(this.options.icons.font + ' note-recent-color'),\n          tooltip: tooltip,\n          click: (event) => {\n            const $button = $(event.currentTarget);\n            if (backColor && foreColor) {\n              this.context.invoke('editor.color', {\n                backColor: $button.attr('data-backColor'),\n                foreColor: $button.attr('data-foreColor'),\n              });\n            } else if (backColor) {\n              this.context.invoke('editor.color', {\n                backColor: $button.attr('data-backColor'),\n              });\n            } else if (foreColor) {\n              this.context.invoke('editor.color', {\n                foreColor: $button.attr('data-foreColor'),\n              });\n            }\n          },\n          callback: ($button) => {\n            const $recentColor = $button.find('.note-recent-color');\n            if (backColor) {\n              $recentColor.css('background-color', this.options.colorButton.backColor);\n              $button.attr('data-backColor', this.options.colorButton.backColor);\n            }\n            if (foreColor) {\n              $recentColor.css('color', this.options.colorButton.foreColor);\n              $button.attr('data-foreColor', this.options.colorButton.foreColor);\n            } else {\n              $recentColor.css('color', 'transparent');\n            }\n          },\n        }),\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('', this.options),\n          tooltip: this.lang.color.more,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          items: (backColor ? [\n            '<div class=\"note-palette\">',\n              '<div class=\"note-palette-title\">' + this.lang.color.background + '</div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"backColor\" data-value=\"transparent\">',\n                  this.lang.color.transparent,\n                '</button>',\n              '</div>',\n              '<div class=\"note-holder\" data-event=\"backColor\"><!-- back colors --></div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"backColorPicker-'+this.options.id+'\">',\n                  this.lang.color.cpSelect,\n                '</button>',\n                '<input type=\"color\" id=\"backColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette-'+this.options.id+'\">',\n              '</div>',\n              '<div class=\"note-holder-custom\" id=\"backColorPalette-'+this.options.id+'\" data-event=\"backColor\"></div>',\n            '</div>',\n          ].join('') : '') +\n          (foreColor ? [\n            '<div class=\"note-palette\">',\n              '<div class=\"note-palette-title\">' + this.lang.color.foreground + '</div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"removeFormat\" data-value=\"foreColor\">',\n                  this.lang.color.resetToDefault,\n                '</button>',\n              '</div>',\n              '<div class=\"note-holder\" data-event=\"foreColor\"><!-- fore colors --></div>',\n              '<div>',\n                '<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"foreColorPicker-'+this.options.id+'\">',\n                  this.lang.color.cpSelect,\n                '</button>',\n                '<input type=\"color\" id=\"foreColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette-'+this.options.id+'\">',\n              '</div>', // Fix missing Div, Commented to find easily if it's wrong\n              '<div class=\"note-holder-custom\" id=\"foreColorPalette-'+this.options.id+'\" data-event=\"foreColor\"></div>',\n            '</div>',\n          ].join('') : ''),\n          callback: ($dropdown) => {\n            $dropdown.find('.note-holder').each((idx, item) => {\n              const $holder = $(item);\n              $holder.append(this.ui.palette({\n                colors: this.options.colors,\n                colorsName: this.options.colorsName,\n                eventName: $holder.data('event'),\n                container: this.options.container,\n                tooltip: this.options.tooltip,\n              }).render());\n            });\n            /* TODO: do we have to record recent custom colors within cookies? */\n            var customColors = [\n              ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'],\n            ];\n            $dropdown.find('.note-holder-custom').each((idx, item) => {\n              const $holder = $(item);\n              $holder.append(this.ui.palette({\n                colors: customColors,\n                colorsName: customColors,\n                eventName: $holder.data('event'),\n                container: this.options.container,\n                tooltip: this.options.tooltip,\n              }).render());\n            });\n            $dropdown.find('input[type=color]').each((idx, item) => {\n              $(item).on(\"change\", function() {\n                const $chip = $dropdown.find('#' + $(this).data('event')).find('.note-color-btn').first();\n                const color = this.value.toUpperCase();\n                $chip.css('background-color', color)\n                  .attr('aria-label', color)\n                  .attr('data-value', color)\n                  .attr('data-original-title', color);\n                $chip.trigger('click');\n              });\n            });\n          },\n          click: (event) => {\n            event.stopPropagation();\n\n            const $parent = $('.' + className).find('.note-dropdown-menu');\n            const $button = $(event.target);\n            const eventName = $button.data('event');\n            const value = $button.attr('data-value');\n\n            if (eventName === 'openPalette') {\n              const $picker = $parent.find('#' + value);\n              const $palette = $($parent.find('#' + $picker.data('event')).find('.note-color-row')[0]);\n\n              // Shift palette chips\n              const $chip = $palette.find('.note-color-btn').last().detach();\n\n              // Set chip attributes\n              const color = $picker.val();\n              $chip.css('background-color', color)\n                .attr('aria-label', color)\n                .attr('data-value', color)\n                .attr('data-original-title', color);\n              $palette.prepend($chip);\n              $picker.trigger('click');\n            } else {\n              if (lists.contains(['backColor', 'foreColor'], eventName)) {\n                const key = eventName === 'backColor' ? 'background-color' : 'color';\n                const $color = $button.closest('.note-color').find('.note-recent-color');\n                const $currentButton = $button.closest('.note-color').find('.note-current-color-button');\n\n                $color.css(key, value);\n                $currentButton.attr('data-' + eventName, value);\n              }\n              this.context.invoke('editor.' + eventName, value);\n            }\n          },\n        }),\n      ],\n    }).render();\n  }\n\n  addToolbarButtons() {\n    this.context.memo('button.style', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(\n            this.ui.icon(this.options.icons.magic), this.options\n          ),\n          tooltip: this.lang.style.style,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          className: 'dropdown-style',\n          items: this.options.styleTags,\n          title: this.lang.style.style,\n          template: (item) => {\n            // TBD: need to be simplified\n            if (typeof item === 'string') {\n              item = {\n                tag: item,\n                title: (Object.prototype.hasOwnProperty.call(this.lang.style, item) ? this.lang.style[item] : item),\n              };\n            }\n\n            const tag = item.tag;\n            const title = item.title;\n            const style = item.style ? ' style=\"' + item.style + '\" ' : '';\n            const className = item.className ? ' class=\"' + item.className + '\"' : '';\n\n            return '<' + tag + style + className + '>' + title + '</' + tag + '>';\n          },\n          click: this.context.createInvokeHandler('editor.formatBlock'),\n        }),\n      ]).render();\n    });\n\n    for (let styleIdx = 0, styleLen = this.options.styleTags.length; styleIdx < styleLen; styleIdx++) {\n      const item = this.options.styleTags[styleIdx];\n\n      this.context.memo('button.style.' + item, () => {\n        return this.button({\n          className: 'note-btn-style-' + item,\n          contents: '<div data-value=\"' + item + '\">' + item.toUpperCase() + '</div>',\n          tooltip: this.lang.style[item],\n          click: this.context.createInvokeHandler('editor.formatBlock'),\n        }).render();\n      });\n    }\n\n    this.context.memo('button.bold', () => {\n      return this.button({\n        className: 'note-btn-bold',\n        contents: this.ui.icon(this.options.icons.bold),\n        tooltip: this.lang.font.bold + this.representShortcut('bold'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.bold'),\n      }).render();\n    });\n\n    this.context.memo('button.italic', () => {\n      return this.button({\n        className: 'note-btn-italic',\n        contents: this.ui.icon(this.options.icons.italic),\n        tooltip: this.lang.font.italic + this.representShortcut('italic'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.italic'),\n      }).render();\n    });\n\n    this.context.memo('button.underline', () => {\n      return this.button({\n        className: 'note-btn-underline',\n        contents: this.ui.icon(this.options.icons.underline),\n        tooltip: this.lang.font.underline + this.representShortcut('underline'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.underline'),\n      }).render();\n    });\n\n    this.context.memo('button.clear', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.eraser),\n        tooltip: this.lang.font.clear + this.representShortcut('removeFormat'),\n        click: this.context.createInvokeHandler('editor.removeFormat'),\n      }).render();\n    });\n\n    this.context.memo('button.strikethrough', () => {\n      return this.button({\n        className: 'note-btn-strikethrough',\n        contents: this.ui.icon(this.options.icons.strikethrough),\n        tooltip: this.lang.font.strikethrough + this.representShortcut('strikethrough'),\n        click: this.context.createInvokeHandlerAndUpdateState('editor.strikethrough'),\n      }).render();\n    });\n\n    this.context.memo('button.superscript', () => {\n      return this.button({\n        className: 'note-btn-superscript',\n        contents: this.ui.icon(this.options.icons.superscript),\n        tooltip: this.lang.font.superscript,\n        click: this.context.createInvokeHandlerAndUpdateState('editor.superscript'),\n      }).render();\n    });\n\n    this.context.memo('button.subscript', () => {\n      return this.button({\n        className: 'note-btn-subscript',\n        contents: this.ui.icon(this.options.icons.subscript),\n        tooltip: this.lang.font.subscript,\n        click: this.context.createInvokeHandlerAndUpdateState('editor.subscript'),\n      }).render();\n    });\n\n    this.context.memo('button.fontname', () => {\n      const styleInfo = this.context.invoke('editor.currentStyle');\n\n      if (this.options.addDefaultFonts) {\n        // Add 'default' fonts into the fontnames array if not exist\n        $.each(styleInfo['font-family'].split(','), (idx, fontname) => {\n          fontname = fontname.trim().replace(/['\"]+/g, '');\n          if (this.isFontDeservedToAdd(fontname)) {\n            if (this.options.fontNames.indexOf(fontname) === -1) {\n              this.options.fontNames.push(fontname);\n            }\n          }\n        });\n      }\n\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(\n            '<span class=\"note-current-fontname\"></span>', this.options\n          ),\n          tooltip: this.lang.font.name,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontname',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontNames.filter(this.isFontInstalled.bind(this)),\n          title: this.lang.font.name,\n          template: (item) => {\n            return '<span style=\"font-family: ' + env.validFontName(item) + '\">' + item + '</span>';\n          },\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontName'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.fontsize', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>', this.options),\n          tooltip: this.lang.font.size,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontsize',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontSizes,\n          title: this.lang.font.size,\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSize'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.fontsizeunit', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>', this.options),\n          tooltip: this.lang.font.sizeunit,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          className: 'dropdown-fontsizeunit',\n          checkClassName: this.options.icons.menuCheck,\n          items: this.options.fontSizeUnits,\n          title: this.lang.font.sizeunit,\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSizeUnit'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.color', () => {\n      return this.colorPalette('note-color-all', this.lang.color.recent, true, true);\n    });\n\n    this.context.memo('button.forecolor', () => {\n      return this.colorPalette('note-color-fore', this.lang.color.foreground, false, true);\n    });\n\n    this.context.memo('button.backcolor', () => {\n      return this.colorPalette('note-color-back', this.lang.color.background, true, false);\n    });\n\n    this.context.memo('button.ul', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.unorderedlist),\n        tooltip: this.lang.lists.unordered + this.representShortcut('insertUnorderedList'),\n        click: this.context.createInvokeHandler('editor.insertUnorderedList'),\n      }).render();\n    });\n\n    this.context.memo('button.ol', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.orderedlist),\n        tooltip: this.lang.lists.ordered + this.representShortcut('insertOrderedList'),\n        click: this.context.createInvokeHandler('editor.insertOrderedList'),\n      }).render();\n    });\n\n    const justifyLeft = this.button({\n      contents: this.ui.icon(this.options.icons.alignLeft),\n      tooltip: this.lang.paragraph.left + this.representShortcut('justifyLeft'),\n      click: this.context.createInvokeHandler('editor.justifyLeft'),\n    });\n\n    const justifyCenter = this.button({\n      contents: this.ui.icon(this.options.icons.alignCenter),\n      tooltip: this.lang.paragraph.center + this.representShortcut('justifyCenter'),\n      click: this.context.createInvokeHandler('editor.justifyCenter'),\n    });\n\n    const justifyRight = this.button({\n      contents: this.ui.icon(this.options.icons.alignRight),\n      tooltip: this.lang.paragraph.right + this.representShortcut('justifyRight'),\n      click: this.context.createInvokeHandler('editor.justifyRight'),\n    });\n\n    const justifyFull = this.button({\n      contents: this.ui.icon(this.options.icons.alignJustify),\n      tooltip: this.lang.paragraph.justify + this.representShortcut('justifyFull'),\n      click: this.context.createInvokeHandler('editor.justifyFull'),\n    });\n\n    const outdent = this.button({\n      contents: this.ui.icon(this.options.icons.outdent),\n      tooltip: this.lang.paragraph.outdent + this.representShortcut('outdent'),\n      click: this.context.createInvokeHandler('editor.outdent'),\n    });\n\n    const indent = this.button({\n      contents: this.ui.icon(this.options.icons.indent),\n      tooltip: this.lang.paragraph.indent + this.representShortcut('indent'),\n      click: this.context.createInvokeHandler('editor.indent'),\n    });\n\n    this.context.memo('button.justifyLeft', func.invoke(justifyLeft, 'render'));\n    this.context.memo('button.justifyCenter', func.invoke(justifyCenter, 'render'));\n    this.context.memo('button.justifyRight', func.invoke(justifyRight, 'render'));\n    this.context.memo('button.justifyFull', func.invoke(justifyFull, 'render'));\n    this.context.memo('button.outdent', func.invoke(outdent, 'render'));\n    this.context.memo('button.indent', func.invoke(indent, 'render'));\n\n    this.context.memo('button.paragraph', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.alignLeft), this.options),\n          tooltip: this.lang.paragraph.paragraph,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown([\n          this.ui.buttonGroup({\n            className: 'note-align',\n            children: [justifyLeft, justifyCenter, justifyRight, justifyFull],\n          }),\n          this.ui.buttonGroup({\n            className: 'note-list',\n            children: [outdent, indent],\n          }),\n        ]),\n      ]).render();\n    });\n\n    this.context.memo('button.height', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.textHeight), this.options),\n          tooltip: this.lang.font.height,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdownCheck({\n          items: this.options.lineHeights,\n          checkClassName: this.options.icons.menuCheck,\n          className: 'dropdown-line-height',\n          title: this.lang.font.height,\n          click: this.context.createInvokeHandler('editor.lineHeight'),\n        }),\n      ]).render();\n    });\n\n    this.context.memo('button.table', () => {\n      return this.ui.buttonGroup([\n        this.button({\n          className: 'dropdown-toggle',\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.table), this.options),\n          tooltip: this.lang.table.table,\n          data: {\n            toggle: 'dropdown',\n          },\n        }),\n        this.ui.dropdown({\n          title: this.lang.table.table,\n          className: 'note-table',\n          items: [\n            '<div class=\"note-dimension-picker\">',\n              '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>',\n              '<div class=\"note-dimension-picker-highlighted\"></div>',\n              '<div class=\"note-dimension-picker-unhighlighted\"></div>',\n            '</div>',\n            '<div class=\"note-dimension-display\">1 x 1</div>',\n          ].join(''),\n        }),\n      ], {\n        callback: ($node) => {\n          const $catcher = $node.find('.note-dimension-picker-mousecatcher');\n          $catcher.css({\n            width: this.options.insertTableMaxSize.col + 'em',\n            height: this.options.insertTableMaxSize.row + 'em',\n          }).on('mousedown', this.context.createInvokeHandler('editor.insertTable'))\n            .on('mousemove', this.tableMoveHandler.bind(this));\n        },\n      }).render();\n    });\n\n    this.context.memo('button.link', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.link),\n        tooltip: this.lang.link.link + this.representShortcut('linkDialog.show'),\n        click: this.context.createInvokeHandler('linkDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.picture', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.picture),\n        tooltip: this.lang.image.image,\n        click: this.context.createInvokeHandler('imageDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.video', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.video),\n        tooltip: this.lang.video.video,\n        click: this.context.createInvokeHandler('videoDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.hr', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.minus),\n        tooltip: this.lang.hr.insert + this.representShortcut('insertHorizontalRule'),\n        click: this.context.createInvokeHandler('editor.insertHorizontalRule'),\n      }).render();\n    });\n\n    this.context.memo('button.fullscreen', () => {\n      return this.button({\n        className: 'btn-fullscreen note-codeview-keep',\n        contents: this.ui.icon(this.options.icons.arrowsAlt),\n        tooltip: this.lang.options.fullscreen,\n        click: this.context.createInvokeHandler('fullscreen.toggle'),\n      }).render();\n    });\n\n    this.context.memo('button.codeview', () => {\n      return this.button({\n        className: 'btn-codeview note-codeview-keep',\n        contents: this.ui.icon(this.options.icons.code),\n        tooltip: this.lang.options.codeview,\n        click: this.context.createInvokeHandler('codeview.toggle'),\n      }).render();\n    });\n\n    this.context.memo('button.redo', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.redo),\n        tooltip: this.lang.history.redo + this.representShortcut('redo'),\n        click: this.context.createInvokeHandler('editor.redo'),\n      }).render();\n    });\n\n    this.context.memo('button.undo', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.undo),\n        tooltip: this.lang.history.undo + this.representShortcut('undo'),\n        click: this.context.createInvokeHandler('editor.undo'),\n      }).render();\n    });\n\n    this.context.memo('button.help', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.question),\n        tooltip: this.lang.options.help,\n        click: this.context.createInvokeHandler('helpDialog.show'),\n      }).render();\n    });\n  }\n\n  /**\n   * image: [\n   *   ['imageResize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\n   *   ['float', ['floatLeft', 'floatRight', 'floatNone']],\n   *   ['remove', ['removeMedia']],\n   * ],\n   */\n  addImagePopoverButtons() {\n    // Image Size Buttons\n    this.context.memo('button.resizeFull', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">100%</span>',\n        tooltip: this.lang.image.resizeFull,\n        click: this.context.createInvokeHandler('editor.resize', '1'),\n      }).render();\n    });\n    this.context.memo('button.resizeHalf', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">50%</span>',\n        tooltip: this.lang.image.resizeHalf,\n        click: this.context.createInvokeHandler('editor.resize', '0.5'),\n      }).render();\n    });\n    this.context.memo('button.resizeQuarter', () => {\n      return this.button({\n        contents: '<span class=\"note-fontsize-10\">25%</span>',\n        tooltip: this.lang.image.resizeQuarter,\n        click: this.context.createInvokeHandler('editor.resize', '0.25'),\n      }).render();\n    });\n    this.context.memo('button.resizeNone', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.rollback),\n        tooltip: this.lang.image.resizeNone,\n        click: this.context.createInvokeHandler('editor.resize', '0'),\n      }).render();\n    });\n\n    // Float Buttons\n    this.context.memo('button.floatLeft', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.floatLeft),\n        tooltip: this.lang.image.floatLeft,\n        click: this.context.createInvokeHandler('editor.floatMe', 'left'),\n      }).render();\n    });\n\n    this.context.memo('button.floatRight', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.floatRight),\n        tooltip: this.lang.image.floatRight,\n        click: this.context.createInvokeHandler('editor.floatMe', 'right'),\n      }).render();\n    });\n\n    this.context.memo('button.floatNone', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.rollback),\n        tooltip: this.lang.image.floatNone,\n        click: this.context.createInvokeHandler('editor.floatMe', 'none'),\n      }).render();\n    });\n\n    // Remove Buttons\n    this.context.memo('button.removeMedia', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.trash),\n        tooltip: this.lang.image.remove,\n        click: this.context.createInvokeHandler('editor.removeMedia'),\n      }).render();\n    });\n  }\n\n  addLinkPopoverButtons() {\n    this.context.memo('button.linkDialogShow', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.link),\n        tooltip: this.lang.link.edit,\n        click: this.context.createInvokeHandler('linkDialog.show'),\n      }).render();\n    });\n\n    this.context.memo('button.unlink', () => {\n      return this.button({\n        contents: this.ui.icon(this.options.icons.unlink),\n        tooltip: this.lang.link.unlink,\n        click: this.context.createInvokeHandler('editor.unlink'),\n      }).render();\n    });\n  }\n\n  /**\n   * table : [\n   *  ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\n   *  ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]\n   * ],\n   */\n  addTablePopoverButtons() {\n    this.context.memo('button.addRowUp', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowAbove),\n        tooltip: this.lang.table.addRowAbove,\n        click: this.context.createInvokeHandler('editor.addRow', 'top'),\n      }).render();\n    });\n    this.context.memo('button.addRowDown', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowBelow),\n        tooltip: this.lang.table.addRowBelow,\n        click: this.context.createInvokeHandler('editor.addRow', 'bottom'),\n      }).render();\n    });\n    this.context.memo('button.addColLeft', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colBefore),\n        tooltip: this.lang.table.addColLeft,\n        click: this.context.createInvokeHandler('editor.addCol', 'left'),\n      }).render();\n    });\n    this.context.memo('button.addColRight', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colAfter),\n        tooltip: this.lang.table.addColRight,\n        click: this.context.createInvokeHandler('editor.addCol', 'right'),\n      }).render();\n    });\n    this.context.memo('button.deleteRow', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.rowRemove),\n        tooltip: this.lang.table.delRow,\n        click: this.context.createInvokeHandler('editor.deleteRow'),\n      }).render();\n    });\n    this.context.memo('button.deleteCol', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.colRemove),\n        tooltip: this.lang.table.delCol,\n        click: this.context.createInvokeHandler('editor.deleteCol'),\n      }).render();\n    });\n    this.context.memo('button.deleteTable', () => {\n      return this.button({\n        className: 'btn-md',\n        contents: this.ui.icon(this.options.icons.trash),\n        tooltip: this.lang.table.delTable,\n        click: this.context.createInvokeHandler('editor.deleteTable'),\n      }).render();\n    });\n  }\n\n  build($container, groups) {\n    for (let groupIdx = 0, groupLen = groups.length; groupIdx < groupLen; groupIdx++) {\n      const group = groups[groupIdx];\n      const groupName = Array.isArray(group) ? group[0] : group;\n      const buttons = Array.isArray(group) ? ((group.length === 1) ? [group[0]] : group[1]) : [group];\n\n      const $group = this.ui.buttonGroup({\n        className: 'note-' + groupName,\n      }).render();\n\n      for (let idx = 0, len = buttons.length; idx < len; idx++) {\n        const btn = this.context.memo('button.' + buttons[idx]);\n        if (btn) {\n          $group.append(typeof btn === 'function' ? btn(this.context) : btn);\n        }\n      }\n      $group.appendTo($container);\n    }\n  }\n\n  /**\n   * @param {jQuery} [$container]\n   */\n  updateCurrentStyle($container) {\n    const $cont = $container || this.$toolbar;\n\n    const styleInfo = this.context.invoke('editor.currentStyle');\n    this.updateBtnStates($cont, {\n      '.note-btn-bold': () => {\n        return styleInfo['font-bold'] === 'bold';\n      },\n      '.note-btn-italic': () => {\n        return styleInfo['font-italic'] === 'italic';\n      },\n      '.note-btn-underline': () => {\n        return styleInfo['font-underline'] === 'underline';\n      },\n      '.note-btn-subscript': () => {\n        return styleInfo['font-subscript'] === 'subscript';\n      },\n      '.note-btn-superscript': () => {\n        return styleInfo['font-superscript'] === 'superscript';\n      },\n      '.note-btn-strikethrough': () => {\n        return styleInfo['font-strikethrough'] === 'strikethrough';\n      },\n    });\n\n    if (styleInfo['font-family']) {\n      const fontNames = styleInfo['font-family'].split(',').map((name) => {\n        return name.replace(/[\\'\\\"]/g, '')\n          .replace(/\\s+$/, '')\n          .replace(/^\\s+/, '');\n      });\n      const fontName = lists.find(fontNames, this.isFontInstalled.bind(this));\n\n      $cont.find('.dropdown-fontname a').each((idx, item) => {\n        const $item = $(item);\n        // always compare string to avoid creating another func.\n        const isChecked = ($item.data('value') + '') === (fontName + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontname').text(fontName).css('font-family', fontName);\n    }\n\n    if (styleInfo['font-size']) {\n      const fontSize = styleInfo['font-size'];\n      $cont.find('.dropdown-fontsize a').each((idx, item) => {\n        const $item = $(item);\n        // always compare with string to avoid creating another func.\n        const isChecked = ($item.data('value') + '') === (fontSize + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontsize').text(fontSize);\n\n      const fontSizeUnit = styleInfo['font-size-unit'];\n      $cont.find('.dropdown-fontsizeunit a').each((idx, item) => {\n        const $item = $(item);\n        const isChecked = ($item.data('value') + '') === (fontSizeUnit + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-fontsizeunit').text(fontSizeUnit);\n    }\n\n    if (styleInfo['line-height']) {\n      const lineHeight = styleInfo['line-height'];\n      $cont.find('.dropdown-line-height a').each((idx, item) => {\n        const $item = $(item);\n        // always compare with string to avoid creating another func.\n        const isChecked = ($(item).data('value') + '') === (lineHeight + '');\n        $item.toggleClass('checked', isChecked);\n      });\n      $cont.find('.note-current-line-height').text(lineHeight);\n    }\n  }\n\n  updateBtnStates($container, infos) {\n    $.each(infos, (selector, pred) => {\n      this.ui.toggleBtnActive($container.find(selector), pred());\n    });\n  }\n\n  tableMoveHandler(event) {\n    const PX_PER_EM = 18;\n    const $picker = $(event.target.parentNode); // target is mousecatcher\n    const $dimensionDisplay = $picker.next();\n    const $catcher = $picker.find('.note-dimension-picker-mousecatcher');\n    const $highlighted = $picker.find('.note-dimension-picker-highlighted');\n    const $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\n\n    let posOffset;\n    // HTML5 with jQuery - e.offsetX is undefined in Firefox\n    if (event.offsetX === undefined) {\n      const posCatcher = $(event.target).offset();\n      posOffset = {\n        x: event.pageX - posCatcher.left,\n        y: event.pageY - posCatcher.top,\n      };\n    } else {\n      posOffset = {\n        x: event.offsetX,\n        y: event.offsetY,\n      };\n    }\n\n    const dim = {\n      c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\n      r: Math.ceil(posOffset.y / PX_PER_EM) || 1,\n    };\n\n    $highlighted.css({ width: dim.c + 'em', height: dim.r + 'em' });\n    $catcher.data('value', dim.c + 'x' + dim.r);\n\n    if (dim.c > 3 && dim.c < this.options.insertTableMaxSize.col) {\n      $unhighlighted.css({ width: dim.c + 1 + 'em' });\n    }\n\n    if (dim.r > 3 && dim.r < this.options.insertTableMaxSize.row) {\n      $unhighlighted.css({ height: dim.r + 1 + 'em' });\n    }\n\n    $dimensionDisplay.html(dim.c + ' x ' + dim.r);\n  }\n}\n","import $ from 'jquery';\nexport default class Toolbar {\n  constructor(context) {\n    this.context = context;\n\n    this.$window = $(window);\n    this.$document = $(document);\n\n    this.ui = $.summernote.ui;\n    this.$note = context.layoutInfo.note;\n    this.$editor = context.layoutInfo.editor;\n    this.$toolbar = context.layoutInfo.toolbar;\n    this.$editable = context.layoutInfo.editable;\n    this.$statusbar = context.layoutInfo.statusbar;\n    this.options = context.options;\n\n    this.isFollowing = false;\n    this.followScroll = this.followScroll.bind(this);\n  }\n\n  shouldInitialize() {\n    return !this.options.airMode;\n  }\n\n  initialize() {\n    this.options.toolbar = this.options.toolbar || [];\n\n    if (!this.options.toolbar.length) {\n      this.$toolbar.hide();\n    } else {\n      this.context.invoke('buttons.build', this.$toolbar, this.options.toolbar);\n    }\n\n    if (this.options.toolbarContainer) {\n      this.$toolbar.appendTo(this.options.toolbarContainer);\n    }\n\n    this.changeContainer(false);\n\n    this.$note.on('summernote.keyup summernote.mouseup summernote.change', () => {\n      this.context.invoke('buttons.updateCurrentStyle');\n    });\n\n    this.context.invoke('buttons.updateCurrentStyle');\n    if (this.options.followingToolbar) {\n      this.$window.on('scroll resize', this.followScroll);\n    }\n  }\n\n  destroy() {\n    this.$toolbar.children().remove();\n\n    if (this.options.followingToolbar) {\n      this.$window.off('scroll resize', this.followScroll);\n    }\n  }\n\n  followScroll() {\n    if (this.$editor.hasClass('fullscreen')) {\n      return false;\n    }\n\n    const editorHeight = this.$editor.outerHeight();\n    const editorWidth = this.$editor.width();\n    const toolbarHeight = this.$toolbar.height();\n    const statusbarHeight = this.$statusbar.height();\n\n    // check if the web app is currently using another static bar\n    let otherBarHeight = 0;\n    if (this.options.otherStaticBar) {\n      otherBarHeight = $(this.options.otherStaticBar).outerHeight();\n    }\n\n    const currentOffset = this.$document.scrollTop();\n    const editorOffsetTop = this.$editor.offset().top;\n    const editorOffsetBottom = editorOffsetTop + editorHeight;\n    const activateOffset = editorOffsetTop - otherBarHeight;\n    const deactivateOffsetBottom = editorOffsetBottom - otherBarHeight - toolbarHeight - statusbarHeight;\n\n    if (!this.isFollowing &&\n      (currentOffset > activateOffset) && (currentOffset < deactivateOffsetBottom - toolbarHeight)) {\n      this.isFollowing = true;\n      this.$editable.css({\n        marginTop: this.$toolbar.outerHeight(),\n      });\n      this.$toolbar.css({\n        position: 'fixed',\n        top: otherBarHeight,\n        width: editorWidth,\n        zIndex: 1000,\n      });\n    } else if (this.isFollowing &&\n      ((currentOffset < activateOffset) || (currentOffset > deactivateOffsetBottom))) {\n      this.isFollowing = false;\n      this.$toolbar.css({\n        position: 'relative',\n        top: 0,\n        width: '100%',\n        zIndex: 'auto',\n      });\n      this.$editable.css({\n        marginTop: '',\n      });\n    }\n  }\n\n  changeContainer(isFullscreen) {\n    if (isFullscreen) {\n      this.$toolbar.prependTo(this.$editor);\n    } else {\n      if (this.options.toolbarContainer) {\n        this.$toolbar.appendTo(this.options.toolbarContainer);\n      }\n    }\n    if (this.options.followingToolbar) {\n      this.followScroll();\n    }\n  }\n\n  updateFullscreen(isFullscreen) {\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-fullscreen'), isFullscreen);\n\n    this.changeContainer(isFullscreen);\n  }\n\n  updateCodeview(isCodeview) {\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-codeview'), isCodeview);\n    if (isCodeview) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  }\n\n  activate(isIncludeCodeview) {\n    let $btn = this.$toolbar.find('button');\n    if (!isIncludeCodeview) {\n      $btn = $btn.not('.note-codeview-keep');\n    }\n    this.ui.toggleBtn($btn, true);\n  }\n\n  deactivate(isIncludeCodeview) {\n    let $btn = this.$toolbar.find('button');\n    if (!isIncludeCodeview) {\n      $btn = $btn.not('.note-codeview-keep');\n    }\n    this.ui.toggleBtn($btn, false);\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\nimport func from '../core/func';\n\nconst MAILTO_PATTERN = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst TEL_PATTERN = /^(\\+?\\d{1,3}[\\s-]?)?(\\d{1,4})[\\s-]?(\\d{1,4})[\\s-]?(\\d{1,4})$/;\nconst URL_SCHEME_PATTERN = /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/;\n\nexport default class LinkDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n\n    context.memo('help.linkDialog.show', this.options.langInfo.help['linkDialog.show']);\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group\">',\n        `<label for=\"note-dialog-link-txt-${this.options.id}\" class=\"note-form-label\">${this.lang.link.textToDisplay}</label>`,\n        `<input id=\"note-dialog-link-txt-${this.options.id}\" class=\"note-link-text form-control note-form-control note-input\" type=\"text\"/>`,\n      '</div>',\n      '<div class=\"form-group note-form-group\">',\n        `<label for=\"note-dialog-link-url-${this.options.id}\" class=\"note-form-label\">${this.lang.link.url}</label>`,\n        `<input id=\"note-dialog-link-url-${this.options.id}\" class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\"/>`,\n      '</div>',\n      !this.options.disableLinkTarget\n        ? $('<div></div>').append(this.ui.checkbox({\n          className: 'sn-checkbox-open-in-new-window',\n          text: this.lang.link.openInNewWindow,\n          checked: true,\n        }).render()).html()\n        : '',\n    ].join('');\n\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-link-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.link.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      className: 'link-dialog',\n      title: this.lang.link.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  checkLinkUrl(linkUrl) {\n    if (MAILTO_PATTERN.test(linkUrl)) {\n      return 'mailto://' + linkUrl;\n    } else if (TEL_PATTERN.test(linkUrl)) {\n      return 'tel://' + linkUrl;\n    } else if (!URL_SCHEME_PATTERN.test(linkUrl)) {\n      return 'http://' + linkUrl;\n    }\n    return linkUrl;\n  }\n\n  onCheckLinkUrl($input) {\n    $input.on('blur', (event) => {\n      event.target.value =\n        event.target.value == '' ? '' : this.checkLinkUrl(event.target.value);\n    });\n  }\n\n  /**\n   * toggle update button\n   */\n  toggleLinkBtn($linkBtn, $linkText, $linkUrl) {\n    this.ui.toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\n  }\n\n  /**\n   * Show link dialog and set event handlers on dialog controls.\n   *\n   * @param {Object} linkInfo\n   * @return {Promise}\n   */\n  showLinkDialog(linkInfo) {\n    return $.Deferred((deferred) => {\n      const $linkText = this.$dialog.find('.note-link-text');\n      const $linkUrl = this.$dialog.find('.note-link-url');\n      const $linkBtn = this.$dialog.find('.note-link-btn');\n      const $openInNewWindow = this.$dialog\n        .find('.sn-checkbox-open-in-new-window input[type=checkbox]');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        // If no url was given and given text is valid URL then copy that into URL Field\n        if (!linkInfo.url && func.isValidUrl(linkInfo.text)) {\n          linkInfo.url = this.checkLinkUrl(linkInfo.text);\n        }\n\n        $linkText.on('input paste propertychange', () => {\n          // If linktext was modified by input events,\n          // cloning text from linkUrl will be stopped.\n          let text = $linkText.val();\n          let div = document.createElement('div');\n          div.innerText = text;\n          text = div.innerHTML;\n          linkInfo.text = text;\n          this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        }).val(linkInfo.text);\n\n        $linkUrl.on('input paste propertychange', () => {\n          // Display same text on `Text to display` as default\n          // when linktext has no text\n          if (!linkInfo.text) {\n            $linkText.val($linkUrl.val());\n          }\n          this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        }).val(linkInfo.url);\n\n        if (!env.isSupportTouch) {\n          $linkUrl.trigger('focus');\n        }\n\n        this.toggleLinkBtn($linkBtn, $linkText, $linkUrl);\n        this.bindEnterKey($linkUrl, $linkBtn);\n        this.bindEnterKey($linkText, $linkBtn);\n        this.onCheckLinkUrl($linkUrl);\n\n        const isNewWindowChecked = linkInfo.isNewWindow !== undefined\n          ? linkInfo.isNewWindow : this.context.options.linkTargetBlank;\n\n        $openInNewWindow.prop('checked', isNewWindowChecked);\n\n        $linkBtn.one('click', (event) => {\n          event.preventDefault();\n\n          deferred.resolve({\n            range: linkInfo.range,\n            url: $linkUrl.val(),\n            text: $linkText.val(),\n            isNewWindow: $openInNewWindow.is(':checked'),\n          });\n          this.ui.hideDialog(this.$dialog);\n        });\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        // detach events\n        $linkText.off();\n        $linkUrl.off();\n        $linkBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    }).promise();\n  }\n\n  /**\n   * @param {Object} layoutInfo\n   */\n  show() {\n    const linkInfo = this.context.invoke('editor.getLinkInfo');\n\n    this.context.invoke('editor.saveRange');\n    this.showLinkDialog(linkInfo).then((linkInfo) => {\n      this.context.invoke('editor.restoreRange');\n      this.context.invoke('editor.createLink', linkInfo);\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class LinkPopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n    this.events = {\n      'summernote.keyup summernote.mouseup summernote.change summernote.scroll': () => {\n        this.update();\n      },\n      'summernote.disable summernote.dialog.shown': () => {\n        this.hide();\n      },\n      'summernote.blur': (we, event) => {\n        if (event.originalEvent && event.originalEvent.relatedTarget) {\n          if (!this.$popover[0].contains(event.originalEvent.relatedTarget)) {\n            this.hide();\n          }\n        } else {\n          this.hide();\n        }\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.link);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-link-popover',\n      callback: ($node) => {\n        const $content = $node.find('.popover-content,.note-popover-content');\n        $content.prepend('<span><a target=\"_blank\"></a>&nbsp;</span>');\n      },\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.link);\n\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update() {\n    // Prevent focusing on editable when invoke('code') is executed\n    if (!this.context.invoke('editor.hasFocus')) {\n      this.hide();\n      return;\n    }\n\n    const rng = this.context.invoke('editor.getLastRange');\n    if (rng.isCollapsed() && rng.isOnAnchor()) {\n      const anchor = dom.ancestor(rng.sc, dom.isAnchor);\n      const href = $(anchor).attr('href');\n      this.$popover.find('a').attr('href', href).text(href);\n\n      const pos = dom.posFromPlaceholder(anchor);\n      const containerOffset = $(this.options.container).offset();\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\n\nexport default class ImageDialog {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    let imageLimitation = '';\n    if (this.options.maximumImageFileSize) {\n      const unit = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024));\n      const readableSize = (this.options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 +\n                         ' ' + ' KMGTP'[unit] + 'B';\n      imageLimitation = `<small>${this.lang.image.maximumFileSize + ' : ' + readableSize}</small>`;\n    }\n\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group note-group-select-from-files\">',\n        '<label for=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.selectFromFiles + '</label>',\n        '<input id=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-image-input form-control-file note-form-control note-input\" ',\n        ' type=\"file\" name=\"files\" accept=\"'+this.options.acceptImageFileTypes+'\" multiple=\"multiple\"/>',\n        imageLimitation,\n      '</div>',\n      '<div class=\"form-group note-group-image-url\">',\n        '<label for=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.url + '</label>',\n        '<input id=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>',\n      '</div>',\n    ].join('');\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-image-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.image.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.image.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  show() {\n    this.context.invoke('editor.saveRange');\n    this.showImageDialog().then((data) => {\n      // [workaround] hide dialog before restore range for IE range focus\n      this.ui.hideDialog(this.$dialog);\n      this.context.invoke('editor.restoreRange');\n\n      if (typeof data === 'string') { // image url\n        // If onImageLinkInsert set,\n        if (this.options.callbacks.onImageLinkInsert) {\n          this.context.triggerEvent('image.link.insert', data);\n        } else {\n          this.context.invoke('editor.insertImage', data);\n        }\n      } else { // array of files\n        this.context.invoke('editor.insertImagesOrCallback', data);\n      }\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n\n  /**\n   * show image dialog\n   *\n   * @param {jQuery} $dialog\n   * @return {Promise}\n   */\n  showImageDialog() {\n    return $.Deferred((deferred) => {\n      const $imageInput = this.$dialog.find('.note-image-input');\n      const $imageUrl = this.$dialog.find('.note-image-url');\n      const $imageBtn = this.$dialog.find('.note-image-btn');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        // Cloning imageInput to clear element.\n        $imageInput.replaceWith($imageInput.clone().on('change', (event) => {\n          deferred.resolve(event.target.files || event.target.value);\n        }).val(''));\n\n        $imageUrl.on('input paste propertychange', () => {\n          this.ui.toggleBtn($imageBtn, $imageUrl.val());\n        }).val('');\n\n        if (!env.isSupportTouch) {\n          $imageUrl.trigger('focus');\n        }\n\n        $imageBtn.on('click', (event) => {\n          event.preventDefault();\n          deferred.resolve($imageUrl.val());\n        });\n\n        this.bindEnterKey($imageUrl, $imageBtn);\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        $imageInput.off();\n        $imageUrl.off();\n        $imageBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\n/**\n * Image popover module\n *  mouse events that show/hide popover will be handled by Handle.js.\n *  Handle.js will receive the events and invoke 'imagePopover.update'.\n */\nexport default class ImagePopover {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n\n    this.editable = context.layoutInfo.editable[0];\n    this.options = context.options;\n\n    this.events = {\n      'summernote.disable summernote.dialog.shown': () => {\n        this.hide();\n      },\n      'summernote.blur': (we, event) => {\n        if (event.originalEvent && event.originalEvent.relatedTarget) {\n          if (!this.$popover[0].contains(event.originalEvent.relatedTarget)) {\n            this.hide();\n          }\n        } else {\n          this.hide();\n        }\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.image);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-image-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n    this.context.invoke('buttons.build', $content, this.options.popover.image);\n\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(target, event) {\n    if (dom.isImg(target)) {\n      const position = $(target).offset();\n      const containerOffset = $(this.options.container).offset();\n      let pos = {};\n      if (this.options.popatmouse) {\n        pos.left = event.pageX - 20;\n        pos.top = event.pageY;\n      } else {\n        pos = position;\n      }\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\n\nexport default class TablePopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n    this.events = {\n      'summernote.mousedown': (we, event) => {\n        this.update(event.target);\n      },\n      'summernote.keyup summernote.scroll summernote.change': () => {\n        this.update();\n      },\n      'summernote.disable summernote.dialog.shown': () => {\n        this.hide();\n      },\n      'summernote.blur': (we, event) => {\n        if (event.originalEvent && event.originalEvent.relatedTarget) {\n          if (!this.$popover[0].contains(event.originalEvent.relatedTarget)) {\n            this.hide();\n          }\n        } else {\n          this.hide();\n        }\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return !lists.isEmpty(this.options.popover.table);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-table-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.table);\n\n    // [workaround] Disable Firefox's default table editor\n    if (env.isFF) {\n      document.execCommand('enableInlineTableEditing', false, false);\n    }\n\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(target) {\n    if (this.context.isDisabled()) {\n      return false;\n    }\n\n    const isCell = dom.isCell(target) || dom.isCell(target?.parentElement);\n\n    if (isCell) {\n      const pos = dom.posFromPlaceholder(target);\n      const containerOffset = $(this.options.container).offset();\n      pos.top -= containerOffset.top;\n      pos.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top,\n      });\n    } else {\n      this.hide();\n    }\n\n    return isCell;\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\nimport key from '../core/key';\n\nexport default class VideoDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<div class=\"form-group note-form-group row-fluid\">',\n        `<label for=\"note-dialog-video-url-${this.options.id}\" class=\"note-form-label\">${this.lang.video.url} <small class=\"text-muted\">${this.lang.video.providers}</small></label>`,\n        `<input id=\"note-dialog-video-url-${this.options.id}\" class=\"note-video-url form-control note-form-control note-input\" type=\"text\"/>`,\n      '</div>',\n    ].join('');\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-video-btn';\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.video.insert}\" disabled>`;\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.video.insert,\n      fade: this.options.dialogsFade,\n      body: body,\n      footer: footer,\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  bindEnterKey($input, $btn) {\n    $input.on('keypress', (event) => {\n      if (event.keyCode === key.code.ENTER) {\n        event.preventDefault();\n        $btn.trigger('click');\n      }\n    });\n  }\n\n  createVideoNode(url) {\n    // video url patterns(youtube, instagram, vimeo, dailymotion, youku, peertube, mp4, ogg, webm)\n    const ytRegExp = /(?:youtu\\.be\\/|youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=|shorts\\/|live\\/))([^&\\n?]+)(?:.*[?&]t=([^&\\n]+))?.*/;\n    const ytRegExpForStart = /^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/;\n    const ytMatch = url.match(ytRegExp);\n\n    const gdRegExp = /(?:\\.|\\/\\/)drive\\.google\\.com\\/file\\/d\\/(.[a-zA-Z0-9_-]*)\\/view/;\n    const gdMatch = url.match(gdRegExp);\n\n    const igRegExp = /(?:www\\.|\\/\\/)instagram\\.com\\/(reel|p)\\/(.[a-zA-Z0-9_-]*)/;\n    const igMatch = url.match(igRegExp);\n\n    const vRegExp = /\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/;\n    const vMatch = url.match(vRegExp);\n\n    const vimRegExp = /\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/;\n    const vimMatch = url.match(vimRegExp);\n\n    const dmRegExp = /.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/;\n    const dmMatch = url.match(dmRegExp);\n\n    const youkuRegExp = /\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/;\n    const youkuMatch = url.match(youkuRegExp);\n\n    const peerTubeRegExp =/\\/\\/(.*)\\/videos\\/watch\\/([^?]*)(?:\\?(?:start=(\\w*))?(?:&stop=(\\w*))?(?:&loop=([10]))?(?:&autoplay=([10]))?(?:&muted=([10]))?)?/;\n    const peerTubeMatch = url.match(peerTubeRegExp);\n\n    const qqRegExp = /\\/\\/v\\.qq\\.com.*?vid=(.+)/;\n    const qqMatch = url.match(qqRegExp);\n\n    const qqRegExp2 = /\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/;\n    const qqMatch2 = url.match(qqRegExp2);\n\n    const mp4RegExp = /^.+.(mp4|m4v)$/;\n    const mp4Match = url.match(mp4RegExp);\n\n    const oggRegExp = /^.+.(ogg|ogv)$/;\n    const oggMatch = url.match(oggRegExp);\n\n    const webmRegExp = /^.+.(webm)$/;\n    const webmMatch = url.match(webmRegExp);\n\n    const fbRegExp = /(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/;\n    const fbMatch = url.match(fbRegExp);\n\n    let $video;\n    if (ytMatch && ytMatch[1].length === 11) {\n      const youtubeId = ytMatch[1];\n      var start = 0;\n      if (typeof ytMatch[2] !== 'undefined') {\n        const ytMatchForStart = ytMatch[2].match(ytRegExpForStart);\n        if (ytMatchForStart) {\n          for (var n = [3600, 60, 1], i = 0, r = n.length; i < r; i++) {\n            start += (typeof ytMatchForStart[i + 1] !== 'undefined' ? n[i] * parseInt(ytMatchForStart[i + 1], 10) : 0);\n          }\n        }else{\n          start = parseInt(ytMatch[2], 10);\n        }\n      }\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', '//www.youtube.com/embed/' + youtubeId + (start > 0 ? '?start=' + start : ''))\n        .attr('width', '640').attr('height', '360');\n    } else if (gdMatch && gdMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', 'https://drive.google.com/file/d/' + gdMatch[1] + '/preview')\n        .attr('width', '640').attr('height', '480');\n    } else if (igMatch && igMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', 'https://instagram.com/p/' + igMatch[2] + '/embed/')\n        .attr('width', '612').attr('height', '710')\n        .attr('scrolling', 'no')\n        .attr('allowtransparency', 'true');\n    } else if (vMatch && vMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', vMatch[0] + '/embed/simple')\n        .attr('width', '600').attr('height', '600')\n        .attr('class', 'vine-embed');\n    } else if (vimMatch && vimMatch[3].length) {\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('src', '//player.vimeo.com/video/' + vimMatch[3])\n        .attr('width', '640').attr('height', '360');\n    } else if (dmMatch && dmMatch[2].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', '//www.dailymotion.com/embed/video/' + dmMatch[2])\n        .attr('width', '640').attr('height', '360');\n    } else if (youkuMatch && youkuMatch[1].length) {\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('height', '498')\n        .attr('width', '510')\n        .attr('src', '//player.youku.com/embed/' + youkuMatch[1]);\n    } else if (peerTubeMatch && peerTubeMatch[0].length){\n      var begin = 0;\n      if (peerTubeMatch[2] !== 'undefined') begin = peerTubeMatch[2];\n      var end =0;\n      if (peerTubeMatch[3] !== 'undefined') end = peerTubeMatch[3];\n      var loop = 0;\n      if (peerTubeMatch[4] !== 'undefined') loop = peerTubeMatch[4];\n      var autoplay = 0;\n      if (peerTubeMatch[5] !== 'undefined') autoplay = peerTubeMatch[5];\n      var muted = 0;\n      if (peerTubeMatch[6] !== 'undefined') muted = peerTubeMatch[6];\n      $video = $('<iframe allowfullscreen sandbox=\"allow-same-origin allow-scripts allow-popups\">')\n        .attr('frameborder', 0)\n        .attr('src', '//'+ peerTubeMatch[1] +'/videos/embed/' + peerTubeMatch[2]+\"?loop=\"+loop\n      +\"&autoplay=\"+autoplay+\"&muted=\"+muted +(begin > 0 ? '&start=' + begin : '')+(end > 0 ? '&end=' + start : ''))\n        .attr('width', '560')\n        .attr('height', '315');\n    }else if ((qqMatch && qqMatch[1].length) || (qqMatch2 && qqMatch2[2].length)) {\n      const vid = ((qqMatch && qqMatch[1].length) ? qqMatch[1] : qqMatch2[2]);\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\n        .attr('frameborder', 0)\n        .attr('height', '310')\n        .attr('width', '500')\n        .attr('src', 'https://v.qq.com/txp/iframe/player.html?vid=' + vid + '&amp;auto=0');\n    } else if (mp4Match || oggMatch || webmMatch) {\n      $video = $('<video controls>')\n        .attr('src', url)\n        .attr('width', '640').attr('height', '360');\n    } else if (fbMatch && fbMatch[0].length) {\n      $video = $('<iframe>')\n        .attr('frameborder', 0)\n        .attr('src', 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(fbMatch[0]) + '&show_text=0&width=560')\n        .attr('width', '560').attr('height', '301')\n        .attr('scrolling', 'no')\n        .attr('allowtransparency', 'true');\n    } else {\n      // this is not a known video link. Now what, Cat? Now what?\n      return false;\n    }\n\n    $video.addClass('note-video-clip');\n\n    return $video[0];\n  }\n\n  show() {\n    const text = this.context.invoke('editor.getSelectedText');\n    this.context.invoke('editor.saveRange');\n    this.showVideoDialog(text).then((url) => {\n      // [workaround] hide dialog before restore range for IE range focus\n      this.ui.hideDialog(this.$dialog);\n      this.context.invoke('editor.restoreRange');\n\n      // build node\n      const $node = this.createVideoNode(url);\n\n      if ($node) {\n        // insert video node\n        this.context.invoke('editor.insertNode', $node);\n      }\n    }).fail(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n\n  /**\n   * show video dialog\n   *\n   * @param {jQuery} $dialog\n   * @return {Promise}\n   */\n  showVideoDialog(/* text */) {\n    return $.Deferred((deferred) => {\n      const $videoUrl = this.$dialog.find('.note-video-url');\n      const $videoBtn = this.$dialog.find('.note-video-btn');\n\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n\n        $videoUrl.on('input paste propertychange', () => {\n          this.ui.toggleBtn($videoBtn, $videoUrl.val());\n        });\n\n        if (!env.isSupportTouch) {\n          $videoUrl.trigger('focus');\n        }\n\n        $videoBtn.on('click', (event) => {\n          event.preventDefault();\n          deferred.resolve($videoUrl.val());\n        });\n\n        this.bindEnterKey($videoUrl, $videoBtn);\n      });\n\n      this.ui.onDialogHidden(this.$dialog, () => {\n        $videoUrl.off();\n        $videoBtn.off();\n\n        if (deferred.state() === 'pending') {\n          deferred.reject();\n        }\n      });\n\n      this.ui.showDialog(this.$dialog);\n    });\n  }\n}\n","import $ from 'jquery';\nimport env from '../core/env';\n\nexport default class HelpDialog {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$body = $(document.body);\n    this.$editor = context.layoutInfo.editor;\n    this.options = context.options;\n    this.lang = this.options.langInfo;\n  }\n\n  initialize() {\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\n    const body = [\n      '<p class=\"text-center\">',\n        '<a href=\"http://summernote.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Summernote @@VERSION@@</a> · ',\n        '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\" rel=\"noopener noreferrer\">Project</a> · ',\n        '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>',\n      '</p>',\n    ].join('');\n\n    this.$dialog = this.ui.dialog({\n      title: this.lang.options.help,\n      fade: this.options.dialogsFade,\n      body: this.createShortcutList(),\n      footer: body,\n      callback: ($node) => {\n        $node.find('.modal-body,.note-modal-body').css({\n          'max-height': 300,\n          'overflow': 'scroll',\n        });\n      },\n    }).render().appendTo($container);\n  }\n\n  destroy() {\n    this.ui.hideDialog(this.$dialog);\n    this.$dialog.remove();\n  }\n\n  createShortcutList() {\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\n    return Object.keys(keyMap).map((key) => {\n      const command = keyMap[key];\n      const $row = $('<div><div class=\"help-list-item\"></div></div>');\n      $row.append($('<label><kbd>' + key + '</kdb></label>').css({\n        'width': 180,\n        'margin-right': 10,\n      })).append($('<span></span>').html(this.context.memo('help.' + command) || command));\n      return $row.html();\n    }).join('');\n  }\n\n  /**\n   * show help dialog\n   *\n   * @return {Promise}\n   */\n  showHelpDialog() {\n    return $.Deferred((deferred) => {\n      this.ui.onDialogShown(this.$dialog, () => {\n        this.context.triggerEvent('dialog.shown');\n        deferred.resolve();\n      });\n      this.ui.showDialog(this.$dialog);\n    }).promise();\n  }\n\n  show() {\n    this.context.invoke('editor.saveRange');\n    this.showHelpDialog().then(() => {\n      this.context.invoke('editor.restoreRange');\n    });\n  }\n}\n","import $ from 'jquery';\nimport lists from '../core/lists';\nimport func from '../core/func';\n\nconst AIRMODE_POPOVER_X_OFFSET = -5;\nconst AIRMODE_POPOVER_Y_OFFSET = 5;\n\nexport default class AirPopover {\n  constructor(context) {\n    this.context = context;\n    this.ui = $.summernote.ui;\n    this.options = context.options;\n\n    this.hidable = true;\n    this.onContextmenu = false;\n    this.pageX = null;\n    this.pageY = null;\n\n    this.events = {\n      'summernote.contextmenu': (event) => {\n        if (this.options.editing) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.onContextmenu = true;\n          this.update(true);\n        }\n      },\n      'summernote.mousedown': (we, event) => {\n        this.pageX = event.pageX;\n        this.pageY = event.pageY;\n      },\n      'summernote.keyup summernote.mouseup summernote.scroll': (we, event) => {\n        if (this.options.editing && !this.onContextmenu) {\n          if (event.type == 'keyup') {\n            let range = this.context.invoke('editor.getLastRange');\n            let wordRange = range.getWordRange();\n            const bnd = func.rect2bnd(lists.last(wordRange.getClientRects()));\n            this.pageX = bnd.left;\n            this.pageY = bnd.top;\n          } else {\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n          }\n          this.update();\n        }\n        this.onContextmenu = false;\n      },\n      'summernote.disable summernote.change summernote.dialog.shown summernote.blur': () => {\n        this.hide();\n      },\n      'summernote.focusout': () => {\n        if (!this.$popover.is(':active,:focus')) {\n          this.hide();\n        }\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return this.options.airMode && !lists.isEmpty(this.options.popover.air);\n  }\n\n  initialize() {\n    this.$popover = this.ui.popover({\n      className: 'note-air-popover',\n    }).render().appendTo(this.options.container);\n    const $content = this.$popover.find('.popover-content');\n\n    this.context.invoke('buttons.build', $content, this.options.popover.air);\n\n    // disable hiding this popover preemptively by 'summernote.blur' event.\n    this.$popover.on('mousedown', () => { this.hidable = false; });\n    // (re-)enable hiding after 'summernote.blur' has been handled (aka. ignored).\n    this.$popover.on('mouseup', () => { this.hidable = true; });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  update(forcelyOpen) {\n    const styleInfo = this.context.invoke('editor.currentStyle');\n    if (styleInfo.range && (!styleInfo.range.isCollapsed() || forcelyOpen)) {\n      let rect = {\n        left: this.pageX,\n        top: this.pageY,\n      };\n\n      const containerOffset = $(this.options.container).offset();\n      rect.top -= containerOffset.top;\n      rect.left -= containerOffset.left;\n\n      this.$popover.css({\n        display: 'block',\n        left: Math.max(rect.left, 0) + AIRMODE_POPOVER_X_OFFSET,\n        top: rect.top + AIRMODE_POPOVER_Y_OFFSET,\n      });\n      this.context.invoke('buttons.updateCurrentStyle', this.$popover);\n    } else {\n      this.hide();\n    }\n  }\n\n  updateCodeview(isCodeview) {\n    this.ui.toggleBtnActive(this.$popover.find('.btn-codeview'), isCodeview);\n    if (isCodeview) {\n      this.hide();\n    }\n  }\n\n  hide() {\n    if (this.hidable) {\n      this.$popover.hide();\n    }\n  }\n}\n","import $ from 'jquery';\nimport func from '../core/func';\nimport lists from '../core/lists';\nimport dom from '../core/dom';\nimport range from '../core/range';\nimport key from '../core/key';\n\nconst POPOVER_DIST = 5;\n\nexport default class HintPopover {\n  constructor(context) {\n    this.context = context;\n\n    this.ui = $.summernote.ui;\n    this.$editable = context.layoutInfo.editable;\n    this.options = context.options;\n    this.hint = this.options.hint || [];\n    this.direction = this.options.hintDirection || 'bottom';\n    this.hints = Array.isArray(this.hint) ? this.hint : [this.hint];\n\n    this.events = {\n      'summernote.keyup': (we, event) => {\n        if (!event.isDefaultPrevented()) {\n          this.handleKeyup(event);\n        }\n      },\n      'summernote.keydown': (we, event) => {\n        this.handleKeydown(event);\n      },\n      'summernote.disable summernote.dialog.shown summernote.blur': () => {\n        this.hide();\n      },\n    };\n  }\n\n  shouldInitialize() {\n    return this.hints.length > 0;\n  }\n\n  initialize() {\n    this.lastWordRange = null;\n    this.matchingWord = null;\n    this.$popover = this.ui.popover({\n      className: 'note-hint-popover',\n      hideArrow: true,\n      direction: '',\n    }).render().appendTo(this.options.container);\n\n    this.$popover.hide();\n    this.$content = this.$popover.find('.popover-content,.note-popover-content');\n    this.$content.on('click', '.note-hint-item', (event) => {\n      this.$content.find('.active').removeClass('active');\n      $(event.currentTarget).addClass('active');\n      this.replace();\n    });\n\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\n  }\n\n  destroy() {\n    this.$popover.remove();\n  }\n\n  selectItem($item) {\n    this.$content.find('.active').removeClass('active');\n    $item.addClass('active');\n\n    this.$content[0].scrollTop = $item[0].offsetTop - (this.$content.innerHeight() / 2);\n  }\n\n  moveDown() {\n    const $current = this.$content.find('.note-hint-item.active');\n    const $next = $current.next();\n\n    if ($next.length) {\n      this.selectItem($next);\n    } else {\n      let $nextGroup = $current.parent().next();\n\n      if (!$nextGroup.length) {\n        $nextGroup = this.$content.find('.note-hint-group').first();\n      }\n\n      this.selectItem($nextGroup.find('.note-hint-item').first());\n    }\n  }\n\n  moveUp() {\n    const $current = this.$content.find('.note-hint-item.active');\n    const $prev = $current.prev();\n\n    if ($prev.length) {\n      this.selectItem($prev);\n    } else {\n      let $prevGroup = $current.parent().prev();\n\n      if (!$prevGroup.length) {\n        $prevGroup = this.$content.find('.note-hint-group').last();\n      }\n\n      this.selectItem($prevGroup.find('.note-hint-item').last());\n    }\n  }\n\n  replace() {\n    const $item = this.$content.find('.note-hint-item.active');\n\n    if ($item.length) {\n      var node = this.nodeFromItem($item);\n      // If matchingWord length = 0 -> capture OK / open hint / but as mention capture \"\" (\\w*)\n      if (this.matchingWord !== null && this.matchingWord.length === 0) {\n        this.lastWordRange.so = this.lastWordRange.eo;\n      // Else si > 0 and normal case -> adjust range \"before\" for correct position of insertion\n      } else if (this.matchingWord !== null && this.matchingWord.length > 0 && !this.lastWordRange.isCollapsed()) {\n        let rangeCompute = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;\n        if (rangeCompute > 0) {\n          this.lastWordRange.so += rangeCompute;\n        }\n      }\n      this.lastWordRange.insertNode(node);\n\n      if (this.options.hintSelect === 'next') {\n        var blank = document.createTextNode('');\n        $(node).after(blank);\n        range.createFromNodeBefore(blank).select();\n      } else {\n        range.createFromNodeAfter(node).select();\n      }\n\n      this.lastWordRange = null;\n      this.hide();\n      this.context.invoke('editor.focus');\n      this.context.triggerEvent('change', this.$editable.html(), this.$editable);\n    }\n  }\n\n  nodeFromItem($item) {\n    const hint = this.hints[$item.data('index')];\n    const item = $item.data('item');\n    let node = hint.content ? hint.content(item) : item;\n    if (typeof node === 'string') {\n      node = dom.createText(node);\n    }\n    return node;\n  }\n\n  createItemTemplates(hintIdx, items) {\n    const hint = this.hints[hintIdx];\n    return items.map((item , idx) => {\n      const $item = $('<div class=\"note-hint-item\"></div>');\n      $item.append(hint.template ? hint.template(item) : item + '');\n      $item.data({\n        'index': hintIdx,\n        'item': item,\n      });\n\n      if (hintIdx === 0 && idx === 0) {\n        $item.addClass('active');\n      }\n\n      return $item;\n    });\n  }\n\n  handleKeydown(event) {\n    if (!this.$popover.is(':visible')) {\n      return;\n    }\n\n    if (event.keyCode === key.code.ENTER) {\n      event.preventDefault();\n      this.replace();\n    } else if (event.keyCode === key.code.UP) {\n      event.preventDefault();\n      this.moveUp();\n    } else if (event.keyCode === key.code.DOWN) {\n      event.preventDefault();\n      this.moveDown();\n    }\n  }\n\n  searchKeyword(index, keyword, callback) {\n    const hint = this.hints[index];\n    if (hint && hint.match.test(keyword) && hint.search) {\n      const matches = hint.match.exec(keyword);\n      this.matchingWord = matches[0];\n      hint.search(matches[1], callback);\n    } else {\n      callback();\n    }\n  }\n\n  createGroup(idx, keyword) {\n    const $group = $('<div class=\"note-hint-group note-hint-group-' + idx + '\"></div>');\n    this.searchKeyword(idx, keyword, (items) => {\n      items = items || [];\n      if (items.length) {\n        $group.html(this.createItemTemplates(idx, items));\n        this.show();\n      }\n    });\n\n    return $group;\n  }\n\n  handleKeyup(event) {\n    if (!lists.contains([key.code.ENTER, key.code.UP, key.code.DOWN], event.keyCode)) {\n      let range = this.context.invoke('editor.getLastRange');\n      let wordRange, keyword;\n      if (this.options.hintMode === 'words') {\n        wordRange = range.getWordsRange(range);\n        keyword = wordRange.toString();\n\n        this.hints.forEach((hint) => {\n          if (hint.match.test(keyword)) {\n            wordRange = range.getWordsMatchRange(hint.match);\n            return false;\n          }\n        });\n\n        if (!wordRange) {\n          this.hide();\n          return;\n        }\n\n        keyword = wordRange.toString();\n      } else {\n        wordRange = range.getWordRange();\n        keyword = wordRange.toString();\n      }\n\n      if (this.hints.length && keyword) {\n        this.$content.empty();\n\n        const bnd = func.rect2bnd(lists.last(wordRange.getClientRects()));\n        const containerOffset = $(this.options.container).offset();\n        if (bnd) {\n          bnd.top -= containerOffset.top;\n          bnd.left -= containerOffset.left;\n\n          this.$popover.hide();\n          this.lastWordRange = wordRange;\n          this.hints.forEach((hint, idx) => {\n            if (hint.match.test(keyword)) {\n              this.createGroup(idx, keyword).appendTo(this.$content);\n            }\n          });\n          // select first .note-hint-item\n          this.$content.find('.note-hint-item').first().addClass('active');\n\n          // set position for popover after group is created\n          if (this.direction === 'top') {\n            this.$popover.css({\n              left: bnd.left,\n              top: bnd.top - this.$popover.outerHeight() - POPOVER_DIST,\n            });\n          } else {\n            this.$popover.css({\n              left: bnd.left,\n              top: bnd.top + bnd.height + POPOVER_DIST,\n            });\n          }\n        }\n      } else {\n        this.hide();\n      }\n    }\n  }\n\n  show() {\n    this.$popover.show();\n  }\n\n  hide() {\n    this.$popover.hide();\n  }\n}\n","import $ from 'jquery';\nimport './summernote-en-US';\nimport './summernote';\nimport dom from './core/dom';\nimport range from './core/range';\nimport lists from './core/lists';\nimport Editor from './module/Editor';\nimport Clipboard from './module/Clipboard';\nimport Dropzone from './module/Dropzone';\nimport Codeview from './module/Codeview';\nimport Statusbar from './module/Statusbar';\nimport Fullscreen from './module/Fullscreen';\nimport Handle from './module/Handle';\nimport AutoLink from './module/AutoLink';\nimport AutoSync from './module/AutoSync';\nimport AutoReplace from './module/AutoReplace';\nimport Placeholder from './module/Placeholder';\nimport Buttons from './module/Buttons';\nimport Toolbar from './module/Toolbar';\nimport LinkDialog from './module/LinkDialog';\nimport LinkPopover from './module/LinkPopover';\nimport ImageDialog from './module/ImageDialog';\nimport ImagePopover from './module/ImagePopover';\nimport TablePopover from './module/TablePopover';\nimport VideoDialog from './module/VideoDialog';\nimport HelpDialog from './module/HelpDialog';\nimport AirPopover from './module/AirPopover';\nimport HintPopover from './module/HintPopover';\n\n$.summernote = $.extend($.summernote, {\n  version: '@@VERSION@@',\n  plugins: {},\n\n  dom: dom,\n  range: range,\n  lists: lists,\n\n  options: {\n    langInfo: $.summernote.lang['en-US'],\n    editing: true,\n    modules: {\n      'editor': Editor,\n      'clipboard': Clipboard,\n      'dropzone': Dropzone,\n      'codeview': Codeview,\n      'statusbar': Statusbar,\n      'fullscreen': Fullscreen,\n      'handle': Handle,\n      // FIXME: HintPopover must be front of autolink\n      //  - Script error about range when Enter key is pressed on hint popover\n      'hintPopover': HintPopover,\n      'autoLink': AutoLink,\n      'autoSync': AutoSync,\n      'autoReplace': AutoReplace,\n      'placeholder': Placeholder,\n      'buttons': Buttons,\n      'toolbar': Toolbar,\n      'linkDialog': LinkDialog,\n      'linkPopover': LinkPopover,\n      'imageDialog': ImageDialog,\n      'imagePopover': ImagePopover,\n      'tablePopover': TablePopover,\n      'videoDialog': VideoDialog,\n      'helpDialog': HelpDialog,\n      'airPopover': AirPopover,\n    },\n\n    buttons: {},\n\n    lang: 'en-US',\n\n    followingToolbar: false,\n    toolbarPosition: 'top',\n    otherStaticBar: '',\n\n    // toolbar\n    codeviewKeepButton: false,\n    toolbar: [\n      ['style', ['style']],\n      ['font', ['bold', 'underline', 'clear']],\n      ['fontname', ['fontname']],\n      ['color', ['color']],\n      ['para', ['ul', 'ol', 'paragraph']],\n      ['table', ['table']],\n      ['insert', ['link', 'picture', 'video']],\n      ['view', ['fullscreen', 'codeview', 'help']],\n    ],\n\n    // popover\n    popatmouse: true,\n    popover: {\n      image: [\n        ['resize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\n        ['float', ['floatLeft', 'floatRight', 'floatNone']],\n        ['remove', ['removeMedia']],\n      ],\n      link: [\n        ['link', ['linkDialogShow', 'unlink']],\n      ],\n      table: [\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\n      ],\n      air: [\n        ['color', ['color']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['para', ['ul', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'picture']],\n        ['view', ['fullscreen', 'codeview']],\n      ],\n    },\n\n    // link options\n    linkAddNoReferrer: false,\n    addLinkNoOpener: false,\n\n    // air mode: inline editor\n    airMode: false,\n    overrideContextMenu: false, // TBD\n\n    width: null,\n    height: null,\n    linkTargetBlank: true,\n\n    focus: false,\n    tabDisable: false,\n    tabSize: 4,\n    styleWithCSS: false,\n    shortcuts: true,\n    textareaAutoSync: true,\n    tooltip: 'auto',\n    container: null,\n    maxTextLength: 0,\n    blockquoteBreakingLevel: 2,\n    spellCheck: true,\n    disableGrammar: false,\n    placeholder: null,\n    inheritPlaceholder: false,\n    // TODO: need to be documented\n    recordEveryKeystroke: false,\n    historyLimit: 200,\n\n    // TODO: need to be documented\n    showDomainOnlyForAutolink: false,\n\n    // TODO: need to be documented\n    hintMode: 'word',\n    hintSelect: 'after',\n    hintDirection: 'bottom',\n\n    styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    fontNames: [\n      'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\n      'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\n      'Tahoma', 'Times New Roman', 'Verdana',\n    ],\n    fontNamesIgnoreCheck: [],\n    addDefaultFonts: true,\n\n    fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n\n    fontSizeUnits: ['px', 'pt'],\n\n    // pallete colors(n x n)\n    colors: [\n      ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],\n      ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],\n      ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'],\n      ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'],\n      ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'],\n      ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'],\n      ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'],\n      ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031'],\n    ],\n\n    // http://chir.ag/projects/name-that-color/\n    colorsName: [\n      ['Black', 'Tundora', 'Dove Gray', 'Star Dust', 'Pale Slate', 'Gallery', 'Alabaster', 'White'],\n      ['Red', 'Orange Peel', 'Yellow', 'Green', 'Cyan', 'Blue', 'Electric Violet', 'Magenta'],\n      ['Azalea', 'Karry', 'Egg White', 'Zanah', 'Botticelli', 'Tropical Blue', 'Mischka', 'Twilight'],\n      ['Tonys Pink', 'Peach Orange', 'Cream Brulee', 'Sprout', 'Casper', 'Perano', 'Cold Purple', 'Careys Pink'],\n      ['Mandy', 'Rajah', 'Dandelion', 'Olivine', 'Gulf Stream', 'Viking', 'Blue Marguerite', 'Puce'],\n      ['Guardsman Red', 'Fire Bush', 'Golden Dream', 'Chelsea Cucumber', 'Smalt Blue', 'Boston Blue', 'Butterfly Bush', 'Cadillac'],\n      ['Sangria', 'Mai Tai', 'Buddha Gold', 'Forest Green', 'Eden', 'Venice Blue', 'Meteorite', 'Claret'],\n      ['Rosewood', 'Cinnamon', 'Olive', 'Parsley', 'Tiber', 'Midnight Blue', 'Valentino', 'Loulou'],\n    ],\n\n    colorButton: {\n      foreColor: '#000000',\n      backColor: '#FFFF00',\n    },\n\n    lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\n\n    tableClassName: 'table table-bordered',\n\n    insertTableMaxSize: {\n      col: 10,\n      row: 10,\n    },\n\n    // By default, dialogs are attached in container.\n    dialogsInBody: false,\n    dialogsFade: false,\n\n    maximumImageFileSize: null,\n    acceptImageFileTypes: \"image/*\",\n\n    allowClipboardImagePasting: true,\n\n    callbacks: {\n      onBeforeCommand: null,\n      onBlur: null,\n      onBlurCodeview: null,\n      onChange: null,\n      onChangeCodeview: null,\n      onDialogShown: null,\n      onEnter: null,\n      onFocus: null,\n      onImageLinkInsert: null,\n      onImageUpload: null,\n      onImageUploadError: null,\n      onInit: null,\n      onKeydown: null,\n      onKeyup: null,\n      onMousedown: null,\n      onMouseup: null,\n      onPaste: null,\n      onScroll: null,\n    },\n\n    codemirror: {\n      mode: 'text/html',\n      htmlMode: true,\n      lineNumbers: true,\n    },\n\n    codeviewFilter: true,\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\n    codeviewIframeFilter: true,\n    codeviewIframeWhitelistSrc: [],\n    codeviewIframeWhitelistSrcBase: [\n      'www.youtube.com',\n      'www.youtube-nocookie.com',\n      'www.facebook.com',\n      'vine.co',\n      'instagram.com',\n      'player.vimeo.com',\n      'www.dailymotion.com',\n      'player.youku.com',\n      'jumpingbean.tv',\n      'v.qq.com',\n    ],\n\n    keyMap: {\n      pc: {\n        'ESC': 'escape',\n        'ENTER': 'insertParagraph',\n        'CTRL+Z': 'undo',\n        'CTRL+Y': 'redo',\n        'TAB': 'tab',\n        'SHIFT+TAB': 'untab',\n        'CTRL+B': 'bold',\n        'CTRL+I': 'italic',\n        'CTRL+U': 'underline',\n        'CTRL+SHIFT+S': 'strikethrough',\n        'CTRL+BACKSLASH': 'removeFormat',\n        'CTRL+SHIFT+L': 'justifyLeft',\n        'CTRL+SHIFT+E': 'justifyCenter',\n        'CTRL+SHIFT+R': 'justifyRight',\n        'CTRL+SHIFT+J': 'justifyFull',\n        'CTRL+SHIFT+NUM7': 'insertUnorderedList',\n        'CTRL+SHIFT+NUM8': 'insertOrderedList',\n        'CTRL+LEFTBRACKET': 'outdent',\n        'CTRL+RIGHTBRACKET': 'indent',\n        'CTRL+NUM0': 'formatPara',\n        'CTRL+NUM1': 'formatH1',\n        'CTRL+NUM2': 'formatH2',\n        'CTRL+NUM3': 'formatH3',\n        'CTRL+NUM4': 'formatH4',\n        'CTRL+NUM5': 'formatH5',\n        'CTRL+NUM6': 'formatH6',\n        'CTRL+ENTER': 'insertHorizontalRule',\n        'CTRL+K': 'linkDialog.show',\n      },\n\n      mac: {\n        'ESC': 'escape',\n        'ENTER': 'insertParagraph',\n        'CMD+Z': 'undo',\n        'CMD+SHIFT+Z': 'redo',\n        'TAB': 'tab',\n        'SHIFT+TAB': 'untab',\n        'CMD+B': 'bold',\n        'CMD+I': 'italic',\n        'CMD+U': 'underline',\n        'CMD+SHIFT+S': 'strikethrough',\n        'CMD+BACKSLASH': 'removeFormat',\n        'CMD+SHIFT+L': 'justifyLeft',\n        'CMD+SHIFT+E': 'justifyCenter',\n        'CMD+SHIFT+R': 'justifyRight',\n        'CMD+SHIFT+J': 'justifyFull',\n        'CMD+SHIFT+NUM7': 'insertUnorderedList',\n        'CMD+SHIFT+NUM8': 'insertOrderedList',\n        'CMD+LEFTBRACKET': 'outdent',\n        'CMD+RIGHTBRACKET': 'indent',\n        'CMD+NUM0': 'formatPara',\n        'CMD+NUM1': 'formatH1',\n        'CMD+NUM2': 'formatH2',\n        'CMD+NUM3': 'formatH3',\n        'CMD+NUM4': 'formatH4',\n        'CMD+NUM5': 'formatH5',\n        'CMD+NUM6': 'formatH6',\n        'CMD+ENTER': 'insertHorizontalRule',\n        'CMD+K': 'linkDialog.show',\n      },\n    },\n    icons: {\n      'align': 'note-icon-align',\n      'alignCenter': 'note-icon-align-center',\n      'alignJustify': 'note-icon-align-justify',\n      'alignLeft': 'note-icon-align-left',\n      'alignRight': 'note-icon-align-right',\n      'rowBelow': 'note-icon-row-below',\n      'colBefore': 'note-icon-col-before',\n      'colAfter': 'note-icon-col-after',\n      'rowAbove': 'note-icon-row-above',\n      'rowRemove': 'note-icon-row-remove',\n      'colRemove': 'note-icon-col-remove',\n      'indent': 'note-icon-align-indent',\n      'outdent': 'note-icon-align-outdent',\n      'arrowsAlt': 'note-icon-arrows-alt',\n      'bold': 'note-icon-bold',\n      'caret': 'note-icon-caret',\n      'circle': 'note-icon-circle',\n      'close': 'note-icon-close',\n      'code': 'note-icon-code',\n      'eraser': 'note-icon-eraser',\n      'floatLeft': 'note-icon-float-left',\n      'floatRight': 'note-icon-float-right',\n      'font': 'note-icon-font',\n      'frame': 'note-icon-frame',\n      'italic': 'note-icon-italic',\n      'link': 'note-icon-link',\n      'unlink': 'note-icon-chain-broken',\n      'magic': 'note-icon-magic',\n      'menuCheck': 'note-icon-menu-check',\n      'minus': 'note-icon-minus',\n      'orderedlist': 'note-icon-orderedlist',\n      'pencil': 'note-icon-pencil',\n      'picture': 'note-icon-picture',\n      'question': 'note-icon-question',\n      'redo': 'note-icon-redo',\n      'rollback': 'note-icon-rollback',\n      'square': 'note-icon-square',\n      'strikethrough': 'note-icon-strikethrough',\n      'subscript': 'note-icon-subscript',\n      'superscript': 'note-icon-superscript',\n      'table': 'note-icon-table',\n      'textHeight': 'note-icon-text-height',\n      'trash': 'note-icon-trash',\n      'underline': 'note-icon-underline',\n      'undo': 'note-icon-undo',\n      'unorderedlist': 'note-icon-unorderedlist',\n      'video': 'note-icon-video',\n    },\n  },\n});\n","import $ from 'jquery';\n\nclass Renderer {\n  constructor(markup, children, options, callback) {\n    this.markup = markup;\n    this.children = children;\n    this.options = options;\n    this.callback = callback;\n  }\n\n  render($parent) {\n    const $node = $(this.markup);\n\n    if (this.options && this.options.contents) {\n      $node.html(this.options.contents);\n    }\n\n    if (this.options && this.options.className) {\n      $node.addClass(this.options.className);\n    }\n\n    if (this.options && this.options.data) {\n      $.each(this.options.data, (k, v) => {\n        $node.attr('data-' + k, v);\n      });\n    }\n\n    if (this.options && this.options.click) {\n      $node.on('click', this.options.click);\n    }\n\n    if (this.children) {\n      const $container = $node.find('.note-children-container');\n      this.children.forEach((child) => {\n        child.render($container.length ? $container : $node);\n      });\n    }\n\n    if (this.callback) {\n      this.callback($node, this.options);\n    }\n\n    if (this.options && this.options.callback) {\n      this.options.callback($node);\n    }\n\n    if ($parent) {\n      $parent.append($node);\n    }\n\n    return $node;\n  }\n}\n\nexport default {\n  create: (markup, callback) => {\n    return function() {\n      const options = typeof arguments[1] === 'object' ? arguments[1] : arguments[0];\n      let children = Array.isArray(arguments[0]) ? arguments[0] : [];\n      if (options && options.children) {\n        children = options.children;\n      }\n      return new Renderer(markup, children, options, callback);\n    };\n  },\n};\n","import $ from 'jquery';\nimport '@/js/settings.js';\nimport renderer from '@/js/renderer';\n\nimport './summernote-bs4.scss';\n\nconst editor = renderer.create('<div class=\"note-editor note-frame card\"></div>');\nconst toolbar = renderer.create('<div class=\"note-toolbar card-header\" role=\"toolbar\"></div>');\nconst editingArea = renderer.create('<div class=\"note-editing-area\"></div>');\nconst codable = renderer.create('<textarea class=\"note-codable\" aria-multiline=\"true\"></textarea>');\nconst editable = renderer.create(\n  '<div class=\"note-editable card-block\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>',\n);\nconst statusbar = renderer.create(\n  [\n    '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\n    '<div class=\"note-statusbar\" role=\"status\">',\n    '<div class=\"note-resizebar\" aria-label=\"Resize\">',\n    '<div class=\"note-icon-bar\"></div>',\n    '<div class=\"note-icon-bar\"></div>',\n    '<div class=\"note-icon-bar\"></div>',\n    '</div>',\n    '</div>',\n  ].join(''),\n);\n\nconst airEditor = renderer.create('<div class=\"note-editor note-airframe\"></div>');\nconst airEditable = renderer.create(\n  [\n    '<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>',\n    '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\n  ].join(''),\n);\n\nconst buttonGroup = renderer.create('<div class=\"note-btn-group btn-group\"></div>');\n\nconst dropdown = renderer.create(\n  '<div class=\"note-dropdown-menu dropdown-menu\" role=\"list\"></div>',\n  function($node, options) {\n    const markup = Array.isArray(options.items)\n      ? options.items\n        .map(function(item) {\n          const value = typeof item === 'string' ? item : item.value || '';\n          const content = options.template ? options.template(item) : item;\n          const option = typeof item === 'object' ? item.option : undefined;\n\n          const dataValue = 'data-value=\"' + value + '\"';\n          const dataOption = option !== undefined ? ' data-option=\"' + option + '\"' : '';\n          return (\n            '<a class=\"dropdown-item\" href=\"#\" ' +\n              (dataValue + dataOption) +\n              ' role=\"listitem\" aria-label=\"' +\n              value +\n              '\">' +\n              content +\n              '</a>'\n          );\n        })\n        .join('')\n      : options.items;\n\n    $node.html(markup).attr({ 'aria-label': options.title });\n\n    if (options && options.codeviewKeepButton) {\n      $node.addClass('note-codeview-keep');\n    }\n  },\n);\n\nconst dropdownButtonContents = function(contents) {\n  return contents;\n};\n\nconst dropdownCheck = renderer.create(\n  '<div class=\"note-dropdown-menu dropdown-menu note-check\" role=\"list\"></div>',\n  function($node, options) {\n    const markup = Array.isArray(options.items)\n      ? options.items\n        .map(function(item) {\n          const value = typeof item === 'string' ? item : item.value || '';\n          const content = options.template ? options.template(item) : item;\n          return (\n            '<a class=\"dropdown-item\" href=\"#\" data-value=\"' +\n              value +\n              '\" role=\"listitem\" aria-label=\"' +\n              item +\n              '\">' +\n              icon(options.checkClassName) +\n              ' ' +\n              content +\n              '</a>'\n          );\n        })\n        .join('')\n      : options.items;\n    $node.html(markup).attr({ 'aria-label': options.title });\n\n    if (options && options.codeviewKeepButton) {\n      $node.addClass('note-codeview-keep');\n    }\n  },\n);\n\nconst dialog = renderer.create(\n  '<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"></div>',\n  function($node, options) {\n    if (options.fade) {\n      $node.addClass('fade');\n    }\n    $node.attr({\n      'aria-label': options.title,\n    });\n    $node.html(\n      [\n        '<div class=\"modal-dialog\">',\n        '<div class=\"modal-content\">',\n        options.title\n          ? '<div class=\"modal-header\">' +\n            '<h4 class=\"modal-title\">' +\n            options.title +\n            '</h4>' +\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button>' +\n            '</div>'\n          : '',\n        '<div class=\"modal-body\">' + options.body + '</div>',\n        options.footer ? '<div class=\"modal-footer\">' + options.footer + '</div>' : '',\n        '</div>',\n        '</div>',\n      ].join(''),\n    );\n  },\n);\n\nconst popover = renderer.create(\n  [\n    '<div class=\"note-popover popover in\">',\n    '<div class=\"arrow\"></div>',\n    '<div class=\"popover-content note-children-container\"></div>',\n    '</div>',\n  ].join(''),\n  function($node, options) {\n    const direction = typeof options.direction !== 'undefined' ? options.direction : 'bottom';\n\n    $node.addClass(direction);\n\n    if (options.hideArrow) {\n      $node.find('.arrow').hide();\n    }\n  },\n);\n\nconst checkbox = renderer.create('<div class=\"form-check\"></div>', function($node, options) {\n  $node.html(\n    [\n      '<label class=\"form-check-label\"' + (options.id ? ' for=\"note-' + options.id + '\"' : '') + '>',\n      '<input type=\"checkbox\" class=\"form-check-input\"' + (options.id ? ' id=\"note-' + options.id + '\"' : ''),\n      options.checked ? ' checked' : '',\n      ' aria-label=\"' + (options.text ? options.text : '') + '\"',\n      ' aria-checked=\"' + (options.checked ? 'true' : 'false') + '\"/>',\n      ' ' + (options.text ? options.text : '') + '</label>',\n    ].join(''),\n  );\n});\n\nconst icon = function(iconClassName, tagName) {\n  if (iconClassName.match(/^</)) {\n    return iconClassName;\n  }\n  tagName = tagName || 'i';\n  return '<' + tagName + ' class=\"' + iconClassName + '\"></' + tagName + '>';\n};\n\nconst ui = function(editorOptions) {\n  return {\n    editor: editor,\n    toolbar: toolbar,\n    editingArea: editingArea,\n    codable: codable,\n    editable: editable,\n    statusbar: statusbar,\n    airEditor: airEditor,\n    airEditable: airEditable,\n    buttonGroup: buttonGroup,\n    dropdown: dropdown,\n    dropdownButtonContents: dropdownButtonContents,\n    dropdownCheck: dropdownCheck,\n    dialog: dialog,\n    popover: popover,\n    icon: icon,\n    checkbox: checkbox,\n    options: editorOptions,\n\n    palette: function($node, options) {\n      return renderer.create('<div class=\"note-color-palette\"></div>', function($node, options) {\n        const contents = [];\n        for (let row = 0, rowSize = options.colors.length; row < rowSize; row++) {\n          const eventName = options.eventName;\n          const colors = options.colors[row];\n          const colorsName = options.colorsName[row];\n          const buttons = [];\n          for (let col = 0, colSize = colors.length; col < colSize; col++) {\n            const color = colors[col];\n            const colorName = colorsName[col];\n            buttons.push(\n              [\n                '<button type=\"button\" class=\"note-color-btn\"',\n                'style=\"background-color:',\n                color,\n                '\" ',\n                'data-event=\"',\n                eventName,\n                '\" ',\n                'data-value=\"',\n                color,\n                '\" ',\n                'title=\"',\n                colorName,\n                '\" ',\n                'aria-label=\"',\n                colorName,\n                '\" ',\n                'data-toggle=\"button\" tabindex=\"-1\"></button>',\n              ].join(''),\n            );\n          }\n          contents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\n        }\n        $node.html(contents.join(''));\n\n        if (options.tooltip) {\n          var tooltipOptions = {\n            container: options.container || editorOptions.container,\n            trigger: 'hover',\n            placement: 'bottom',\n          };\n\n          $node.tooltip({\n            selector: '.note-color-btn',\n            ...tooltipOptions,\n          });\n        }\n      })($node, options);\n    },\n\n    button: function($node, options) {\n      return renderer.create(\n        '<button type=\"button\" class=\"note-btn btn btn-light btn-sm\" tabindex=\"-1\"></button>',\n        function($node, options) {\n          if (options && options.tooltip) {\n            $node\n              .attr({\n                title: options.tooltip,\n                'aria-label': options.tooltip,\n              })\n              .tooltip({\n                container: options.container || editorOptions.container,\n                trigger: 'hover',\n                placement: 'bottom',\n              })\n              .on('click', (e) => {\n                $(e.currentTarget).tooltip('hide');\n              });\n          }\n          if (options && options.codeviewButton) {\n            $node.addClass('note-codeview-keep');\n          }\n        },\n      )($node, options);\n    },\n\n    toggleBtn: function($btn, isEnable) {\n      $btn.toggleClass('disabled', !isEnable);\n      $btn.attr('disabled', !isEnable);\n    },\n\n    toggleBtnActive: function($btn, isActive) {\n      $btn.toggleClass('active', isActive);\n    },\n\n    onDialogShown: function($dialog, handler) {\n      $dialog.one('shown.bs.modal', handler);\n    },\n\n    onDialogHidden: function($dialog, handler) {\n      $dialog.one('hidden.bs.modal', handler);\n    },\n\n    showDialog: function($dialog) {\n      $dialog.modal('show');\n    },\n\n    hideDialog: function($dialog) {\n      $dialog.modal('hide');\n    },\n\n    createLayout: function($note) {\n      const $editor = (\n        editorOptions.airMode\n          ? airEditor([editingArea([codable(), airEditable()])])\n          : editorOptions.toolbarPosition === 'bottom'\n            ? editor([editingArea([codable(), editable()]), toolbar(), statusbar()])\n            : editor([toolbar(), editingArea([codable(), editable()]), statusbar()])\n      ).render();\n\n      $editor.insertAfter($note);\n\n      return {\n        note: $note,\n        editor: $editor,\n        toolbar: $editor.find('.note-toolbar'),\n        editingArea: $editor.find('.note-editing-area'),\n        editable: $editor.find('.note-editable'),\n        codable: $editor.find('.note-codable'),\n        statusbar: $editor.find('.note-statusbar'),\n      };\n    },\n\n    removeLayout: function($note, layoutInfo) {\n      $note.html(layoutInfo.editable.html());\n      layoutInfo.editor.remove();\n      $note.show();\n    },\n  };\n};\n\n$.summernote = $.extend($.summernote, {\n  ui_template: ui,\n  interface: 'bs4',\n});\n\n$.summernote.options.styleTags = [\n  'p',\n  {\n    title: 'Blockquote',\n    tag: 'blockquote',\n    className: 'blockquote',\n    value: 'blockquote',\n  },\n  'pre',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n];\n"],"names":["genericFontFamilies","validFontName","fontName","createIsFontInstalledFunc","testText","fontSize","canvas","context","getPxInfo","font","testFontName","pxInfo","testInfo","fontInfo","userAgent","isMSIE","browserVersion","matches","isEdge","isSupportTouch","inputEventName","env","eq","itemA","itemB","eq2","peq2","propName","ok","fail","not","f","and","fA","fB","item","self","a","invoke","obj","method","idCounter","resetUniqueId","uniqueId","prefix","id","rect2bnd","rect","$document","invertObject","inverted","key","namespaceToCamel","namespace","name","debounce","func","wait","immediate","timeout","args","later","callNow","isValidUrl","url","head","array","last","initial","tail","find","pred","idx","len","all","contains","sum","fn","memo","v","from","collection","result","length","isEmpty","clusterBy","aLast","compact","aResult","unique","results","next","prev","lists","NBSP_CHAR","ZERO_WIDTH_NBSP_CHAR","isEditable","node","isControlSizing","makePredByNodeName","nodeName","isText","isElement","isVoid","isPara","isHeading","isPre","isLi","isPurePara","isTable","isData","isInline","isBodyContainer","isList","isHr","isBlockquote","isCell","isAnchor","isParaInline","ancestor","isBodyInline","isBody","isClosestSibling","nodeA","nodeB","withClosestSiblings","siblings","blankHTML","nodeLength","deepestChildIsEmpty","paddingBlankHTML","singleChildAncestor","listAncestor","ancestors","el","lastAncestor","commonAncestor","n","listPrev","nodes","listNext","listDescendant","descendants","fnWalk","current","wrap","wrapperName","parent","wrapper","insertAfter","preceding","appendChildNodes","aChild","isSkipPaddingBlankHTML","child","create","isLeftEdgePoint","point","isRightEdgePoint","isEdgePoint","isLeftEdgeOf","position","isRightEdgeOf","isLeftEdgePointOf","isRightEdgePointOf","offset","hasChildren","prevPoint","isSkipInnerOffset","nextPoint","nextTextNode","getNextTextNode","nextPointWithEmptyNode","actual","isSamePoint","pointA","pointB","isVisiblePoint","leftNode","rightNode","prevPointUntil","nextPointUntil","isCharPoint","ch","isSpacePoint","walkPoint","startPoint","endPoint","handler","isSkipOffset","makeOffsetPath","fromOffsetPath","offsets","i","splitNode","options","isNotSplitEdgePoint","isDiscardEmptySplits","childNode","childNodes","clone","remove","splitTree","root","ifHasNextSibling","nestSibling","textNode","splitPoint","topAncestor","splitRoot","container","pivot","createText","text","isRemoveChild","removeWhile","replace","newNode","isTextarea","value","$node","stripLinebreaks","val","html","isNewlineOnBlock","markup","regexTag","match","endSlash","isEndOfInlineContainer","isBlockNode","posFromPlaceholder","placeholder","$placeholder","pos","height","attachEvents","events","detachEvents","isCustomStyleTag","dom","Context","$note","disabled","buttons","modules","isActivated","callback","module","ModuleClass","withoutIntialize","event","$target","splits","hasSeparator","moduleName","methodName","type","isExternalAPICalled","hasInitOptions","note","textRangeToPoint","textRange","isStart","tester","prevContainer","textRangeStart","curTextNode","pointTester","textCount","pointToTextRange","textRangeInfo","isCollapseToStart","prevTextNodes","info","WrappedRange","sc","so","ec","eo","w3cRange","nativeRng","selection","getVisiblePoint","isLeftToRight","block","hasRightNode","hasLeftNode","includeAncestor","fullyContains","leftEdgeNodes","startAncestor","endAncestor","boundaryPoints","isSameContainer","rng","emptyParents","inlineSiblings","para","doNotInsertPara","contentsContainer","reversed","findAfter","isNotTextPoint","regex","editable","paras","range","wrappedRange","bodyElement","textRangeEnd","bookmark","KEY_MAP","keyCode","readFileAsDataURL","file","deferred","dataURL","err","createImage","$img","History","emptyBookmark","snapshot","Style","$obj","propertyNames","propertyName","properties","styleInfo","expandClosestSibling","onlyPartialContains","nodesInRange","tails","elem","$cont","isUnordered","lineHeight","Bullet","clustereds","previousList","listName","wrappedParas","diffLists","listNode","prevList","nextList","isEscapseToBody","releasedParas","headList","parentItem","newList","lastList","middleList","rootLists","rootList","listNodes","Typing","tabsize","tab","nextPara","blockquote","split","emptyAnchors","anchor","TableResultAction","where","action","domTable","_startPoint","_virtualTable","_actionCellList","setStartPoint","setVirtualTablePosition","rowIndex","cellIndex","baseRow","baseCell","isRowSpan","isColSpan","isVirtualCell","objPosition","getActionCell","virtualTableCellObj","resultAction","virtualRowPosition","virtualColPosition","recoverCellIndex","newCellIndex","addCellInfoToVirtual","row","cell","cellHasColspan","cellHasRowspan","isThisSelectedCell","rowspanNumber","rp","rowspanIndex","adjustStartPoint","colspanNumber","cp","cellspanIndex","isSelectedCell","createVirtualTable","rows","cells","getDeleteResultActionToCell","getAddResultActionToCell","init","fixedRow","fixedCol","actualPosition","canContinue","rowPosition","colPosition","Table","isShift","table","nextCell","currentTr","trAttributes","actions","idCell","currentCell","tdAttributes","newTd","lastTrIndex","actionIndex","resultStr","attrList","cellPos","rowPos","virtualPosition","hasRowspan","nextRow","cloneRow","colCount","rowCount","tds","tdHTML","idxCol","trs","trHTML","idxRow","$table","KEY_BOGUS","MAILTO_PATTERN","TEL_PATTERN","URL_SCHEME_PATTERN","Editor","commands","sCmd","unit","size","contents","tagName","onApplyCustomStyle","hrNode","linkInfo","rel","linkUrl","linkText","isNewWindow","addNoReferrer","addNoOpener","additionalTextLength","isTextChanged","anchors","colorInfo","foreColor","backColor","dim","dimension","lastRange","keyMap","keys","keyName","eventName","pad","lst","thenCollapse","isPreventTrigger","src","param","$image","e","files","filename","currentRange","$parent","className","target","spans","firstSpan","noteStatusOutput","$anchor","bKeepRatio","imageSize","newRatio","ratio","Clipboard","clipboardData","clipboardFiles","clipboardText","Dropzone","$dropzoneMessage","isCodeview","hasEditorSize","dataTransfer","content","CodeView","CodeMirror","whitelist","tag","cmEditor","server","cm","isChange","EDITABLE_PADDING","Statusbar","editableTop","editableCodeTop","onStatusbarMove","originalEvent","heightCode","Fullscreen","isFullscreen","Handle","we","posStart","scrollTop","onMouseMove","isImage","$selection","areaRect","imageRect","origImageObj","sizingText","defaultScheme","linkPattern","AutoLink","keyword","link","urlText","wordRange","AutoSync","AutoReplace","Placeholder","isShow","Buttons","editorMethod","shortcut","o","tooltip","$button","$recentColor","$dropdown","$holder","customColors","$chip","color","$picker","$palette","$color","$currentButton","title","style","styleIdx","styleLen","fontname","justifyLeft","justifyCenter","justifyRight","justifyFull","outdent","indent","$container","groups","groupIdx","groupLen","group","groupName","$group","btn","fontNames","$item","isChecked","fontSizeUnit","infos","selector","$dimensionDisplay","$catcher","$highlighted","$unhighlighted","posOffset","posCatcher","Toolbar","editorHeight","editorWidth","toolbarHeight","statusbarHeight","otherBarHeight","currentOffset","editorOffsetTop","editorOffsetBottom","activateOffset","deactivateOffsetBottom","isIncludeCodeview","$btn","LinkDialog","body","footer","$input","$linkBtn","$linkText","$linkUrl","$openInNewWindow","div","isNewWindowChecked","LinkPopover","$content","href","containerOffset","ImageDialog","imageLimitation","readableSize","data","$imageInput","$imageUrl","$imageBtn","ImagePopover","TablePopover","VideoDialog","ytRegExp","ytRegExpForStart","ytMatch","gdRegExp","gdMatch","igRegExp","igMatch","vRegExp","vMatch","vimRegExp","vimMatch","dmRegExp","dmMatch","youkuRegExp","youkuMatch","peerTubeRegExp","peerTubeMatch","qqRegExp","qqMatch","qqRegExp2","qqMatch2","mp4RegExp","mp4Match","oggRegExp","oggMatch","webmRegExp","webmMatch","fbRegExp","fbMatch","$video","youtubeId","start","ytMatchForStart","r","begin","end","loop","autoplay","muted","vid","$videoUrl","$videoBtn","HelpDialog","command","$row","AIRMODE_POPOVER_X_OFFSET","AIRMODE_POPOVER_Y_OFFSET","AirPopover","bnd","forcelyOpen","POPOVER_DIST","HintPopover","$current","$next","$nextGroup","$prev","$prevGroup","rangeCompute","blank","hint","hintIdx","items","index","Codeview","Renderer","children","k","renderer","editor","toolbar","editingArea","codable","statusbar","airEditor","airEditable","buttonGroup","dropdown","option","dataValue","dataOption","dropdownButtonContents","dropdownCheck","icon","dialog","popover","direction","checkbox","iconClassName","ui","editorOptions","rowSize","colors","colorsName","col","colSize","colorName","tooltipOptions","isEnable","isActive","$dialog","$editor","layoutInfo"],"mappings":"yBAEA,EAAA,WAAA,EAAA,YAAA,CACA,KAAA,CAAA,CACA,EAEA,EAAA,OAAA,GAAA,EAAA,WAAA,KAAA,CACA,QAAA,CACA,KAAA,CACA,KAAA,OACA,OAAA,SACA,UAAA,YACA,MAAA,oBACA,OAAA,cACA,KAAA,cACA,cAAA,gBACA,UAAA,YACA,YAAA,cACA,KAAA,YACA,SAAA,gBACA,EACA,MAAA,CACA,MAAA,UACA,OAAA,eACA,WAAA,cACA,WAAA,cACA,cAAA,iBACA,WAAA,gBACA,UAAA,aACA,WAAA,cACA,UAAA,eACA,aAAA,iBACA,YAAA,gBACA,eAAA,mBACA,UAAA,cACA,cAAA,0BACA,UAAA,qBACA,gBAAA,oBACA,gBAAA,oBACA,qBAAA,8BACA,IAAA,YACA,OAAA,eACA,SAAA,UACA,EACA,MAAA,CACA,MAAA,QACA,UAAA,aACA,OAAA,eACA,IAAA,YACA,UAAA,+EACA,EACA,KAAA,CACA,KAAA,OACA,OAAA,cACA,OAAA,SACA,KAAA,OACA,cAAA,kBACA,IAAA,mCACA,gBAAA,oBACA,EACA,MAAA,CACA,MAAA,QACA,YAAA,gBACA,YAAA,gBACA,WAAA,kBACA,YAAA,mBACA,OAAA,aACA,OAAA,gBACA,SAAA,cACA,EACA,GAAA,CACA,OAAA,wBACA,EACA,MAAA,CACA,MAAA,QACA,EAAA,SACA,WAAA,QACA,IAAA,OACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,UACA,EACA,MAAA,CACA,UAAA,iBACA,QAAA,cACA,EACA,QAAA,CACA,KAAA,OACA,WAAA,cACA,SAAA,WACA,EACA,UAAA,CACA,UAAA,YACA,QAAA,UACA,OAAA,SACA,KAAA,aACA,OAAA,eACA,MAAA,cACA,QAAA,cACA,EACA,MAAA,CACA,OAAA,eACA,KAAA,aACA,WAAA,mBACA,WAAA,aACA,YAAA,cACA,eAAA,kBACA,MAAA,QACA,eAAA,mBACA,SAAA,QACA,EACA,SAAA,CACA,UAAA,qBACA,MAAA,QACA,eAAA,kBACA,OAAA,SACA,oBAAA,uBACA,cAAA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,IAAA,SACA,MAAA,kBACA,SAAA,OACA,SAAA,OACA,IAAA,MACA,YAAA,QACA,SAAA,OACA,SAAA,SACA,SAAA,YACA,eAAA,gBACA,iBAAA,eACA,eAAA,cACA,eAAA,gBACA,eAAA,eACA,eAAA,cACA,kBAAA,sBACA,kBAAA,oBACA,mBAAA,UACA,oBAAA,SACA,YAAA,aACA,YAAA,WACA,YAAA,WACA,YAAA,WACA,YAAA,WACA,YAAA,WACA,YAAA,WACA,aAAA,uBACA,SAAA,iBACA,EAEA,IAAA,CACA,IAAA,SACA,MAAA,kBACA,QAAA,OACA,cAAA,OACA,IAAA,MACA,YAAA,QACA,QAAA,OACA,QAAA,SACA,QAAA,YACA,cAAA,gBACA,gBAAA,eACA,cAAA,cACA,cAAA,gBACA,cAAA,eACA,cAAA,cACA,iBAAA,sBACA,iBAAA,oBACA,kBAAA,UACA,mBAAA,SACA,WAAA,aACA,WAAA,WACA,WAAA,WACA,WAAA,WACA,WAAA,WACA,WAAA,WACA,WAAA,WACA,YAAA,uBACA,QAAA,iBACA,CACA,EACA,MAAA,CACA,MAAA,kBACA,YAAA,yBACA,aAAA,0BACA,UAAA,uBACA,WAAA,wBACA,SAAA,sBACA,UAAA,uBACA,SAAA,sBACA,SAAA,sBACA,UAAA,uBACA,UAAA,uBACA,OAAA,yBACA,QAAA,0BACA,UAAA,uBACA,KAAA,iBACA,MAAA,kBACA,OAAA,mBACA,MAAA,kBACA,KAAA,iBACA,OAAA,mBACA,UAAA,uBACA,WAAA,wBACA,KAAA,iBACA,MAAA,kBACA,OAAA,mBACA,KAAA,iBACA,OAAA,yBACA,MAAA,kBACA,UAAA,uBACA,MAAA,kBACA,YAAA,wBACA,OAAA,mBACA,QAAA,oBACA,SAAA,qBACA,KAAA,iBACA,SAAA,qBACA,OAAA,mBACA,cAAA,0BACA,UAAA,sBACA,YAAA,wBACA,MAAA,kBACA,WAAA,wBACA,MAAA,kBACA,UAAA,sBACA,KAAA,iBACA,cAAA,0BACA,MAAA,iBACA,CACA,CACA,CAAA,EC/WA,MAAAiB,EAAA,CACA,YAAAxd,EAAAyd,EAAAvf,EAAA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"}